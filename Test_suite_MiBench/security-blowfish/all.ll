; ModuleID = 'all.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armv7-ellcc-linux"

%struct.bf_key_st = type { [18 x i32], [1024 x i32] }

@BF_version = global i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i32 0, i32 0), align 4
@.str = private unnamed_addr constant [42 x i8] c"BlowFish part of SSLeay 0.7.0 30-Jan-1997\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"blowfish(idx)\00", align 1
@bf_init = internal global %struct.bf_key_st { [18 x i32] [i32 608135816, i32 -2052912941, i32 320440878, i32 57701188, i32 -1542899678, i32 698298832, i32 137296536, i32 -330404727, i32 1160258022, i32 953160567, i32 -1101764913, i32 887688300, i32 -1062458953, i32 -914599715, i32 1065670069, i32 -1253635817, i32 -1843997223, i32 -1988494565], [1024 x i32] [i32 -785314906, i32 -1730169428, i32 805139163, i32 -803545161, i32 -1193168915, i32 1780907670, i32 -1166241723, i32 -248741991, i32 614570311, i32 -1282315017, i32 134345442, i32 -2054226922, i32 1667834072, i32 1901547113, i32 -1537671517, i32 -191677058, i32 227898511, i32 1921955416, i32 1904987480, i32 -2112533778, i32 2069144605, i32 -1034266187, i32 -1674521287, i32 720527379, i32 -976113629, i32 677414384, i32 -901678824, i32 -1193592593, i32 -1904616272, i32 1614419982, i32 1822297739, i32 -1340175810, i32 -686458943, i32 -1120842969, i32 2024746970, i32 1432378464, i32 -430627341, i32 -1437226092, i32 1464375394, i32 1676153920, i32 1439316330, i32 715854006, i32 -1261675468, i32 289532110, i32 -1588296017, i32 2087905683, i32 -1276242927, i32 1668267050, i32 732546397, i32 1947742710, i32 -832815594, i32 -1685613794, i32 -1344882125, i32 1814351708, i32 2050118529, i32 680887927, i32 999245976, i32 1800124847, i32 -994056165, i32 1713906067, i32 1641548236, i32 -81679983, i32 1216130144, i32 1575780402, i32 -276538019, i32 -377129551, i32 -601480446, i32 -345695352, i32 596196993, i32 -745100091, i32 258830323, i32 -2081144263, i32 772490370, i32 -1534844924, i32 1774776394, i32 -1642095778, i32 566650946, i32 -152474470, i32 1728879713, i32 -1412200208, i32 1783734482, i32 -665571480, i32 -1777359064, i32 -1420741725, i32 1861159788, i32 326777828, i32 -1170476976, i32 2130389656, i32 -1578015459, i32 967770486, i32 1724537150, i32 -2109534584, i32 -1930525159, i32 1164943284, i32 2105845187, i32 998989502, i32 -529566248, i32 -2050940813, i32 1075463327, i32 1455516326, i32 1322494562, i32 910128902, i32 469688178, i32 1117454909, i32 936433444, i32 -804646328, i32 -619713837, i32 1240580251, i32 122909385, i32 -2137449605, i32 634681816, i32 -152510729, i32 -469872614, i32 -1233564613, i32 -1754472259, i32 79693498, i32 -1045868618, i32 1084186820, i32 1583128258, i32 426386531, i32 1761308591, i32 1047286709, i32 322548459, i32 995290223, i32 1845252383, i32 -1691314900, i32 -863943356, i32 -1352745719, i32 -1092366332, i32 -567063811, i32 1712269319, i32 422464435, i32 -1060394921, i32 1170764815, i32 -771006663, i32 -1177289765, i32 1434042557, i32 442511882, i32 -694091578, i32 1076654713, i32 1738483198, i32 -81812532, i32 -1901729288, i32 -617471240, i32 1014306527, i32 -43947243, i32 793779912, i32 -1392160085, i32 842905082, i32 -48003232, i32 1395751752, i32 1040244610, i32 -1638115397, i32 -898659168, i32 445077038, i32 -552113701, i32 -717051658, i32 679411651, i32 -1402522938, i32 -1940957837, i32 1767581616, i32 -1144366904, i32 -503340195, i32 -1192226400, i32 284835224, i32 -48135240, i32 1258075500, i32 768725851, i32 -1705778055, i32 -1225243291, i32 -762426948, i32 1274779536, i32 -505548070, i32 -1530167757, i32 1660621633, i32 -823867672, i32 -283063590, i32 913787905, i32 -797008130, i32 737222580, i32 -1780753843, i32 -1366257256, i32 -357724559, i32 1804850592, i32 -795946544, i32 -1345903136, i32 -1908647121, i32 -1904896841, i32 -1879645445, i32 -233690268, i32 -2004305902, i32 -1878134756, i32 1336762016, i32 1754252060, i32 -774901359, i32 -1280786003, i32 791618072, i32 -1106372745, i32 -361419266, i32 -1962795103, i32 -442446833, i32 -1250986776, i32 413987798, i32 -829824359, i32 -1264037920, i32 -49028937, i32 2093235073, i32 -760370983, i32 375366246, i32 -2137688315, i32 -1815317740, i32 555357303, i32 -424861595, i32 2008414854, i32 -950779147, i32 -73583153, i32 -338841844, i32 2067696032, i32 -700376109, i32 -1373733303, i32 2428461, i32 544322398, i32 577241275, i32 1471733935, i32 610547355, i32 -267798242, i32 1432588573, i32 1507829418, i32 2025931657, i32 -648391809, i32 545086370, i32 48609733, i32 -2094660746, i32 1653985193, i32 298326376, i32 1316178497, i32 -1287180854, i32 2064951626, i32 458293330, i32 -1705826027, i32 -703637697, i32 -1130641692, i32 727753846, i32 -2115603456, i32 146436021, i32 1461446943, i32 -224990101, i32 705550613, i32 -1235000031, i32 -407242314, i32 -13368018, i32 -981117340, i32 1404054877, i32 -1449160799, i32 146425753, i32 1854211946, i32 1266315497, i32 -1246549692, i32 -613086930, i32 -1004984797, i32 -1385257296, i32 1235738493, i32 -1662099272, i32 -1880247706, i32 -324367247, i32 1771706367, i32 1449415276, i32 -1028546847, i32 422970021, i32 1963543593, i32 -1604775104, i32 -468174274, i32 1062508698, i32 1531092325, i32 1804592342, i32 -1711849514, i32 -1580033017, i32 -269995787, i32 1294809318, i32 -265986623, i32 1289560198, i32 -2072974554, i32 1669523910, i32 35572830, i32 157838143, i32 1052438473, i32 1016535060, i32 1802137761, i32 1753167236, i32 1386275462, i32 -1214491899, i32 -1437595849, i32 1040679964, i32 2145300060, i32 -1904392980, i32 1461121720, i32 -1338320329, i32 -263189491, i32 -266592508, i32 33600511, i32 -1374882534, i32 1018524850, i32 629373528, i32 -603381315, i32 -779021319, i32 2091462646, i32 -1808644237, i32 586499841, i32 988145025, i32 935516892, i32 -927631820, i32 -1695294041, i32 -1455136442, i32 265290510, i32 -322386114, i32 -1535828415, i32 -499593831, i32 1005194799, i32 847297441, i32 406762289, i32 1314163512, i32 1332590856, i32 1866599683, i32 -167115585, i32 750260880, i32 613907577, i32 1450815602, i32 -1129346641, i32 -560302305, i32 -644675568, i32 -1282691566, i32 -590397650, i32 1427272223, i32 778793252, i32 1343938022, i32 -1618686585, i32 2052605720, i32 1946737175, i32 -1130390852, i32 -380928628, i32 -327488454, i32 -612033030, i32 1661551462, i32 -1000029230, i32 -283371449, i32 840292616, i32 -582796489, i32 616741398, i32 312560963, i32 711312465, i32 1351876610, i32 322626781, i32 1910503582, i32 271666773, i32 -2119403562, i32 1594956187, i32 70604529, i32 -677132437, i32 1007753275, i32 1495573769, i32 -225450259, i32 -1745748998, i32 -1631928532, i32 504708206, i32 -2031925904, i32 -353800271, i32 -2045878774, i32 1514023603, i32 1998579484, i32 1312622330, i32 694541497, i32 -1712906993, i32 -2143385130, i32 1382467621, i32 776784248, i32 -1676627094, i32 -971698502, i32 -1797068168, i32 -1510196141, i32 503983604, i32 -218673497, i32 907881277, i32 423175695, i32 432175456, i32 1378068232, i32 -149744970, i32 -340918674, i32 -356311194, i32 -474200683, i32 -1501837181, i32 -1317062703, i32 26017576, i32 -1020076561, i32 -1100195163, i32 1700274565, i32 1756076034, i32 -288447217, i32 -617638597, i32 720338349, i32 1533947780, i32 354530856, i32 688349552, i32 -321042571, i32 1637815568, i32 332179504, i32 -345916010, i32 53804574, i32 -1442618417, i32 -1250730864, i32 1282449977, i32 -711025141, i32 -877994476, i32 -288586052, i32 1617046695, i32 -1666491221, i32 -1292663698, i32 1686838959, i32 431878346, i32 -1608291911, i32 1700445008, i32 1080580658, i32 1009431731, i32 832498133, i32 -1071531785, i32 -1688990951, i32 -2023776103, i32 -1778935426, i32 1648197032, i32 -130578278, i32 -1746719369, i32 300782431, i32 375919233, i32 238389289, i32 -941219882, i32 -1763778655, i32 2019080857, i32 1475708069, i32 455242339, i32 -1685863425, i32 448939670, i32 -843904277, i32 1395535956, i32 -1881585436, i32 1841049896, i32 1491858159, i32 885456874, i32 -30872223, i32 -293847949, i32 1565136089, i32 -396052509, i32 1108368660, i32 540939232, i32 1173283510, i32 -1549095958, i32 -613658859, i32 -87339056, i32 -951913406, i32 -278217803, i32 1699691293, i32 1103962373, i32 -669091426, i32 -2038084153, i32 -464828566, i32 1031889488, i32 -815619598, i32 1535977030, i32 -58162272, i32 -1043876189, i32 2132092099, i32 1774941330, i32 1199868427, i32 1452454533, i32 157007616, i32 -1390851939, i32 342012276, i32 595725824, i32 1480756522, i32 206960106, i32 497939518, i32 591360097, i32 863170706, i32 -1919713727, i32 -698356495, i32 1814182875, i32 2094937945, i32 -873565088, i32 1082520231, i32 -831049106, i32 -1509457788, i32 435703966, i32 -386934699, i32 1641649973, i32 -1452693590, i32 -989067582, i32 1510255612, i32 -2146710820, i32 -1639679442, i32 -1018874748, i32 -36346107, i32 236887753, i32 -613164077, i32 274041037, i32 1734335097, i32 -479771840, i32 -976997275, i32 1899903192, i32 1026095262, i32 -244449504, i32 356393447, i32 -1884275382, i32 -421290197, i32 -612127241, i32 -381855128, i32 -1803468553, i32 -162781668, i32 -1805047500, i32 1091903735, i32 1979897079, i32 -1124832466, i32 -727580568, i32 -737663887, i32 857797738, i32 1136121015, i32 1342202287, i32 507115054, i32 -1759230650, i32 337727348, i32 -1081374656, i32 1301675037, i32 -1766485585, i32 1895095763, i32 1721773893, i32 -1078195732, i32 62756741, i32 2142006736, i32 835421444, i32 -1762973773, i32 1442658625, i32 -635090970, i32 -1412822374, i32 676362277, i32 1392781812, i32 170690266, i32 -373920261, i32 1759253602, i32 -683120384, i32 1745797284, i32 664899054, i32 1329594018, i32 -393761396, i32 -1249058810, i32 2062866102, i32 -1429332356, i32 -751345684, i32 -830954599, i32 1080764994, i32 553557557, i32 -638351943, i32 -298199125, i32 991055499, i32 499776247, i32 1265440854, i32 648242737, i32 -354183246, i32 980351604, i32 -581221582, i32 1749149687, i32 -898096901, i32 -83167922, i32 -654396521, i32 1161844396, i32 -1169648345, i32 1431517754, i32 545492359, i32 -26498633, i32 -795437749, i32 1437099964, i32 -1592419752, i32 -861329053, i32 -1713251533, i32 -1507177898, i32 1060185593, i32 1593081372, i32 -1876348548, i32 -34019326, i32 69676912, i32 -2135222948, i32 86519011, i32 -1782508216, i32 -456757982, i32 1220612927, i32 -955283748, i32 133810670, i32 1090789135, i32 1078426020, i32 1569222167, i32 845107691, i32 -711212847, i32 -222510705, i32 1091646820, i32 628848692, i32 1613405280, i32 -537335645, i32 526609435, i32 236106946, i32 48312990, i32 -1352249391, i32 -892239595, i32 1797494240, i32 859738849, i32 992217954, i32 -289490654, i32 -2051890674, i32 -424014439, i32 -562951028, i32 765654824, i32 -804095931, i32 -1783130883, i32 1685915746, i32 -405998096, i32 1414112111, i32 -2021832454, i32 -1013056217, i32 -214004450, i32 172450625, i32 -1724973196, i32 980381355, i32 -185008841, i32 -1475158944, i32 -1578377736, i32 -1726226100, i32 -613520627, i32 -964995824, i32 1835478071, i32 660984891, i32 -590288892, i32 -248967737, i32 -872349789, i32 -1254551662, i32 1762651403, i32 1719377915, i32 -824476260, i32 -1601057013, i32 -652910941, i32 -1156370552, i32 1364962596, i32 2073328063, i32 1983633131, i32 926494387, i32 -871278215, i32 -2144935273, i32 -198299347, i32 1749200295, i32 -966120645, i32 309677260, i32 2016342300, i32 1779581495, i32 -1215147545, i32 111262694, i32 1274766160, i32 443224088, i32 298511866, i32 1025883608, i32 -488520759, i32 1145181785, i32 168956806, i32 -653464466, i32 -710153686, i32 1689216846, i32 -628709281, i32 -1094719096, i32 1692713982, i32 -1648590761, i32 -252198778, i32 1618508792, i32 1610833997, i32 -771914938, i32 -164094032, i32 2001055236, i32 -684262196, i32 -2092799181, i32 -266425487, i32 -1333771897, i32 1006657119, i32 2006996926, i32 -1108824540, i32 1430667929, i32 -1084739999, i32 1314452623, i32 -220332638, i32 -193663176, i32 -2021016126, i32 1399257539, i32 -927756684, i32 -1267338667, i32 1190975929, i32 2062231137, i32 -1960976508, i32 -2073424263, i32 -1856006686, i32 1181637006, i32 548689776, i32 -1932175983, i32 -922558900, i32 -1190417183, i32 -1149106736, i32 296247880, i32 1970579870, i32 -1216407114, i32 -525738999, i32 1714227617, i32 -1003338189, i32 -396747006, i32 166772364, i32 1251581989, i32 493813264, i32 448347421, i32 195405023, i32 -1584991729, i32 677966185, i32 -591930749, i32 1463355134, i32 -1578971493, i32 1338867538, i32 1343315457, i32 -1492745222, i32 -1610435132, i32 233230375, i32 -1694987225, i32 2000651841, i32 -1017099258, i32 1638401717, i32 -266896856, i32 -1057650976, i32 6314154, i32 819756386, i32 300326615, i32 590932579, i32 1405279636, i32 -1027467724, i32 -1144263082, i32 -1866680610, i32 -335774303, i32 -833020554, i32 1862657033, i32 1266418056, i32 963775037, i32 2089974820, i32 -2031914401, i32 1917689273, i32 448879540, i32 -744572676, i32 -313240200, i32 150775221, i32 -667058989, i32 1303187396, i32 508620638, i32 -1318983944, i32 -1568336679, i32 1817252668, i32 1876281319, i32 1457606340, i32 908771278, i32 -574175177, i32 -677760460, i32 -1838972398, i32 1729034894, i32 1080033504, i32 976866871, i32 -738527793, i32 -1413318857, i32 1522871579, i32 1555064734, i32 1336096578, i32 -746444992, i32 -1715692610, i32 -720269667, i32 -1089506539, i32 -701686658, i32 -956251013, i32 -1215554709, i32 564236357, i32 -1301368386, i32 1781952180, i32 1464380207, i32 -1131123079, i32 -962365742, i32 1699332808, i32 1393555694, i32 1183702653, i32 -713881059, i32 1288719814, i32 691649499, i32 -1447410096, i32 -1399511320, i32 -1101077756, i32 -1577396752, i32 1781354906, i32 1676643554, i32 -1702433246, i32 -1064713544, i32 1126444790, i32 -1524759638, i32 -1661808476, i32 -2084544070, i32 -1679201715, i32 -1880812208, i32 -1167828010, i32 673620729, i32 -1489356063, i32 1269405062, i32 -279616791, i32 -953159725, i32 -145557542, i32 1057255273, i32 2012875353, i32 -2132498155, i32 -2018474495, i32 -1693849939, i32 993977747, i32 -376373926, i32 -1640704105, i32 753973209, i32 36408145, i32 -1764381638, i32 25011837, i32 -774947114, i32 2088578344, i32 530523599, i32 -1376601957, i32 1524020338, i32 1518925132, i32 -534139791, i32 -535190042, i32 1202760957, i32 -309069157, i32 -388774771, i32 674977740, i32 -120232407, i32 2031300136, i32 2019492241, i32 -311074731, i32 -141160892, i32 -472686964, i32 352677332, i32 -1997247046, i32 60907813, i32 90501309, i32 -1007968747, i32 1016092578, i32 -1759044884, i32 -1455814870, i32 457141659, i32 509813237, i32 -174299397, i32 652014361, i32 1966332200, i32 -1319764491, i32 55981186, i32 -1967506245, i32 676427537, i32 -1039476232, i32 -1412673177, i32 -861040033, i32 1307055953, i32 942726286, i32 933058658, i32 -1826555503, i32 -361066302, i32 -79791154, i32 1361170020, i32 2001714738, i32 -1464409218, i32 -1020707514, i32 1222529897, i32 1679025792, i32 -1565652976, i32 -580013532, i32 1770335741, i32 151462246, i32 -1281735158, i32 1682292957, i32 1483529935, i32 471910574, i32 1539241949, i32 458788160, i32 -858652289, i32 1807016891, i32 -576558466, i32 978976581, i32 1043663428, i32 -1129001515, i32 1927990952, i32 -94075717, i32 -1922690386, i32 -1086558393, i32 -761535389, i32 1412390302, i32 -1362987237, i32 -162634896, i32 1947078029, i32 -413461673, i32 -126740879, i32 -1353482915, i32 1077988104, i32 1320477388, i32 886195818, i32 18198404, i32 -508558296, i32 -1785185763, i32 112762804, i32 -831610808, i32 1866414978, i32 891333506, i32 18488651, i32 661792760, i32 1628790961, i32 -409780260, i32 -1153795797, i32 876946877, i32 -1601685023, i32 1372485963, i32 791857591, i32 -1608533303, i32 -534984578, i32 -1127755274, i32 -822013501, i32 -1578587449, i32 445679433, i32 -732971622, i32 -790962485, i32 -720709064, i32 54117162, i32 -963561881, i32 -1913048708, i32 -525259953, i32 -140617289, i32 1140177722, i32 -220915201, i32 668550556, i32 -1080614356, i32 367459370, i32 261225585, i32 -1684794075, i32 -85617823, i32 -826893077, i32 -1029151655, i32 314222801, i32 -1228863650, i32 -486184436, i32 282218597, i32 -888953790, i32 -521376242, i32 379116347, i32 1285071038, i32 846784868, i32 -1625320142, i32 -523005217, i32 -744475605, i32 -1989021154, i32 453669953, i32 1268987020, i32 -977374944, i32 -1015663912, i32 -550133875, i32 -1684459730, i32 -435458233, i32 266596637, i32 -447948204, i32 517658769, i32 -832407089, i32 -851542417, i32 370717030, i32 -47440635, i32 -2070949179, i32 -151313767, i32 -182193321, i32 -1506642397, i32 -1817692879, i32 1456262402, i32 -1393524382, i32 1517677493, i32 1846949527, i32 -1999473716, i32 -560569710, i32 -2118563376, i32 1280348187, i32 1908823572, i32 -423180355, i32 846861322, i32 1172426758, i32 -1007518822, i32 -911584259, i32 1655181056, i32 -1155153950, i32 901632758, i32 1897031941, i32 -1308360158, i32 -1228157060, i32 -847864789, i32 1393639104, i32 373351379, i32 950779232, i32 625454576, i32 -1170726756, i32 -146354570, i32 2007998917, i32 544563296, i32 -2050228658, i32 -1964470824, i32 2058025392, i32 1291430526, i32 424198748, i32 50039436, i32 29584100, i32 -689184263, i32 -1865090967, i32 -1503863136, i32 1057563949, i32 -1039604065, i32 -1219600078, i32 -831004069, i32 1469046755, i32 985887462] }, align 4
@bf_key = global [2 x i8*] [i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.4, i32 0, i32 0)], align 4
@.str.3 = private unnamed_addr constant [27 x i8] c"abcdefghijklmnopqrstuvwxyz\00", align 1
@.str.1.4 = private unnamed_addr constant [18 x i8] c"Who is John Galt?\00", align 1
@bf_plain = global [2 x [2 x i32]] [[2 x i32] [i32 1112297303, i32 1179210568], [2 x i32] [i32 -19088744, i32 1985229328]], align 4
@bf_cipher = global [2 x [2 x i32]] [[2 x i32] [i32 844026110, i32 -200039933], [2 x i32] [i32 -862883029, i32 -2145192316]], align 4
@key_test = global [25 x i8] c"\F0\E1\D2\C3\B4\A5\96\87xiZK<-\1E\0F\00\11\223DUfw\88", align 1
@key_data = global [8 x i8] c"\FE\DC\BA\98vT2\10", align 1
@key_out = global [25 x [8 x i8]] [[8 x i8] c"\F9\ADY|I\DB\00^", [8 x i8] c"\E9\1D!\C1\D9a\A6\D6", [8 x i8] c"\E9\C2\B7\0A\1B\C6\5C\F3", [8 x i8] c"\BE\1Ec\94\08d\0F\05", [8 x i8] c"\B3\9EDH\1B\DB\1En", [8 x i8] c"\94W\AA\83\B1\92\8C\0D", [8 x i8] c"\8B\B7p2\F9`b\9D", [8 x i8] c"\E8z$N,\C8^\82", [8 x i8] c"\15u\0EzON\C5w", [8 x i8] c"\12+\A7\0B:\B6J\E0", [8 x i8] c":\83<\9A\FF\C57\F6", [8 x i8] c"\94\09\DA\87\A9\0Fk\F2", [8 x i8] c"\88O\80bP`\B8\B4", [8 x i8] c"\1F\85\03\1C\19\E1\19h", [8 x i8] c"y\D97:qL\A3O", [8 x i8] c"\93\14(\87\EE;\E1\5C", [8 x i8] c"\03B\9E\83\8C\E2\D1K", [8 x i8] c"\A4)\9E'F\9F\F6{", [8 x i8] c"\AF\D5\AE\D1\C1\BC\96\A8", [8 x i8] c"\10\85\1C\0E8X\DA\9F", [8 x i8] c"\E6\F5\1E\D7\9B\9D\B2\1F", [8 x i8] c"d\A6\E1J\FD6\B4o", [8 x i8] c"\80\C7\D7\D4ZTy\AD", [8 x i8] c"\05\04Kb\FAR\D0\80", [8 x i8] zeroinitializer], align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"ecb test data\0A\00", align 1
@.str.3.5 = private unnamed_addr constant [38 x i8] c"key bytes\09\09clear bytes\09\09cipher bytes\0A\00", align 1
@ecb_data = internal global [34 x [8 x i8]] [[8 x i8] zeroinitializer, [8 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF", [8 x i8] c"0\00\00\00\00\00\00\00", [8 x i8] c"\11\11\11\11\11\11\11\11", [8 x i8] c"\01#Eg\89\AB\CD\EF", [8 x i8] c"\11\11\11\11\11\11\11\11", [8 x i8] zeroinitializer, [8 x i8] c"\FE\DC\BA\98vT2\10", [8 x i8] c"|\A1\10EJ\1AnW", [8 x i8] c"\011\D9a\9D\C17n", [8 x i8] c"\07\A1\13>J\0B&\86", [8 x i8] c"8IgL&\021\9E", [8 x i8] c"\04\B9\15\BAC\FE\B5\B6", [8 x i8] c"\01\13\B9p\FD4\F2\CE", [8 x i8] c"\01p\F1uF\8F\B5\E6", [8 x i8] c"C)\7F\AD8\E3s\FE", [8 x i8] c"\07\A7\13pE\DA*\16", [8 x i8] c"\04h\91\04\C2\FD;/", [8 x i8] c"7\D0k\B5\16\CBuF", [8 x i8] c"\1F\08&\0D\1A\C2F^", [8 x i8] c"X@#d\1A\BAav", [8 x i8] c"\02X\16\16F)\B0\07", [8 x i8] c"Iy>\BCy\B3%\8F", [8 x i8] c"O\B0^\15\15\ABs\A7", [8 x i8] c"I\E9]mL\A2)\BF", [8 x i8] c"\01\83\10\DC@\9B&\D6", [8 x i8] c"\1CX\7F\1C\13\92O\EF", [8 x i8] c"\01\01\01\01\01\01\01\01", [8 x i8] c"\1F\1F\1F\1F\0E\0E\0E\0E", [8 x i8] c"\E0\FE\E0\FE\F1\FE\F1\FE", [8 x i8] zeroinitializer, [8 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF", [8 x i8] c"\01#Eg\89\AB\CD\EF", [8 x i8] c"\FE\DC\BA\98vT2\10"], align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"%02X\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"\09\00", align 1
@plain_data = internal global [34 x [8 x i8]] [[8 x i8] zeroinitializer, [8 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF", [8 x i8] c"\10\00\00\00\00\00\00\01", [8 x i8] c"\11\11\11\11\11\11\11\11", [8 x i8] c"\11\11\11\11\11\11\11\11", [8 x i8] c"\01#Eg\89\AB\CD\EF", [8 x i8] zeroinitializer, [8 x i8] c"\01#Eg\89\AB\CD\EF", [8 x i8] c"\01\A1\D6\D09wgB", [8 x i8] c"\5C\D5L\A8=\EFW\DA", [8 x i8] c"\02H\D48\06\F6qr", [8 x i8] c"QEKX-\DFD\0A", [8 x i8] c"B\FDD0YW\7F\A2", [8 x i8] c"\05\9B^\08Q\CF\14:", [8 x i8] c"\07V\D8\E0wGa\D2", [8 x i8] c"v%\14\B8)\BFHj", [8 x i8] c";\DD\11\90I7(\02", [8 x i8] c"&\95_h5\AF`\9A", [8 x i8] c"\16M^@O'R2", [8 x i8] c"k\05n\18u\9F\5C\CA", [8 x i8] c"\00K\D6\EF\09\17`b", [8 x i8] c"H\0D9\00n\E7b\F2", [8 x i8] c"Cu@\C8i\8F<\FA", [8 x i8] c"\07-C\A0w\07R\92", [8 x i8] c"\02\FEUw\81\17\F1*", [8 x i8] c"\1D\9D\5CP\18\F7(\C2", [8 x i8] c"0U2(mo)Z", [8 x i8] c"\01#Eg\89\AB\CD\EF", [8 x i8] c"\01#Eg\89\AB\CD\EF", [8 x i8] c"\01#Eg\89\AB\CD\EF", [8 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF", [8 x i8] zeroinitializer, [8 x i8] zeroinitializer, [8 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF"], align 1
@cipher_data = internal global [34 x [8 x i8]] [[8 x i8] c"N\F9\97Ea\98\DDx", [8 x i8] c"Q\86o\D5\B8^\CB\8A", [8 x i8] c"}\85o\9Aa0c\F2", [8 x i8] c"$f\DD\87\8B\96<\9D", [8 x i8] c"a\F9\C3\80\22\81\B0\96", [8 x i8] c"}\0C\C60\AF\DA\1E\C7", [8 x i8] c"N\F9\97Ea\98\DDx", [8 x i8] c"\0A\CE\AB\0F\C6\A0\A2\8D", [8 x i8] c"Y\C6\82E\EB\05(+", [8 x i8] c"\B1\B8\CC\0B%\0F\09\A0", [8 x i8] c"\170\E5w\8B\EA\1D\A4", [8 x i8] c"\A2^xV\CF&Q\EB", [8 x i8] c"58\82\B1\09\CE\8F\1A", [8 x i8] c"H\F4\D0\88L7\99\18", [8 x i8] c"C!\93\B7\89Q\FC\98", [8 x i8] c"\13\F0AT\D6\9D\1A\E5", [8 x i8] c".\ED\DA\93\FF\D3\9Cy", [8 x i8] c"\D8\87\E09<-\A6\E3", [8 x i8] c"_\99\D0O[\169i", [8 x i8] c"J\05z;$\D3\97{", [8 x i8] c"E 1\C1\E4\FA\DA\8E", [8 x i8] c"uU\AE9\F5\9B\87\BD", [8 x i8] c"S\C5_\9C\B4\9F\C0\19", [8 x i8] c"z\8E{\FA\93~\89\A3", [8 x i8] c"\CF\9C]zI\86\AD\B5", [8 x i8] c"\D1\AB\B2\90e\8B\C7x", [8 x i8] c"U\CB7t\D1>\F2\01", [8 x i8] c"\FA4\ECHG\B2h\B2", [8 x i8] c"\A7\90yQ\08\EA<\AE", [8 x i8] c"\C3\9E\07-\9F\ACc\1D", [8 x i8] c"\01I3\E0\CD\AF\F6\E4", [8 x i8] c"\F2\1E\9Aw\B7\1CI\BC", [8 x i8] c"$YF\88WT6\9A", [8 x i8] c"k\5CZ\9C]\9E\0AZ"], align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"set_key test data\0A\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"data[8]= \00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"c=\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c" k[%2d]=\00", align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"\0Achaining mode test data\0A\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"key[16]   = \00", align 1
@cbc_key = internal global [16 x i8] c"\01#Eg\89\AB\CD\EF\F0\E1\D2\C3\B4\A5\96\87", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"\0Aiv[8]     = \00", align 1
@cbc_iv = internal global [8 x i8] c"\FE\DC\BA\98vT2\10", align 1
@cbc_data = internal global [40 x i8] c"7654321 Now is the time for \00\00\00\00\00\00\00\00\00\00\00\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"\0Adata[%d]  = '%s'\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"\0Adata[%d]  = \00", align 1
@.str.16 = private unnamed_addr constant [17 x i8] c"cbc cipher text\0A\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"cipher[%d]= \00", align 1
@cbc_ok = internal global [32 x i8] c"kw\B4\D60\06\DE\E6\05\B1V\E2t\03\97\93X\DE\B9\E7\15F\16\D9Y\F1e+\D5\FF\92\CC", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"cfb64 cipher text\0A\00", align 1
@cfb64_ok = internal global [29 x i8] c"\E72\14\A2\82!9\CA\F2n\CFm.\B9\E7n=\A3\DE\04\D1Qr\00Q\9DW\A6\C3", align 1
@.str.19 = private unnamed_addr constant [19 x i8] c"ofb64 cipher text\0A\00", align 1
@ofb64_ok = internal global [29 x i8] c"\E72\14\A2\82!9\CAb\B3C\CC[eXs\10\DD\90\8D\0C$\1B\22c\C2\CF\80\DA", align 1
@.str.20 = private unnamed_addr constant [34 x i8] c"testing blowfish in raw ecb mode\0A\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"Set key.\0A\00", align 1
@.str.22 = private unnamed_addr constant [12 x i8] c"Encrypted.\0A\00", align 1
@.str.23 = private unnamed_addr constant [29 x i8] c"BF_encrypt error encrypting\0A\00", align 1
@.str.24 = private unnamed_addr constant [10 x i8] c"got     :\00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c"%08lX \00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"expected:\00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c"decrypted.\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"BF_encrypt error decrypting\0A\00", align 1
@.str.29 = private unnamed_addr constant [30 x i8] c"testing blowfish in ecb mode\0A\00", align 1
@.str.30 = private unnamed_addr constant [42 x i8] c"BF_ecb_encrypt blowfish error encrypting\0A\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"%02X \00", align 1
@.str.32 = private unnamed_addr constant [33 x i8] c"BF_ecb_encrypt error decrypting\0A\00", align 1
@.str.33 = private unnamed_addr constant [26 x i8] c"testing blowfish set_key\0A\00", align 1
@.str.34 = private unnamed_addr constant [23 x i8] c"blowfish setkey error\0A\00", align 1
@.str.35 = private unnamed_addr constant [30 x i8] c"testing blowfish in cbc mode\0A\00", align 1
@.str.36 = private unnamed_addr constant [30 x i8] c"BF_cbc_encrypt encrypt error\0A\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"0x%02X,\00", align 1
@.str.38 = private unnamed_addr constant [30 x i8] c"BF_cbc_encrypt decrypt error\0A\00", align 1
@.str.39 = private unnamed_addr constant [32 x i8] c"testing blowfish in cfb64 mode\0A\00", align 1
@.str.40 = private unnamed_addr constant [32 x i8] c"BF_cfb64_encrypt encrypt error\0A\00", align 1
@.str.41 = private unnamed_addr constant [32 x i8] c"BF_cfb64_encrypt decrypt error\0A\00", align 1
@.str.42 = private unnamed_addr constant [27 x i8] c"testing blowfish in ofb64\0A\00", align 1
@.str.43 = private unnamed_addr constant [32 x i8] c"BF_ofb64_encrypt encrypt error\0A\00", align 1
@.str.44 = private unnamed_addr constant [32 x i8] c"BF_ofb64_encrypt decrypt error\0A\00", align 1

; Function Attrs: nounwind
define arm_aapcscc void @BF_cbc_encrypt(i8*, i8*, i32, %struct.bf_key_st*, i8*, i32) #0 {
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.bf_key_st*, align 4
  %11 = alloca i8*, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca [2 x i32], align 4
  store i8* %0, i8** %7, align 4
  store i8* %1, i8** %8, align 4
  store i32 %2, i32* %9, align 4
  store %struct.bf_key_st* %3, %struct.bf_key_st** %10, align 4
  store i8* %4, i8** %11, align 4
  store i32 %5, i32* %12, align 4
  %21 = load i32, i32* %9, align 4
  store i32 %21, i32* %19, align 4
  %22 = load i32, i32* %12, align 4
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %376

; <label>:24:                                     ; preds = %6
  %25 = load i8*, i8** %11, align 4
  %26 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %26, i8** %11, align 4
  %27 = load i8, i8* %25, align 1
  %28 = zext i8 %27 to i32
  %29 = shl i32 %28, 24
  store i32 %29, i32* %15, align 4
  %30 = load i8*, i8** %11, align 4
  %31 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %31, i8** %11, align 4
  %32 = load i8, i8* %30, align 1
  %33 = zext i8 %32 to i32
  %34 = shl i32 %33, 16
  %35 = load i32, i32* %15, align 4
  %36 = or i32 %35, %34
  store i32 %36, i32* %15, align 4
  %37 = load i8*, i8** %11, align 4
  %38 = getelementptr inbounds i8, i8* %37, i32 1
  store i8* %38, i8** %11, align 4
  %39 = load i8, i8* %37, align 1
  %40 = zext i8 %39 to i32
  %41 = shl i32 %40, 8
  %42 = load i32, i32* %15, align 4
  %43 = or i32 %42, %41
  store i32 %43, i32* %15, align 4
  %44 = load i8*, i8** %11, align 4
  %45 = getelementptr inbounds i8, i8* %44, i32 1
  store i8* %45, i8** %11, align 4
  %46 = load i8, i8* %44, align 1
  %47 = zext i8 %46 to i32
  %48 = load i32, i32* %15, align 4
  %49 = or i32 %48, %47
  store i32 %49, i32* %15, align 4
  %50 = load i8*, i8** %11, align 4
  %51 = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %51, i8** %11, align 4
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i32
  %54 = shl i32 %53, 24
  store i32 %54, i32* %16, align 4
  %55 = load i8*, i8** %11, align 4
  %56 = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %56, i8** %11, align 4
  %57 = load i8, i8* %55, align 1
  %58 = zext i8 %57 to i32
  %59 = shl i32 %58, 16
  %60 = load i32, i32* %16, align 4
  %61 = or i32 %60, %59
  store i32 %61, i32* %16, align 4
  %62 = load i8*, i8** %11, align 4
  %63 = getelementptr inbounds i8, i8* %62, i32 1
  store i8* %63, i8** %11, align 4
  %64 = load i8, i8* %62, align 1
  %65 = zext i8 %64 to i32
  %66 = shl i32 %65, 8
  %67 = load i32, i32* %16, align 4
  %68 = or i32 %67, %66
  store i32 %68, i32* %16, align 4
  %69 = load i8*, i8** %11, align 4
  %70 = getelementptr inbounds i8, i8* %69, i32 1
  store i8* %70, i8** %11, align 4
  %71 = load i8, i8* %69, align 1
  %72 = zext i8 %71 to i32
  %73 = load i32, i32* %16, align 4
  %74 = or i32 %73, %72
  store i32 %74, i32* %16, align 4
  %75 = load i8*, i8** %11, align 4
  %76 = getelementptr inbounds i8, i8* %75, i32 -8
  store i8* %76, i8** %11, align 4
  %77 = load i32, i32* %19, align 4
  %78 = sub nsw i32 %77, 8
  store i32 %78, i32* %19, align 4
  br label %79

; <label>:79:                                     ; preds = %195, %24
  %80 = load i32, i32* %19, align 4
  %81 = icmp sge i32 %80, 0
  br i1 %81, label %82, label %198

; <label>:82:                                     ; preds = %79
  %83 = load i8*, i8** %7, align 4
  %84 = getelementptr inbounds i8, i8* %83, i32 1
  store i8* %84, i8** %7, align 4
  %85 = load i8, i8* %83, align 1
  %86 = zext i8 %85 to i32
  %87 = shl i32 %86, 24
  store i32 %87, i32* %13, align 4
  %88 = load i8*, i8** %7, align 4
  %89 = getelementptr inbounds i8, i8* %88, i32 1
  store i8* %89, i8** %7, align 4
  %90 = load i8, i8* %88, align 1
  %91 = zext i8 %90 to i32
  %92 = shl i32 %91, 16
  %93 = load i32, i32* %13, align 4
  %94 = or i32 %93, %92
  store i32 %94, i32* %13, align 4
  %95 = load i8*, i8** %7, align 4
  %96 = getelementptr inbounds i8, i8* %95, i32 1
  store i8* %96, i8** %7, align 4
  %97 = load i8, i8* %95, align 1
  %98 = zext i8 %97 to i32
  %99 = shl i32 %98, 8
  %100 = load i32, i32* %13, align 4
  %101 = or i32 %100, %99
  store i32 %101, i32* %13, align 4
  %102 = load i8*, i8** %7, align 4
  %103 = getelementptr inbounds i8, i8* %102, i32 1
  store i8* %103, i8** %7, align 4
  %104 = load i8, i8* %102, align 1
  %105 = zext i8 %104 to i32
  %106 = load i32, i32* %13, align 4
  %107 = or i32 %106, %105
  store i32 %107, i32* %13, align 4
  %108 = load i8*, i8** %7, align 4
  %109 = getelementptr inbounds i8, i8* %108, i32 1
  store i8* %109, i8** %7, align 4
  %110 = load i8, i8* %108, align 1
  %111 = zext i8 %110 to i32
  %112 = shl i32 %111, 24
  store i32 %112, i32* %14, align 4
  %113 = load i8*, i8** %7, align 4
  %114 = getelementptr inbounds i8, i8* %113, i32 1
  store i8* %114, i8** %7, align 4
  %115 = load i8, i8* %113, align 1
  %116 = zext i8 %115 to i32
  %117 = shl i32 %116, 16
  %118 = load i32, i32* %14, align 4
  %119 = or i32 %118, %117
  store i32 %119, i32* %14, align 4
  %120 = load i8*, i8** %7, align 4
  %121 = getelementptr inbounds i8, i8* %120, i32 1
  store i8* %121, i8** %7, align 4
  %122 = load i8, i8* %120, align 1
  %123 = zext i8 %122 to i32
  %124 = shl i32 %123, 8
  %125 = load i32, i32* %14, align 4
  %126 = or i32 %125, %124
  store i32 %126, i32* %14, align 4
  %127 = load i8*, i8** %7, align 4
  %128 = getelementptr inbounds i8, i8* %127, i32 1
  store i8* %128, i8** %7, align 4
  %129 = load i8, i8* %127, align 1
  %130 = zext i8 %129 to i32
  %131 = load i32, i32* %14, align 4
  %132 = or i32 %131, %130
  store i32 %132, i32* %14, align 4
  %133 = load i32, i32* %15, align 4
  %134 = load i32, i32* %13, align 4
  %135 = xor i32 %134, %133
  store i32 %135, i32* %13, align 4
  %136 = load i32, i32* %16, align 4
  %137 = load i32, i32* %14, align 4
  %138 = xor i32 %137, %136
  store i32 %138, i32* %14, align 4
  %139 = load i32, i32* %13, align 4
  %140 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  store i32 %139, i32* %140, align 4
  %141 = load i32, i32* %14, align 4
  %142 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 1
  store i32 %141, i32* %142, align 4
  %143 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  %144 = load %struct.bf_key_st*, %struct.bf_key_st** %10, align 4
  call arm_aapcscc void @BF_encrypt(i32* %143, %struct.bf_key_st* %144, i32 1)
  %145 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  %146 = load i32, i32* %145, align 4
  store i32 %146, i32* %15, align 4
  %147 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 1
  %148 = load i32, i32* %147, align 4
  store i32 %148, i32* %16, align 4
  %149 = load i32, i32* %15, align 4
  %150 = lshr i32 %149, 24
  %151 = and i32 %150, 255
  %152 = trunc i32 %151 to i8
  %153 = load i8*, i8** %8, align 4
  %154 = getelementptr inbounds i8, i8* %153, i32 1
  store i8* %154, i8** %8, align 4
  store i8 %152, i8* %153, align 1
  %155 = load i32, i32* %15, align 4
  %156 = lshr i32 %155, 16
  %157 = and i32 %156, 255
  %158 = trunc i32 %157 to i8
  %159 = load i8*, i8** %8, align 4
  %160 = getelementptr inbounds i8, i8* %159, i32 1
  store i8* %160, i8** %8, align 4
  store i8 %158, i8* %159, align 1
  %161 = load i32, i32* %15, align 4
  %162 = lshr i32 %161, 8
  %163 = and i32 %162, 255
  %164 = trunc i32 %163 to i8
  %165 = load i8*, i8** %8, align 4
  %166 = getelementptr inbounds i8, i8* %165, i32 1
  store i8* %166, i8** %8, align 4
  store i8 %164, i8* %165, align 1
  %167 = load i32, i32* %15, align 4
  %168 = and i32 %167, 255
  %169 = trunc i32 %168 to i8
  %170 = load i8*, i8** %8, align 4
  %171 = getelementptr inbounds i8, i8* %170, i32 1
  store i8* %171, i8** %8, align 4
  store i8 %169, i8* %170, align 1
  %172 = load i32, i32* %16, align 4
  %173 = lshr i32 %172, 24
  %174 = and i32 %173, 255
  %175 = trunc i32 %174 to i8
  %176 = load i8*, i8** %8, align 4
  %177 = getelementptr inbounds i8, i8* %176, i32 1
  store i8* %177, i8** %8, align 4
  store i8 %175, i8* %176, align 1
  %178 = load i32, i32* %16, align 4
  %179 = lshr i32 %178, 16
  %180 = and i32 %179, 255
  %181 = trunc i32 %180 to i8
  %182 = load i8*, i8** %8, align 4
  %183 = getelementptr inbounds i8, i8* %182, i32 1
  store i8* %183, i8** %8, align 4
  store i8 %181, i8* %182, align 1
  %184 = load i32, i32* %16, align 4
  %185 = lshr i32 %184, 8
  %186 = and i32 %185, 255
  %187 = trunc i32 %186 to i8
  %188 = load i8*, i8** %8, align 4
  %189 = getelementptr inbounds i8, i8* %188, i32 1
  store i8* %189, i8** %8, align 4
  store i8 %187, i8* %188, align 1
  %190 = load i32, i32* %16, align 4
  %191 = and i32 %190, 255
  %192 = trunc i32 %191 to i8
  %193 = load i8*, i8** %8, align 4
  %194 = getelementptr inbounds i8, i8* %193, i32 1
  store i8* %194, i8** %8, align 4
  store i8 %192, i8* %193, align 1
  br label %195

; <label>:195:                                    ; preds = %82
  %196 = load i32, i32* %19, align 4
  %197 = sub nsw i32 %196, 8
  store i32 %197, i32* %19, align 4
  br label %79

; <label>:198:                                    ; preds = %79
  %199 = load i32, i32* %19, align 4
  %200 = icmp ne i32 %199, -8
  br i1 %200, label %201, label %329

; <label>:201:                                    ; preds = %198
  %202 = load i32, i32* %19, align 4
  %203 = add nsw i32 %202, 8
  %204 = load i8*, i8** %7, align 4
  %205 = getelementptr inbounds i8, i8* %204, i32 %203
  store i8* %205, i8** %7, align 4
  store i32 0, i32* %14, align 4
  store i32 0, i32* %13, align 4
  %206 = load i32, i32* %19, align 4
  %207 = add nsw i32 %206, 8
  switch i32 %207, label %266 [
    i32 8, label %208
    i32 7, label %213
    i32 6, label %221
    i32 5, label %229
    i32 4, label %237
    i32 3, label %242
    i32 2, label %250
    i32 1, label %258
  ]

; <label>:208:                                    ; preds = %201
  %209 = load i8*, i8** %7, align 4
  %210 = getelementptr inbounds i8, i8* %209, i32 -1
  store i8* %210, i8** %7, align 4
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i32
  store i32 %212, i32* %14, align 4
  br label %213

; <label>:213:                                    ; preds = %208, %201
  %214 = load i8*, i8** %7, align 4
  %215 = getelementptr inbounds i8, i8* %214, i32 -1
  store i8* %215, i8** %7, align 4
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i32
  %218 = shl i32 %217, 8
  %219 = load i32, i32* %14, align 4
  %220 = or i32 %219, %218
  store i32 %220, i32* %14, align 4
  br label %221

; <label>:221:                                    ; preds = %213, %201
  %222 = load i8*, i8** %7, align 4
  %223 = getelementptr inbounds i8, i8* %222, i32 -1
  store i8* %223, i8** %7, align 4
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i32
  %226 = shl i32 %225, 16
  %227 = load i32, i32* %14, align 4
  %228 = or i32 %227, %226
  store i32 %228, i32* %14, align 4
  br label %229

; <label>:229:                                    ; preds = %221, %201
  %230 = load i8*, i8** %7, align 4
  %231 = getelementptr inbounds i8, i8* %230, i32 -1
  store i8* %231, i8** %7, align 4
  %232 = load i8, i8* %231, align 1
  %233 = zext i8 %232 to i32
  %234 = shl i32 %233, 24
  %235 = load i32, i32* %14, align 4
  %236 = or i32 %235, %234
  store i32 %236, i32* %14, align 4
  br label %237

; <label>:237:                                    ; preds = %229, %201
  %238 = load i8*, i8** %7, align 4
  %239 = getelementptr inbounds i8, i8* %238, i32 -1
  store i8* %239, i8** %7, align 4
  %240 = load i8, i8* %239, align 1
  %241 = zext i8 %240 to i32
  store i32 %241, i32* %13, align 4
  br label %242

; <label>:242:                                    ; preds = %237, %201
  %243 = load i8*, i8** %7, align 4
  %244 = getelementptr inbounds i8, i8* %243, i32 -1
  store i8* %244, i8** %7, align 4
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i32
  %247 = shl i32 %246, 8
  %248 = load i32, i32* %13, align 4
  %249 = or i32 %248, %247
  store i32 %249, i32* %13, align 4
  br label %250

; <label>:250:                                    ; preds = %242, %201
  %251 = load i8*, i8** %7, align 4
  %252 = getelementptr inbounds i8, i8* %251, i32 -1
  store i8* %252, i8** %7, align 4
  %253 = load i8, i8* %252, align 1
  %254 = zext i8 %253 to i32
  %255 = shl i32 %254, 16
  %256 = load i32, i32* %13, align 4
  %257 = or i32 %256, %255
  store i32 %257, i32* %13, align 4
  br label %258

; <label>:258:                                    ; preds = %250, %201
  %259 = load i8*, i8** %7, align 4
  %260 = getelementptr inbounds i8, i8* %259, i32 -1
  store i8* %260, i8** %7, align 4
  %261 = load i8, i8* %260, align 1
  %262 = zext i8 %261 to i32
  %263 = shl i32 %262, 24
  %264 = load i32, i32* %13, align 4
  %265 = or i32 %264, %263
  store i32 %265, i32* %13, align 4
  br label %266

; <label>:266:                                    ; preds = %258, %201
  %267 = load i32, i32* %15, align 4
  %268 = load i32, i32* %13, align 4
  %269 = xor i32 %268, %267
  store i32 %269, i32* %13, align 4
  %270 = load i32, i32* %16, align 4
  %271 = load i32, i32* %14, align 4
  %272 = xor i32 %271, %270
  store i32 %272, i32* %14, align 4
  %273 = load i32, i32* %13, align 4
  %274 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  store i32 %273, i32* %274, align 4
  %275 = load i32, i32* %14, align 4
  %276 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 1
  store i32 %275, i32* %276, align 4
  %277 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  %278 = load %struct.bf_key_st*, %struct.bf_key_st** %10, align 4
  call arm_aapcscc void @BF_encrypt(i32* %277, %struct.bf_key_st* %278, i32 1)
  %279 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  %280 = load i32, i32* %279, align 4
  store i32 %280, i32* %15, align 4
  %281 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 1
  %282 = load i32, i32* %281, align 4
  store i32 %282, i32* %16, align 4
  %283 = load i32, i32* %15, align 4
  %284 = lshr i32 %283, 24
  %285 = and i32 %284, 255
  %286 = trunc i32 %285 to i8
  %287 = load i8*, i8** %8, align 4
  %288 = getelementptr inbounds i8, i8* %287, i32 1
  store i8* %288, i8** %8, align 4
  store i8 %286, i8* %287, align 1
  %289 = load i32, i32* %15, align 4
  %290 = lshr i32 %289, 16
  %291 = and i32 %290, 255
  %292 = trunc i32 %291 to i8
  %293 = load i8*, i8** %8, align 4
  %294 = getelementptr inbounds i8, i8* %293, i32 1
  store i8* %294, i8** %8, align 4
  store i8 %292, i8* %293, align 1
  %295 = load i32, i32* %15, align 4
  %296 = lshr i32 %295, 8
  %297 = and i32 %296, 255
  %298 = trunc i32 %297 to i8
  %299 = load i8*, i8** %8, align 4
  %300 = getelementptr inbounds i8, i8* %299, i32 1
  store i8* %300, i8** %8, align 4
  store i8 %298, i8* %299, align 1
  %301 = load i32, i32* %15, align 4
  %302 = and i32 %301, 255
  %303 = trunc i32 %302 to i8
  %304 = load i8*, i8** %8, align 4
  %305 = getelementptr inbounds i8, i8* %304, i32 1
  store i8* %305, i8** %8, align 4
  store i8 %303, i8* %304, align 1
  %306 = load i32, i32* %16, align 4
  %307 = lshr i32 %306, 24
  %308 = and i32 %307, 255
  %309 = trunc i32 %308 to i8
  %310 = load i8*, i8** %8, align 4
  %311 = getelementptr inbounds i8, i8* %310, i32 1
  store i8* %311, i8** %8, align 4
  store i8 %309, i8* %310, align 1
  %312 = load i32, i32* %16, align 4
  %313 = lshr i32 %312, 16
  %314 = and i32 %313, 255
  %315 = trunc i32 %314 to i8
  %316 = load i8*, i8** %8, align 4
  %317 = getelementptr inbounds i8, i8* %316, i32 1
  store i8* %317, i8** %8, align 4
  store i8 %315, i8* %316, align 1
  %318 = load i32, i32* %16, align 4
  %319 = lshr i32 %318, 8
  %320 = and i32 %319, 255
  %321 = trunc i32 %320 to i8
  %322 = load i8*, i8** %8, align 4
  %323 = getelementptr inbounds i8, i8* %322, i32 1
  store i8* %323, i8** %8, align 4
  store i8 %321, i8* %322, align 1
  %324 = load i32, i32* %16, align 4
  %325 = and i32 %324, 255
  %326 = trunc i32 %325 to i8
  %327 = load i8*, i8** %8, align 4
  %328 = getelementptr inbounds i8, i8* %327, i32 1
  store i8* %328, i8** %8, align 4
  store i8 %326, i8* %327, align 1
  br label %329

; <label>:329:                                    ; preds = %266, %198
  %330 = load i32, i32* %15, align 4
  %331 = lshr i32 %330, 24
  %332 = and i32 %331, 255
  %333 = trunc i32 %332 to i8
  %334 = load i8*, i8** %11, align 4
  %335 = getelementptr inbounds i8, i8* %334, i32 1
  store i8* %335, i8** %11, align 4
  store i8 %333, i8* %334, align 1
  %336 = load i32, i32* %15, align 4
  %337 = lshr i32 %336, 16
  %338 = and i32 %337, 255
  %339 = trunc i32 %338 to i8
  %340 = load i8*, i8** %11, align 4
  %341 = getelementptr inbounds i8, i8* %340, i32 1
  store i8* %341, i8** %11, align 4
  store i8 %339, i8* %340, align 1
  %342 = load i32, i32* %15, align 4
  %343 = lshr i32 %342, 8
  %344 = and i32 %343, 255
  %345 = trunc i32 %344 to i8
  %346 = load i8*, i8** %11, align 4
  %347 = getelementptr inbounds i8, i8* %346, i32 1
  store i8* %347, i8** %11, align 4
  store i8 %345, i8* %346, align 1
  %348 = load i32, i32* %15, align 4
  %349 = and i32 %348, 255
  %350 = trunc i32 %349 to i8
  %351 = load i8*, i8** %11, align 4
  %352 = getelementptr inbounds i8, i8* %351, i32 1
  store i8* %352, i8** %11, align 4
  store i8 %350, i8* %351, align 1
  %353 = load i32, i32* %16, align 4
  %354 = lshr i32 %353, 24
  %355 = and i32 %354, 255
  %356 = trunc i32 %355 to i8
  %357 = load i8*, i8** %11, align 4
  %358 = getelementptr inbounds i8, i8* %357, i32 1
  store i8* %358, i8** %11, align 4
  store i8 %356, i8* %357, align 1
  %359 = load i32, i32* %16, align 4
  %360 = lshr i32 %359, 16
  %361 = and i32 %360, 255
  %362 = trunc i32 %361 to i8
  %363 = load i8*, i8** %11, align 4
  %364 = getelementptr inbounds i8, i8* %363, i32 1
  store i8* %364, i8** %11, align 4
  store i8 %362, i8* %363, align 1
  %365 = load i32, i32* %16, align 4
  %366 = lshr i32 %365, 8
  %367 = and i32 %366, 255
  %368 = trunc i32 %367 to i8
  %369 = load i8*, i8** %11, align 4
  %370 = getelementptr inbounds i8, i8* %369, i32 1
  store i8* %370, i8** %11, align 4
  store i8 %368, i8* %369, align 1
  %371 = load i32, i32* %16, align 4
  %372 = and i32 %371, 255
  %373 = trunc i32 %372 to i8
  %374 = load i8*, i8** %11, align 4
  %375 = getelementptr inbounds i8, i8* %374, i32 1
  store i8* %375, i8** %11, align 4
  store i8 %373, i8* %374, align 1
  br label %728

; <label>:376:                                    ; preds = %6
  %377 = load i8*, i8** %11, align 4
  %378 = getelementptr inbounds i8, i8* %377, i32 1
  store i8* %378, i8** %11, align 4
  %379 = load i8, i8* %377, align 1
  %380 = zext i8 %379 to i32
  %381 = shl i32 %380, 24
  store i32 %381, i32* %17, align 4
  %382 = load i8*, i8** %11, align 4
  %383 = getelementptr inbounds i8, i8* %382, i32 1
  store i8* %383, i8** %11, align 4
  %384 = load i8, i8* %382, align 1
  %385 = zext i8 %384 to i32
  %386 = shl i32 %385, 16
  %387 = load i32, i32* %17, align 4
  %388 = or i32 %387, %386
  store i32 %388, i32* %17, align 4
  %389 = load i8*, i8** %11, align 4
  %390 = getelementptr inbounds i8, i8* %389, i32 1
  store i8* %390, i8** %11, align 4
  %391 = load i8, i8* %389, align 1
  %392 = zext i8 %391 to i32
  %393 = shl i32 %392, 8
  %394 = load i32, i32* %17, align 4
  %395 = or i32 %394, %393
  store i32 %395, i32* %17, align 4
  %396 = load i8*, i8** %11, align 4
  %397 = getelementptr inbounds i8, i8* %396, i32 1
  store i8* %397, i8** %11, align 4
  %398 = load i8, i8* %396, align 1
  %399 = zext i8 %398 to i32
  %400 = load i32, i32* %17, align 4
  %401 = or i32 %400, %399
  store i32 %401, i32* %17, align 4
  %402 = load i8*, i8** %11, align 4
  %403 = getelementptr inbounds i8, i8* %402, i32 1
  store i8* %403, i8** %11, align 4
  %404 = load i8, i8* %402, align 1
  %405 = zext i8 %404 to i32
  %406 = shl i32 %405, 24
  store i32 %406, i32* %18, align 4
  %407 = load i8*, i8** %11, align 4
  %408 = getelementptr inbounds i8, i8* %407, i32 1
  store i8* %408, i8** %11, align 4
  %409 = load i8, i8* %407, align 1
  %410 = zext i8 %409 to i32
  %411 = shl i32 %410, 16
  %412 = load i32, i32* %18, align 4
  %413 = or i32 %412, %411
  store i32 %413, i32* %18, align 4
  %414 = load i8*, i8** %11, align 4
  %415 = getelementptr inbounds i8, i8* %414, i32 1
  store i8* %415, i8** %11, align 4
  %416 = load i8, i8* %414, align 1
  %417 = zext i8 %416 to i32
  %418 = shl i32 %417, 8
  %419 = load i32, i32* %18, align 4
  %420 = or i32 %419, %418
  store i32 %420, i32* %18, align 4
  %421 = load i8*, i8** %11, align 4
  %422 = getelementptr inbounds i8, i8* %421, i32 1
  store i8* %422, i8** %11, align 4
  %423 = load i8, i8* %421, align 1
  %424 = zext i8 %423 to i32
  %425 = load i32, i32* %18, align 4
  %426 = or i32 %425, %424
  store i32 %426, i32* %18, align 4
  %427 = load i8*, i8** %11, align 4
  %428 = getelementptr inbounds i8, i8* %427, i32 -8
  store i8* %428, i8** %11, align 4
  %429 = load i32, i32* %19, align 4
  %430 = sub nsw i32 %429, 8
  store i32 %430, i32* %19, align 4
  br label %431

; <label>:431:                                    ; preds = %547, %376
  %432 = load i32, i32* %19, align 4
  %433 = icmp sge i32 %432, 0
  br i1 %433, label %434, label %550

; <label>:434:                                    ; preds = %431
  %435 = load i8*, i8** %7, align 4
  %436 = getelementptr inbounds i8, i8* %435, i32 1
  store i8* %436, i8** %7, align 4
  %437 = load i8, i8* %435, align 1
  %438 = zext i8 %437 to i32
  %439 = shl i32 %438, 24
  store i32 %439, i32* %13, align 4
  %440 = load i8*, i8** %7, align 4
  %441 = getelementptr inbounds i8, i8* %440, i32 1
  store i8* %441, i8** %7, align 4
  %442 = load i8, i8* %440, align 1
  %443 = zext i8 %442 to i32
  %444 = shl i32 %443, 16
  %445 = load i32, i32* %13, align 4
  %446 = or i32 %445, %444
  store i32 %446, i32* %13, align 4
  %447 = load i8*, i8** %7, align 4
  %448 = getelementptr inbounds i8, i8* %447, i32 1
  store i8* %448, i8** %7, align 4
  %449 = load i8, i8* %447, align 1
  %450 = zext i8 %449 to i32
  %451 = shl i32 %450, 8
  %452 = load i32, i32* %13, align 4
  %453 = or i32 %452, %451
  store i32 %453, i32* %13, align 4
  %454 = load i8*, i8** %7, align 4
  %455 = getelementptr inbounds i8, i8* %454, i32 1
  store i8* %455, i8** %7, align 4
  %456 = load i8, i8* %454, align 1
  %457 = zext i8 %456 to i32
  %458 = load i32, i32* %13, align 4
  %459 = or i32 %458, %457
  store i32 %459, i32* %13, align 4
  %460 = load i8*, i8** %7, align 4
  %461 = getelementptr inbounds i8, i8* %460, i32 1
  store i8* %461, i8** %7, align 4
  %462 = load i8, i8* %460, align 1
  %463 = zext i8 %462 to i32
  %464 = shl i32 %463, 24
  store i32 %464, i32* %14, align 4
  %465 = load i8*, i8** %7, align 4
  %466 = getelementptr inbounds i8, i8* %465, i32 1
  store i8* %466, i8** %7, align 4
  %467 = load i8, i8* %465, align 1
  %468 = zext i8 %467 to i32
  %469 = shl i32 %468, 16
  %470 = load i32, i32* %14, align 4
  %471 = or i32 %470, %469
  store i32 %471, i32* %14, align 4
  %472 = load i8*, i8** %7, align 4
  %473 = getelementptr inbounds i8, i8* %472, i32 1
  store i8* %473, i8** %7, align 4
  %474 = load i8, i8* %472, align 1
  %475 = zext i8 %474 to i32
  %476 = shl i32 %475, 8
  %477 = load i32, i32* %14, align 4
  %478 = or i32 %477, %476
  store i32 %478, i32* %14, align 4
  %479 = load i8*, i8** %7, align 4
  %480 = getelementptr inbounds i8, i8* %479, i32 1
  store i8* %480, i8** %7, align 4
  %481 = load i8, i8* %479, align 1
  %482 = zext i8 %481 to i32
  %483 = load i32, i32* %14, align 4
  %484 = or i32 %483, %482
  store i32 %484, i32* %14, align 4
  %485 = load i32, i32* %13, align 4
  %486 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  store i32 %485, i32* %486, align 4
  %487 = load i32, i32* %14, align 4
  %488 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 1
  store i32 %487, i32* %488, align 4
  %489 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  %490 = load %struct.bf_key_st*, %struct.bf_key_st** %10, align 4
  call arm_aapcscc void @BF_encrypt(i32* %489, %struct.bf_key_st* %490, i32 0)
  %491 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  %492 = load i32, i32* %491, align 4
  %493 = load i32, i32* %17, align 4
  %494 = xor i32 %492, %493
  store i32 %494, i32* %15, align 4
  %495 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 1
  %496 = load i32, i32* %495, align 4
  %497 = load i32, i32* %18, align 4
  %498 = xor i32 %496, %497
  store i32 %498, i32* %16, align 4
  %499 = load i32, i32* %15, align 4
  %500 = lshr i32 %499, 24
  %501 = and i32 %500, 255
  %502 = trunc i32 %501 to i8
  %503 = load i8*, i8** %8, align 4
  %504 = getelementptr inbounds i8, i8* %503, i32 1
  store i8* %504, i8** %8, align 4
  store i8 %502, i8* %503, align 1
  %505 = load i32, i32* %15, align 4
  %506 = lshr i32 %505, 16
  %507 = and i32 %506, 255
  %508 = trunc i32 %507 to i8
  %509 = load i8*, i8** %8, align 4
  %510 = getelementptr inbounds i8, i8* %509, i32 1
  store i8* %510, i8** %8, align 4
  store i8 %508, i8* %509, align 1
  %511 = load i32, i32* %15, align 4
  %512 = lshr i32 %511, 8
  %513 = and i32 %512, 255
  %514 = trunc i32 %513 to i8
  %515 = load i8*, i8** %8, align 4
  %516 = getelementptr inbounds i8, i8* %515, i32 1
  store i8* %516, i8** %8, align 4
  store i8 %514, i8* %515, align 1
  %517 = load i32, i32* %15, align 4
  %518 = and i32 %517, 255
  %519 = trunc i32 %518 to i8
  %520 = load i8*, i8** %8, align 4
  %521 = getelementptr inbounds i8, i8* %520, i32 1
  store i8* %521, i8** %8, align 4
  store i8 %519, i8* %520, align 1
  %522 = load i32, i32* %16, align 4
  %523 = lshr i32 %522, 24
  %524 = and i32 %523, 255
  %525 = trunc i32 %524 to i8
  %526 = load i8*, i8** %8, align 4
  %527 = getelementptr inbounds i8, i8* %526, i32 1
  store i8* %527, i8** %8, align 4
  store i8 %525, i8* %526, align 1
  %528 = load i32, i32* %16, align 4
  %529 = lshr i32 %528, 16
  %530 = and i32 %529, 255
  %531 = trunc i32 %530 to i8
  %532 = load i8*, i8** %8, align 4
  %533 = getelementptr inbounds i8, i8* %532, i32 1
  store i8* %533, i8** %8, align 4
  store i8 %531, i8* %532, align 1
  %534 = load i32, i32* %16, align 4
  %535 = lshr i32 %534, 8
  %536 = and i32 %535, 255
  %537 = trunc i32 %536 to i8
  %538 = load i8*, i8** %8, align 4
  %539 = getelementptr inbounds i8, i8* %538, i32 1
  store i8* %539, i8** %8, align 4
  store i8 %537, i8* %538, align 1
  %540 = load i32, i32* %16, align 4
  %541 = and i32 %540, 255
  %542 = trunc i32 %541 to i8
  %543 = load i8*, i8** %8, align 4
  %544 = getelementptr inbounds i8, i8* %543, i32 1
  store i8* %544, i8** %8, align 4
  store i8 %542, i8* %543, align 1
  %545 = load i32, i32* %13, align 4
  store i32 %545, i32* %17, align 4
  %546 = load i32, i32* %14, align 4
  store i32 %546, i32* %18, align 4
  br label %547

; <label>:547:                                    ; preds = %434
  %548 = load i32, i32* %19, align 4
  %549 = sub nsw i32 %548, 8
  store i32 %549, i32* %19, align 4
  br label %431

; <label>:550:                                    ; preds = %431
  %551 = load i32, i32* %19, align 4
  %552 = icmp ne i32 %551, -8
  br i1 %552, label %553, label %681

; <label>:553:                                    ; preds = %550
  %554 = load i8*, i8** %7, align 4
  %555 = getelementptr inbounds i8, i8* %554, i32 1
  store i8* %555, i8** %7, align 4
  %556 = load i8, i8* %554, align 1
  %557 = zext i8 %556 to i32
  %558 = shl i32 %557, 24
  store i32 %558, i32* %13, align 4
  %559 = load i8*, i8** %7, align 4
  %560 = getelementptr inbounds i8, i8* %559, i32 1
  store i8* %560, i8** %7, align 4
  %561 = load i8, i8* %559, align 1
  %562 = zext i8 %561 to i32
  %563 = shl i32 %562, 16
  %564 = load i32, i32* %13, align 4
  %565 = or i32 %564, %563
  store i32 %565, i32* %13, align 4
  %566 = load i8*, i8** %7, align 4
  %567 = getelementptr inbounds i8, i8* %566, i32 1
  store i8* %567, i8** %7, align 4
  %568 = load i8, i8* %566, align 1
  %569 = zext i8 %568 to i32
  %570 = shl i32 %569, 8
  %571 = load i32, i32* %13, align 4
  %572 = or i32 %571, %570
  store i32 %572, i32* %13, align 4
  %573 = load i8*, i8** %7, align 4
  %574 = getelementptr inbounds i8, i8* %573, i32 1
  store i8* %574, i8** %7, align 4
  %575 = load i8, i8* %573, align 1
  %576 = zext i8 %575 to i32
  %577 = load i32, i32* %13, align 4
  %578 = or i32 %577, %576
  store i32 %578, i32* %13, align 4
  %579 = load i8*, i8** %7, align 4
  %580 = getelementptr inbounds i8, i8* %579, i32 1
  store i8* %580, i8** %7, align 4
  %581 = load i8, i8* %579, align 1
  %582 = zext i8 %581 to i32
  %583 = shl i32 %582, 24
  store i32 %583, i32* %14, align 4
  %584 = load i8*, i8** %7, align 4
  %585 = getelementptr inbounds i8, i8* %584, i32 1
  store i8* %585, i8** %7, align 4
  %586 = load i8, i8* %584, align 1
  %587 = zext i8 %586 to i32
  %588 = shl i32 %587, 16
  %589 = load i32, i32* %14, align 4
  %590 = or i32 %589, %588
  store i32 %590, i32* %14, align 4
  %591 = load i8*, i8** %7, align 4
  %592 = getelementptr inbounds i8, i8* %591, i32 1
  store i8* %592, i8** %7, align 4
  %593 = load i8, i8* %591, align 1
  %594 = zext i8 %593 to i32
  %595 = shl i32 %594, 8
  %596 = load i32, i32* %14, align 4
  %597 = or i32 %596, %595
  store i32 %597, i32* %14, align 4
  %598 = load i8*, i8** %7, align 4
  %599 = getelementptr inbounds i8, i8* %598, i32 1
  store i8* %599, i8** %7, align 4
  %600 = load i8, i8* %598, align 1
  %601 = zext i8 %600 to i32
  %602 = load i32, i32* %14, align 4
  %603 = or i32 %602, %601
  store i32 %603, i32* %14, align 4
  %604 = load i32, i32* %13, align 4
  %605 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  store i32 %604, i32* %605, align 4
  %606 = load i32, i32* %14, align 4
  %607 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 1
  store i32 %606, i32* %607, align 4
  %608 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  %609 = load %struct.bf_key_st*, %struct.bf_key_st** %10, align 4
  call arm_aapcscc void @BF_encrypt(i32* %608, %struct.bf_key_st* %609, i32 0)
  %610 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  %611 = load i32, i32* %610, align 4
  %612 = load i32, i32* %17, align 4
  %613 = xor i32 %611, %612
  store i32 %613, i32* %15, align 4
  %614 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 1
  %615 = load i32, i32* %614, align 4
  %616 = load i32, i32* %18, align 4
  %617 = xor i32 %615, %616
  store i32 %617, i32* %16, align 4
  %618 = load i32, i32* %19, align 4
  %619 = add nsw i32 %618, 8
  %620 = load i8*, i8** %8, align 4
  %621 = getelementptr inbounds i8, i8* %620, i32 %619
  store i8* %621, i8** %8, align 4
  %622 = load i32, i32* %19, align 4
  %623 = add nsw i32 %622, 8
  switch i32 %623, label %678 [
    i32 8, label %624
    i32 7, label %630
    i32 6, label %637
    i32 5, label %644
    i32 4, label %651
    i32 3, label %657
    i32 2, label %664
    i32 1, label %671
  ]

; <label>:624:                                    ; preds = %553
  %625 = load i32, i32* %16, align 4
  %626 = and i32 %625, 255
  %627 = trunc i32 %626 to i8
  %628 = load i8*, i8** %8, align 4
  %629 = getelementptr inbounds i8, i8* %628, i32 -1
  store i8* %629, i8** %8, align 4
  store i8 %627, i8* %629, align 1
  br label %630

; <label>:630:                                    ; preds = %624, %553
  %631 = load i32, i32* %16, align 4
  %632 = lshr i32 %631, 8
  %633 = and i32 %632, 255
  %634 = trunc i32 %633 to i8
  %635 = load i8*, i8** %8, align 4
  %636 = getelementptr inbounds i8, i8* %635, i32 -1
  store i8* %636, i8** %8, align 4
  store i8 %634, i8* %636, align 1
  br label %637

; <label>:637:                                    ; preds = %630, %553
  %638 = load i32, i32* %16, align 4
  %639 = lshr i32 %638, 16
  %640 = and i32 %639, 255
  %641 = trunc i32 %640 to i8
  %642 = load i8*, i8** %8, align 4
  %643 = getelementptr inbounds i8, i8* %642, i32 -1
  store i8* %643, i8** %8, align 4
  store i8 %641, i8* %643, align 1
  br label %644

; <label>:644:                                    ; preds = %637, %553
  %645 = load i32, i32* %16, align 4
  %646 = lshr i32 %645, 24
  %647 = and i32 %646, 255
  %648 = trunc i32 %647 to i8
  %649 = load i8*, i8** %8, align 4
  %650 = getelementptr inbounds i8, i8* %649, i32 -1
  store i8* %650, i8** %8, align 4
  store i8 %648, i8* %650, align 1
  br label %651

; <label>:651:                                    ; preds = %644, %553
  %652 = load i32, i32* %15, align 4
  %653 = and i32 %652, 255
  %654 = trunc i32 %653 to i8
  %655 = load i8*, i8** %8, align 4
  %656 = getelementptr inbounds i8, i8* %655, i32 -1
  store i8* %656, i8** %8, align 4
  store i8 %654, i8* %656, align 1
  br label %657

; <label>:657:                                    ; preds = %651, %553
  %658 = load i32, i32* %15, align 4
  %659 = lshr i32 %658, 8
  %660 = and i32 %659, 255
  %661 = trunc i32 %660 to i8
  %662 = load i8*, i8** %8, align 4
  %663 = getelementptr inbounds i8, i8* %662, i32 -1
  store i8* %663, i8** %8, align 4
  store i8 %661, i8* %663, align 1
  br label %664

; <label>:664:                                    ; preds = %657, %553
  %665 = load i32, i32* %15, align 4
  %666 = lshr i32 %665, 16
  %667 = and i32 %666, 255
  %668 = trunc i32 %667 to i8
  %669 = load i8*, i8** %8, align 4
  %670 = getelementptr inbounds i8, i8* %669, i32 -1
  store i8* %670, i8** %8, align 4
  store i8 %668, i8* %670, align 1
  br label %671

; <label>:671:                                    ; preds = %664, %553
  %672 = load i32, i32* %15, align 4
  %673 = lshr i32 %672, 24
  %674 = and i32 %673, 255
  %675 = trunc i32 %674 to i8
  %676 = load i8*, i8** %8, align 4
  %677 = getelementptr inbounds i8, i8* %676, i32 -1
  store i8* %677, i8** %8, align 4
  store i8 %675, i8* %677, align 1
  br label %678

; <label>:678:                                    ; preds = %671, %553
  %679 = load i32, i32* %13, align 4
  store i32 %679, i32* %17, align 4
  %680 = load i32, i32* %14, align 4
  store i32 %680, i32* %18, align 4
  br label %681

; <label>:681:                                    ; preds = %678, %550
  %682 = load i32, i32* %17, align 4
  %683 = lshr i32 %682, 24
  %684 = and i32 %683, 255
  %685 = trunc i32 %684 to i8
  %686 = load i8*, i8** %11, align 4
  %687 = getelementptr inbounds i8, i8* %686, i32 1
  store i8* %687, i8** %11, align 4
  store i8 %685, i8* %686, align 1
  %688 = load i32, i32* %17, align 4
  %689 = lshr i32 %688, 16
  %690 = and i32 %689, 255
  %691 = trunc i32 %690 to i8
  %692 = load i8*, i8** %11, align 4
  %693 = getelementptr inbounds i8, i8* %692, i32 1
  store i8* %693, i8** %11, align 4
  store i8 %691, i8* %692, align 1
  %694 = load i32, i32* %17, align 4
  %695 = lshr i32 %694, 8
  %696 = and i32 %695, 255
  %697 = trunc i32 %696 to i8
  %698 = load i8*, i8** %11, align 4
  %699 = getelementptr inbounds i8, i8* %698, i32 1
  store i8* %699, i8** %11, align 4
  store i8 %697, i8* %698, align 1
  %700 = load i32, i32* %17, align 4
  %701 = and i32 %700, 255
  %702 = trunc i32 %701 to i8
  %703 = load i8*, i8** %11, align 4
  %704 = getelementptr inbounds i8, i8* %703, i32 1
  store i8* %704, i8** %11, align 4
  store i8 %702, i8* %703, align 1
  %705 = load i32, i32* %18, align 4
  %706 = lshr i32 %705, 24
  %707 = and i32 %706, 255
  %708 = trunc i32 %707 to i8
  %709 = load i8*, i8** %11, align 4
  %710 = getelementptr inbounds i8, i8* %709, i32 1
  store i8* %710, i8** %11, align 4
  store i8 %708, i8* %709, align 1
  %711 = load i32, i32* %18, align 4
  %712 = lshr i32 %711, 16
  %713 = and i32 %712, 255
  %714 = trunc i32 %713 to i8
  %715 = load i8*, i8** %11, align 4
  %716 = getelementptr inbounds i8, i8* %715, i32 1
  store i8* %716, i8** %11, align 4
  store i8 %714, i8* %715, align 1
  %717 = load i32, i32* %18, align 4
  %718 = lshr i32 %717, 8
  %719 = and i32 %718, 255
  %720 = trunc i32 %719 to i8
  %721 = load i8*, i8** %11, align 4
  %722 = getelementptr inbounds i8, i8* %721, i32 1
  store i8* %722, i8** %11, align 4
  store i8 %720, i8* %721, align 1
  %723 = load i32, i32* %18, align 4
  %724 = and i32 %723, 255
  %725 = trunc i32 %724 to i8
  %726 = load i8*, i8** %11, align 4
  %727 = getelementptr inbounds i8, i8* %726, i32 1
  store i8* %727, i8** %11, align 4
  store i8 %725, i8* %726, align 1
  br label %728

; <label>:728:                                    ; preds = %681, %329
  store i32 0, i32* %18, align 4
  store i32 0, i32* %17, align 4
  store i32 0, i32* %16, align 4
  store i32 0, i32* %15, align 4
  store i32 0, i32* %14, align 4
  store i32 0, i32* %13, align 4
  %729 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 1
  store i32 0, i32* %729, align 4
  %730 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  store i32 0, i32* %730, align 4
  ret void
}

; Function Attrs: nounwind
define arm_aapcscc void @BF_cfb64_encrypt(i8*, i8*, i32, %struct.bf_key_st*, i8*, i32*, i32) #0 {
  %8 = alloca i8*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.bf_key_st*, align 4
  %12 = alloca i8*, align 4
  %13 = alloca i32*, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca [2 x i32], align 4
  %21 = alloca i8*, align 4
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  store i8* %0, i8** %8, align 4
  store i8* %1, i8** %9, align 4
  store i32 %2, i32* %10, align 4
  store %struct.bf_key_st* %3, %struct.bf_key_st** %11, align 4
  store i8* %4, i8** %12, align 4
  store i32* %5, i32** %13, align 4
  store i32 %6, i32* %14, align 4
  %24 = load i32*, i32** %13, align 4
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %18, align 4
  %26 = load i32, i32* %10, align 4
  store i32 %26, i32* %19, align 4
  %27 = load i8*, i8** %12, align 4
  store i8* %27, i8** %21, align 4
  %28 = load i32, i32* %14, align 4
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %170

; <label>:30:                                     ; preds = %7
  br label %31

; <label>:31:                                     ; preds = %147, %30
  %32 = load i32, i32* %19, align 4
  %33 = add nsw i32 %32, -1
  store i32 %33, i32* %19, align 4
  %34 = icmp ne i32 %32, 0
  br i1 %34, label %35, label %169

; <label>:35:                                     ; preds = %31
  %36 = load i32, i32* %18, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %147

; <label>:38:                                     ; preds = %35
  %39 = load i8*, i8** %21, align 4
  %40 = getelementptr inbounds i8, i8* %39, i32 1
  store i8* %40, i8** %21, align 4
  %41 = load i8, i8* %39, align 1
  %42 = zext i8 %41 to i32
  %43 = shl i32 %42, 24
  store i32 %43, i32* %15, align 4
  %44 = load i8*, i8** %21, align 4
  %45 = getelementptr inbounds i8, i8* %44, i32 1
  store i8* %45, i8** %21, align 4
  %46 = load i8, i8* %44, align 1
  %47 = zext i8 %46 to i32
  %48 = shl i32 %47, 16
  %49 = load i32, i32* %15, align 4
  %50 = or i32 %49, %48
  store i32 %50, i32* %15, align 4
  %51 = load i8*, i8** %21, align 4
  %52 = getelementptr inbounds i8, i8* %51, i32 1
  store i8* %52, i8** %21, align 4
  %53 = load i8, i8* %51, align 1
  %54 = zext i8 %53 to i32
  %55 = shl i32 %54, 8
  %56 = load i32, i32* %15, align 4
  %57 = or i32 %56, %55
  store i32 %57, i32* %15, align 4
  %58 = load i8*, i8** %21, align 4
  %59 = getelementptr inbounds i8, i8* %58, i32 1
  store i8* %59, i8** %21, align 4
  %60 = load i8, i8* %58, align 1
  %61 = zext i8 %60 to i32
  %62 = load i32, i32* %15, align 4
  %63 = or i32 %62, %61
  store i32 %63, i32* %15, align 4
  %64 = load i32, i32* %15, align 4
  %65 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  store i32 %64, i32* %65, align 4
  %66 = load i8*, i8** %21, align 4
  %67 = getelementptr inbounds i8, i8* %66, i32 1
  store i8* %67, i8** %21, align 4
  %68 = load i8, i8* %66, align 1
  %69 = zext i8 %68 to i32
  %70 = shl i32 %69, 24
  store i32 %70, i32* %16, align 4
  %71 = load i8*, i8** %21, align 4
  %72 = getelementptr inbounds i8, i8* %71, i32 1
  store i8* %72, i8** %21, align 4
  %73 = load i8, i8* %71, align 1
  %74 = zext i8 %73 to i32
  %75 = shl i32 %74, 16
  %76 = load i32, i32* %16, align 4
  %77 = or i32 %76, %75
  store i32 %77, i32* %16, align 4
  %78 = load i8*, i8** %21, align 4
  %79 = getelementptr inbounds i8, i8* %78, i32 1
  store i8* %79, i8** %21, align 4
  %80 = load i8, i8* %78, align 1
  %81 = zext i8 %80 to i32
  %82 = shl i32 %81, 8
  %83 = load i32, i32* %16, align 4
  %84 = or i32 %83, %82
  store i32 %84, i32* %16, align 4
  %85 = load i8*, i8** %21, align 4
  %86 = getelementptr inbounds i8, i8* %85, i32 1
  store i8* %86, i8** %21, align 4
  %87 = load i8, i8* %85, align 1
  %88 = zext i8 %87 to i32
  %89 = load i32, i32* %16, align 4
  %90 = or i32 %89, %88
  store i32 %90, i32* %16, align 4
  %91 = load i32, i32* %16, align 4
  %92 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 1
  store i32 %91, i32* %92, align 4
  %93 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  %94 = load %struct.bf_key_st*, %struct.bf_key_st** %11, align 4
  call arm_aapcscc void @BF_encrypt(i32* %93, %struct.bf_key_st* %94, i32 1)
  %95 = load i8*, i8** %12, align 4
  store i8* %95, i8** %21, align 4
  %96 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  store i32 %97, i32* %17, align 4
  %98 = load i32, i32* %17, align 4
  %99 = lshr i32 %98, 24
  %100 = and i32 %99, 255
  %101 = trunc i32 %100 to i8
  %102 = load i8*, i8** %21, align 4
  %103 = getelementptr inbounds i8, i8* %102, i32 1
  store i8* %103, i8** %21, align 4
  store i8 %101, i8* %102, align 1
  %104 = load i32, i32* %17, align 4
  %105 = lshr i32 %104, 16
  %106 = and i32 %105, 255
  %107 = trunc i32 %106 to i8
  %108 = load i8*, i8** %21, align 4
  %109 = getelementptr inbounds i8, i8* %108, i32 1
  store i8* %109, i8** %21, align 4
  store i8 %107, i8* %108, align 1
  %110 = load i32, i32* %17, align 4
  %111 = lshr i32 %110, 8
  %112 = and i32 %111, 255
  %113 = trunc i32 %112 to i8
  %114 = load i8*, i8** %21, align 4
  %115 = getelementptr inbounds i8, i8* %114, i32 1
  store i8* %115, i8** %21, align 4
  store i8 %113, i8* %114, align 1
  %116 = load i32, i32* %17, align 4
  %117 = and i32 %116, 255
  %118 = trunc i32 %117 to i8
  %119 = load i8*, i8** %21, align 4
  %120 = getelementptr inbounds i8, i8* %119, i32 1
  store i8* %120, i8** %21, align 4
  store i8 %118, i8* %119, align 1
  %121 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 1
  %122 = load i32, i32* %121, align 4
  store i32 %122, i32* %17, align 4
  %123 = load i32, i32* %17, align 4
  %124 = lshr i32 %123, 24
  %125 = and i32 %124, 255
  %126 = trunc i32 %125 to i8
  %127 = load i8*, i8** %21, align 4
  %128 = getelementptr inbounds i8, i8* %127, i32 1
  store i8* %128, i8** %21, align 4
  store i8 %126, i8* %127, align 1
  %129 = load i32, i32* %17, align 4
  %130 = lshr i32 %129, 16
  %131 = and i32 %130, 255
  %132 = trunc i32 %131 to i8
  %133 = load i8*, i8** %21, align 4
  %134 = getelementptr inbounds i8, i8* %133, i32 1
  store i8* %134, i8** %21, align 4
  store i8 %132, i8* %133, align 1
  %135 = load i32, i32* %17, align 4
  %136 = lshr i32 %135, 8
  %137 = and i32 %136, 255
  %138 = trunc i32 %137 to i8
  %139 = load i8*, i8** %21, align 4
  %140 = getelementptr inbounds i8, i8* %139, i32 1
  store i8* %140, i8** %21, align 4
  store i8 %138, i8* %139, align 1
  %141 = load i32, i32* %17, align 4
  %142 = and i32 %141, 255
  %143 = trunc i32 %142 to i8
  %144 = load i8*, i8** %21, align 4
  %145 = getelementptr inbounds i8, i8* %144, i32 1
  store i8* %145, i8** %21, align 4
  store i8 %143, i8* %144, align 1
  %146 = load i8*, i8** %12, align 4
  store i8* %146, i8** %21, align 4
  br label %147

; <label>:147:                                    ; preds = %38, %35
  %148 = load i8*, i8** %8, align 4
  %149 = getelementptr inbounds i8, i8* %148, i32 1
  store i8* %149, i8** %8, align 4
  %150 = load i8, i8* %148, align 1
  %151 = zext i8 %150 to i32
  %152 = load i8*, i8** %21, align 4
  %153 = load i32, i32* %18, align 4
  %154 = getelementptr inbounds i8, i8* %152, i32 %153
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i32
  %157 = xor i32 %151, %156
  %158 = trunc i32 %157 to i8
  store i8 %158, i8* %22, align 1
  %159 = load i8, i8* %22, align 1
  %160 = load i8*, i8** %9, align 4
  %161 = getelementptr inbounds i8, i8* %160, i32 1
  store i8* %161, i8** %9, align 4
  store i8 %159, i8* %160, align 1
  %162 = load i8, i8* %22, align 1
  %163 = load i8*, i8** %21, align 4
  %164 = load i32, i32* %18, align 4
  %165 = getelementptr inbounds i8, i8* %163, i32 %164
  store i8 %162, i8* %165, align 1
  %166 = load i32, i32* %18, align 4
  %167 = add nsw i32 %166, 1
  %168 = and i32 %167, 7
  store i32 %168, i32* %18, align 4
  br label %31

; <label>:169:                                    ; preds = %31
  br label %311

; <label>:170:                                    ; preds = %7
  br label %171

; <label>:171:                                    ; preds = %287, %170
  %172 = load i32, i32* %19, align 4
  %173 = add nsw i32 %172, -1
  store i32 %173, i32* %19, align 4
  %174 = icmp ne i32 %172, 0
  br i1 %174, label %175, label %310

; <label>:175:                                    ; preds = %171
  %176 = load i32, i32* %18, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %287

; <label>:178:                                    ; preds = %175
  %179 = load i8*, i8** %21, align 4
  %180 = getelementptr inbounds i8, i8* %179, i32 1
  store i8* %180, i8** %21, align 4
  %181 = load i8, i8* %179, align 1
  %182 = zext i8 %181 to i32
  %183 = shl i32 %182, 24
  store i32 %183, i32* %15, align 4
  %184 = load i8*, i8** %21, align 4
  %185 = getelementptr inbounds i8, i8* %184, i32 1
  store i8* %185, i8** %21, align 4
  %186 = load i8, i8* %184, align 1
  %187 = zext i8 %186 to i32
  %188 = shl i32 %187, 16
  %189 = load i32, i32* %15, align 4
  %190 = or i32 %189, %188
  store i32 %190, i32* %15, align 4
  %191 = load i8*, i8** %21, align 4
  %192 = getelementptr inbounds i8, i8* %191, i32 1
  store i8* %192, i8** %21, align 4
  %193 = load i8, i8* %191, align 1
  %194 = zext i8 %193 to i32
  %195 = shl i32 %194, 8
  %196 = load i32, i32* %15, align 4
  %197 = or i32 %196, %195
  store i32 %197, i32* %15, align 4
  %198 = load i8*, i8** %21, align 4
  %199 = getelementptr inbounds i8, i8* %198, i32 1
  store i8* %199, i8** %21, align 4
  %200 = load i8, i8* %198, align 1
  %201 = zext i8 %200 to i32
  %202 = load i32, i32* %15, align 4
  %203 = or i32 %202, %201
  store i32 %203, i32* %15, align 4
  %204 = load i32, i32* %15, align 4
  %205 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  store i32 %204, i32* %205, align 4
  %206 = load i8*, i8** %21, align 4
  %207 = getelementptr inbounds i8, i8* %206, i32 1
  store i8* %207, i8** %21, align 4
  %208 = load i8, i8* %206, align 1
  %209 = zext i8 %208 to i32
  %210 = shl i32 %209, 24
  store i32 %210, i32* %16, align 4
  %211 = load i8*, i8** %21, align 4
  %212 = getelementptr inbounds i8, i8* %211, i32 1
  store i8* %212, i8** %21, align 4
  %213 = load i8, i8* %211, align 1
  %214 = zext i8 %213 to i32
  %215 = shl i32 %214, 16
  %216 = load i32, i32* %16, align 4
  %217 = or i32 %216, %215
  store i32 %217, i32* %16, align 4
  %218 = load i8*, i8** %21, align 4
  %219 = getelementptr inbounds i8, i8* %218, i32 1
  store i8* %219, i8** %21, align 4
  %220 = load i8, i8* %218, align 1
  %221 = zext i8 %220 to i32
  %222 = shl i32 %221, 8
  %223 = load i32, i32* %16, align 4
  %224 = or i32 %223, %222
  store i32 %224, i32* %16, align 4
  %225 = load i8*, i8** %21, align 4
  %226 = getelementptr inbounds i8, i8* %225, i32 1
  store i8* %226, i8** %21, align 4
  %227 = load i8, i8* %225, align 1
  %228 = zext i8 %227 to i32
  %229 = load i32, i32* %16, align 4
  %230 = or i32 %229, %228
  store i32 %230, i32* %16, align 4
  %231 = load i32, i32* %16, align 4
  %232 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 1
  store i32 %231, i32* %232, align 4
  %233 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  %234 = load %struct.bf_key_st*, %struct.bf_key_st** %11, align 4
  call arm_aapcscc void @BF_encrypt(i32* %233, %struct.bf_key_st* %234, i32 1)
  %235 = load i8*, i8** %12, align 4
  store i8* %235, i8** %21, align 4
  %236 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  %237 = load i32, i32* %236, align 4
  store i32 %237, i32* %17, align 4
  %238 = load i32, i32* %17, align 4
  %239 = lshr i32 %238, 24
  %240 = and i32 %239, 255
  %241 = trunc i32 %240 to i8
  %242 = load i8*, i8** %21, align 4
  %243 = getelementptr inbounds i8, i8* %242, i32 1
  store i8* %243, i8** %21, align 4
  store i8 %241, i8* %242, align 1
  %244 = load i32, i32* %17, align 4
  %245 = lshr i32 %244, 16
  %246 = and i32 %245, 255
  %247 = trunc i32 %246 to i8
  %248 = load i8*, i8** %21, align 4
  %249 = getelementptr inbounds i8, i8* %248, i32 1
  store i8* %249, i8** %21, align 4
  store i8 %247, i8* %248, align 1
  %250 = load i32, i32* %17, align 4
  %251 = lshr i32 %250, 8
  %252 = and i32 %251, 255
  %253 = trunc i32 %252 to i8
  %254 = load i8*, i8** %21, align 4
  %255 = getelementptr inbounds i8, i8* %254, i32 1
  store i8* %255, i8** %21, align 4
  store i8 %253, i8* %254, align 1
  %256 = load i32, i32* %17, align 4
  %257 = and i32 %256, 255
  %258 = trunc i32 %257 to i8
  %259 = load i8*, i8** %21, align 4
  %260 = getelementptr inbounds i8, i8* %259, i32 1
  store i8* %260, i8** %21, align 4
  store i8 %258, i8* %259, align 1
  %261 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 1
  %262 = load i32, i32* %261, align 4
  store i32 %262, i32* %17, align 4
  %263 = load i32, i32* %17, align 4
  %264 = lshr i32 %263, 24
  %265 = and i32 %264, 255
  %266 = trunc i32 %265 to i8
  %267 = load i8*, i8** %21, align 4
  %268 = getelementptr inbounds i8, i8* %267, i32 1
  store i8* %268, i8** %21, align 4
  store i8 %266, i8* %267, align 1
  %269 = load i32, i32* %17, align 4
  %270 = lshr i32 %269, 16
  %271 = and i32 %270, 255
  %272 = trunc i32 %271 to i8
  %273 = load i8*, i8** %21, align 4
  %274 = getelementptr inbounds i8, i8* %273, i32 1
  store i8* %274, i8** %21, align 4
  store i8 %272, i8* %273, align 1
  %275 = load i32, i32* %17, align 4
  %276 = lshr i32 %275, 8
  %277 = and i32 %276, 255
  %278 = trunc i32 %277 to i8
  %279 = load i8*, i8** %21, align 4
  %280 = getelementptr inbounds i8, i8* %279, i32 1
  store i8* %280, i8** %21, align 4
  store i8 %278, i8* %279, align 1
  %281 = load i32, i32* %17, align 4
  %282 = and i32 %281, 255
  %283 = trunc i32 %282 to i8
  %284 = load i8*, i8** %21, align 4
  %285 = getelementptr inbounds i8, i8* %284, i32 1
  store i8* %285, i8** %21, align 4
  store i8 %283, i8* %284, align 1
  %286 = load i8*, i8** %12, align 4
  store i8* %286, i8** %21, align 4
  br label %287

; <label>:287:                                    ; preds = %178, %175
  %288 = load i8*, i8** %8, align 4
  %289 = getelementptr inbounds i8, i8* %288, i32 1
  store i8* %289, i8** %8, align 4
  %290 = load i8, i8* %288, align 1
  store i8 %290, i8* %23, align 1
  %291 = load i8*, i8** %21, align 4
  %292 = load i32, i32* %18, align 4
  %293 = getelementptr inbounds i8, i8* %291, i32 %292
  %294 = load i8, i8* %293, align 1
  store i8 %294, i8* %22, align 1
  %295 = load i8, i8* %23, align 1
  %296 = load i8*, i8** %21, align 4
  %297 = load i32, i32* %18, align 4
  %298 = getelementptr inbounds i8, i8* %296, i32 %297
  store i8 %295, i8* %298, align 1
  %299 = load i8, i8* %22, align 1
  %300 = zext i8 %299 to i32
  %301 = load i8, i8* %23, align 1
  %302 = zext i8 %301 to i32
  %303 = xor i32 %300, %302
  %304 = trunc i32 %303 to i8
  %305 = load i8*, i8** %9, align 4
  %306 = getelementptr inbounds i8, i8* %305, i32 1
  store i8* %306, i8** %9, align 4
  store i8 %304, i8* %305, align 1
  %307 = load i32, i32* %18, align 4
  %308 = add nsw i32 %307, 1
  %309 = and i32 %308, 7
  store i32 %309, i32* %18, align 4
  br label %171

; <label>:310:                                    ; preds = %171
  br label %311

; <label>:311:                                    ; preds = %310, %169
  store i8 0, i8* %23, align 1
  store i8 0, i8* %22, align 1
  store i32 0, i32* %17, align 4
  %312 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 1
  store i32 0, i32* %312, align 4
  %313 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  store i32 0, i32* %313, align 4
  store i32 0, i32* %16, align 4
  store i32 0, i32* %15, align 4
  %314 = load i32, i32* %18, align 4
  %315 = load i32*, i32** %13, align 4
  store i32 %314, i32* %315, align 4
  ret void
}

; Function Attrs: nounwind
define arm_aapcscc i8* @BF_options() #0 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0)
}

; Function Attrs: nounwind
define arm_aapcscc void @BF_ecb_encrypt(i8*, i8*, %struct.bf_key_st*, i32) #0 {
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca %struct.bf_key_st*, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [2 x i32], align 4
  store i8* %0, i8** %5, align 4
  store i8* %1, i8** %6, align 4
  store %struct.bf_key_st* %2, %struct.bf_key_st** %7, align 4
  store i32 %3, i32* %8, align 4
  %11 = load i8*, i8** %5, align 4
  %12 = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %12, i8** %5, align 4
  %13 = load i8, i8* %11, align 1
  %14 = zext i8 %13 to i32
  %15 = shl i32 %14, 24
  store i32 %15, i32* %9, align 4
  %16 = load i8*, i8** %5, align 4
  %17 = getelementptr inbounds i8, i8* %16, i32 1
  store i8* %17, i8** %5, align 4
  %18 = load i8, i8* %16, align 1
  %19 = zext i8 %18 to i32
  %20 = shl i32 %19, 16
  %21 = load i32, i32* %9, align 4
  %22 = or i32 %21, %20
  store i32 %22, i32* %9, align 4
  %23 = load i8*, i8** %5, align 4
  %24 = getelementptr inbounds i8, i8* %23, i32 1
  store i8* %24, i8** %5, align 4
  %25 = load i8, i8* %23, align 1
  %26 = zext i8 %25 to i32
  %27 = shl i32 %26, 8
  %28 = load i32, i32* %9, align 4
  %29 = or i32 %28, %27
  store i32 %29, i32* %9, align 4
  %30 = load i8*, i8** %5, align 4
  %31 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %31, i8** %5, align 4
  %32 = load i8, i8* %30, align 1
  %33 = zext i8 %32 to i32
  %34 = load i32, i32* %9, align 4
  %35 = or i32 %34, %33
  store i32 %35, i32* %9, align 4
  %36 = load i32, i32* %9, align 4
  %37 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i32 0, i32 0
  store i32 %36, i32* %37, align 4
  %38 = load i8*, i8** %5, align 4
  %39 = getelementptr inbounds i8, i8* %38, i32 1
  store i8* %39, i8** %5, align 4
  %40 = load i8, i8* %38, align 1
  %41 = zext i8 %40 to i32
  %42 = shl i32 %41, 24
  store i32 %42, i32* %9, align 4
  %43 = load i8*, i8** %5, align 4
  %44 = getelementptr inbounds i8, i8* %43, i32 1
  store i8* %44, i8** %5, align 4
  %45 = load i8, i8* %43, align 1
  %46 = zext i8 %45 to i32
  %47 = shl i32 %46, 16
  %48 = load i32, i32* %9, align 4
  %49 = or i32 %48, %47
  store i32 %49, i32* %9, align 4
  %50 = load i8*, i8** %5, align 4
  %51 = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %51, i8** %5, align 4
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i32
  %54 = shl i32 %53, 8
  %55 = load i32, i32* %9, align 4
  %56 = or i32 %55, %54
  store i32 %56, i32* %9, align 4
  %57 = load i8*, i8** %5, align 4
  %58 = getelementptr inbounds i8, i8* %57, i32 1
  store i8* %58, i8** %5, align 4
  %59 = load i8, i8* %57, align 1
  %60 = zext i8 %59 to i32
  %61 = load i32, i32* %9, align 4
  %62 = or i32 %61, %60
  store i32 %62, i32* %9, align 4
  %63 = load i32, i32* %9, align 4
  %64 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i32 0, i32 1
  store i32 %63, i32* %64, align 4
  %65 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i32 0, i32 0
  %66 = load %struct.bf_key_st*, %struct.bf_key_st** %7, align 4
  %67 = load i32, i32* %8, align 4
  call arm_aapcscc void @BF_encrypt(i32* %65, %struct.bf_key_st* %66, i32 %67)
  %68 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %9, align 4
  %70 = load i32, i32* %9, align 4
  %71 = lshr i32 %70, 24
  %72 = and i32 %71, 255
  %73 = trunc i32 %72 to i8
  %74 = load i8*, i8** %6, align 4
  %75 = getelementptr inbounds i8, i8* %74, i32 1
  store i8* %75, i8** %6, align 4
  store i8 %73, i8* %74, align 1
  %76 = load i32, i32* %9, align 4
  %77 = lshr i32 %76, 16
  %78 = and i32 %77, 255
  %79 = trunc i32 %78 to i8
  %80 = load i8*, i8** %6, align 4
  %81 = getelementptr inbounds i8, i8* %80, i32 1
  store i8* %81, i8** %6, align 4
  store i8 %79, i8* %80, align 1
  %82 = load i32, i32* %9, align 4
  %83 = lshr i32 %82, 8
  %84 = and i32 %83, 255
  %85 = trunc i32 %84 to i8
  %86 = load i8*, i8** %6, align 4
  %87 = getelementptr inbounds i8, i8* %86, i32 1
  store i8* %87, i8** %6, align 4
  store i8 %85, i8* %86, align 1
  %88 = load i32, i32* %9, align 4
  %89 = and i32 %88, 255
  %90 = trunc i32 %89 to i8
  %91 = load i8*, i8** %6, align 4
  %92 = getelementptr inbounds i8, i8* %91, i32 1
  store i8* %92, i8** %6, align 4
  store i8 %90, i8* %91, align 1
  %93 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i32 0, i32 1
  %94 = load i32, i32* %93, align 4
  store i32 %94, i32* %9, align 4
  %95 = load i32, i32* %9, align 4
  %96 = lshr i32 %95, 24
  %97 = and i32 %96, 255
  %98 = trunc i32 %97 to i8
  %99 = load i8*, i8** %6, align 4
  %100 = getelementptr inbounds i8, i8* %99, i32 1
  store i8* %100, i8** %6, align 4
  store i8 %98, i8* %99, align 1
  %101 = load i32, i32* %9, align 4
  %102 = lshr i32 %101, 16
  %103 = and i32 %102, 255
  %104 = trunc i32 %103 to i8
  %105 = load i8*, i8** %6, align 4
  %106 = getelementptr inbounds i8, i8* %105, i32 1
  store i8* %106, i8** %6, align 4
  store i8 %104, i8* %105, align 1
  %107 = load i32, i32* %9, align 4
  %108 = lshr i32 %107, 8
  %109 = and i32 %108, 255
  %110 = trunc i32 %109 to i8
  %111 = load i8*, i8** %6, align 4
  %112 = getelementptr inbounds i8, i8* %111, i32 1
  store i8* %112, i8** %6, align 4
  store i8 %110, i8* %111, align 1
  %113 = load i32, i32* %9, align 4
  %114 = and i32 %113, 255
  %115 = trunc i32 %114 to i8
  %116 = load i8*, i8** %6, align 4
  %117 = getelementptr inbounds i8, i8* %116, i32 1
  store i8* %117, i8** %6, align 4
  store i8 %115, i8* %116, align 1
  %118 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i32 0, i32 1
  store i32 0, i32* %118, align 4
  %119 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i32 0, i32 0
  store i32 0, i32* %119, align 4
  store i32 0, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind
define arm_aapcscc void @BF_encrypt(i32*, %struct.bf_key_st*, i32) #0 {
  %4 = alloca i32*, align 4
  %5 = alloca %struct.bf_key_st*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 4
  %10 = alloca i32*, align 4
  store i32* %0, i32** %4, align 4
  store %struct.bf_key_st* %1, %struct.bf_key_st** %5, align 4
  store i32 %2, i32* %6, align 4
  %11 = load %struct.bf_key_st*, %struct.bf_key_st** %5, align 4
  %12 = getelementptr inbounds %struct.bf_key_st, %struct.bf_key_st* %11, i32 0, i32 0
  %13 = getelementptr inbounds [18 x i32], [18 x i32]* %12, i32 0, i32 0
  store i32* %13, i32** %9, align 4
  %14 = load %struct.bf_key_st*, %struct.bf_key_st** %5, align 4
  %15 = getelementptr inbounds %struct.bf_key_st, %struct.bf_key_st* %14, i32 0, i32 1
  %16 = getelementptr inbounds [1024 x i32], [1024 x i32]* %15, i32 0, i32 0
  store i32* %16, i32** %10, align 4
  %17 = load i32*, i32** %4, align 4
  %18 = getelementptr inbounds i32, i32* %17, i32 0
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %7, align 4
  %20 = load i32*, i32** %4, align 4
  %21 = getelementptr inbounds i32, i32* %20, i32 1
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %8, align 4
  %23 = load i32, i32* %6, align 4
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %596

; <label>:25:                                     ; preds = %3
  %26 = load i32*, i32** %9, align 4
  %27 = getelementptr inbounds i32, i32* %26, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = load i32, i32* %7, align 4
  %30 = xor i32 %29, %28
  store i32 %30, i32* %7, align 4
  %31 = load i32*, i32** %9, align 4
  %32 = getelementptr inbounds i32, i32* %31, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = load i32, i32* %8, align 4
  %35 = xor i32 %34, %33
  store i32 %35, i32* %8, align 4
  %36 = load i32*, i32** %10, align 4
  %37 = load i32, i32* %7, align 4
  %38 = lshr i32 %37, 24
  %39 = getelementptr inbounds i32, i32* %36, i32 %38
  %40 = load i32, i32* %39, align 4
  %41 = load i32*, i32** %10, align 4
  %42 = load i32, i32* %7, align 4
  %43 = lshr i32 %42, 16
  %44 = and i32 %43, 255
  %45 = add i32 256, %44
  %46 = getelementptr inbounds i32, i32* %41, i32 %45
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %40, %47
  %49 = load i32*, i32** %10, align 4
  %50 = load i32, i32* %7, align 4
  %51 = lshr i32 %50, 8
  %52 = and i32 %51, 255
  %53 = add i32 512, %52
  %54 = getelementptr inbounds i32, i32* %49, i32 %53
  %55 = load i32, i32* %54, align 4
  %56 = xor i32 %48, %55
  %57 = load i32*, i32** %10, align 4
  %58 = load i32, i32* %7, align 4
  %59 = and i32 %58, 255
  %60 = add i32 768, %59
  %61 = getelementptr inbounds i32, i32* %57, i32 %60
  %62 = load i32, i32* %61, align 4
  %63 = add i32 %56, %62
  %64 = load i32, i32* %8, align 4
  %65 = xor i32 %64, %63
  store i32 %65, i32* %8, align 4
  %66 = load i32*, i32** %9, align 4
  %67 = getelementptr inbounds i32, i32* %66, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = load i32, i32* %7, align 4
  %70 = xor i32 %69, %68
  store i32 %70, i32* %7, align 4
  %71 = load i32*, i32** %10, align 4
  %72 = load i32, i32* %8, align 4
  %73 = lshr i32 %72, 24
  %74 = getelementptr inbounds i32, i32* %71, i32 %73
  %75 = load i32, i32* %74, align 4
  %76 = load i32*, i32** %10, align 4
  %77 = load i32, i32* %8, align 4
  %78 = lshr i32 %77, 16
  %79 = and i32 %78, 255
  %80 = add i32 256, %79
  %81 = getelementptr inbounds i32, i32* %76, i32 %80
  %82 = load i32, i32* %81, align 4
  %83 = add i32 %75, %82
  %84 = load i32*, i32** %10, align 4
  %85 = load i32, i32* %8, align 4
  %86 = lshr i32 %85, 8
  %87 = and i32 %86, 255
  %88 = add i32 512, %87
  %89 = getelementptr inbounds i32, i32* %84, i32 %88
  %90 = load i32, i32* %89, align 4
  %91 = xor i32 %83, %90
  %92 = load i32*, i32** %10, align 4
  %93 = load i32, i32* %8, align 4
  %94 = and i32 %93, 255
  %95 = add i32 768, %94
  %96 = getelementptr inbounds i32, i32* %92, i32 %95
  %97 = load i32, i32* %96, align 4
  %98 = add i32 %91, %97
  %99 = load i32, i32* %7, align 4
  %100 = xor i32 %99, %98
  store i32 %100, i32* %7, align 4
  %101 = load i32*, i32** %9, align 4
  %102 = getelementptr inbounds i32, i32* %101, i32 3
  %103 = load i32, i32* %102, align 4
  %104 = load i32, i32* %8, align 4
  %105 = xor i32 %104, %103
  store i32 %105, i32* %8, align 4
  %106 = load i32*, i32** %10, align 4
  %107 = load i32, i32* %7, align 4
  %108 = lshr i32 %107, 24
  %109 = getelementptr inbounds i32, i32* %106, i32 %108
  %110 = load i32, i32* %109, align 4
  %111 = load i32*, i32** %10, align 4
  %112 = load i32, i32* %7, align 4
  %113 = lshr i32 %112, 16
  %114 = and i32 %113, 255
  %115 = add i32 256, %114
  %116 = getelementptr inbounds i32, i32* %111, i32 %115
  %117 = load i32, i32* %116, align 4
  %118 = add i32 %110, %117
  %119 = load i32*, i32** %10, align 4
  %120 = load i32, i32* %7, align 4
  %121 = lshr i32 %120, 8
  %122 = and i32 %121, 255
  %123 = add i32 512, %122
  %124 = getelementptr inbounds i32, i32* %119, i32 %123
  %125 = load i32, i32* %124, align 4
  %126 = xor i32 %118, %125
  %127 = load i32*, i32** %10, align 4
  %128 = load i32, i32* %7, align 4
  %129 = and i32 %128, 255
  %130 = add i32 768, %129
  %131 = getelementptr inbounds i32, i32* %127, i32 %130
  %132 = load i32, i32* %131, align 4
  %133 = add i32 %126, %132
  %134 = load i32, i32* %8, align 4
  %135 = xor i32 %134, %133
  store i32 %135, i32* %8, align 4
  %136 = load i32*, i32** %9, align 4
  %137 = getelementptr inbounds i32, i32* %136, i32 4
  %138 = load i32, i32* %137, align 4
  %139 = load i32, i32* %7, align 4
  %140 = xor i32 %139, %138
  store i32 %140, i32* %7, align 4
  %141 = load i32*, i32** %10, align 4
  %142 = load i32, i32* %8, align 4
  %143 = lshr i32 %142, 24
  %144 = getelementptr inbounds i32, i32* %141, i32 %143
  %145 = load i32, i32* %144, align 4
  %146 = load i32*, i32** %10, align 4
  %147 = load i32, i32* %8, align 4
  %148 = lshr i32 %147, 16
  %149 = and i32 %148, 255
  %150 = add i32 256, %149
  %151 = getelementptr inbounds i32, i32* %146, i32 %150
  %152 = load i32, i32* %151, align 4
  %153 = add i32 %145, %152
  %154 = load i32*, i32** %10, align 4
  %155 = load i32, i32* %8, align 4
  %156 = lshr i32 %155, 8
  %157 = and i32 %156, 255
  %158 = add i32 512, %157
  %159 = getelementptr inbounds i32, i32* %154, i32 %158
  %160 = load i32, i32* %159, align 4
  %161 = xor i32 %153, %160
  %162 = load i32*, i32** %10, align 4
  %163 = load i32, i32* %8, align 4
  %164 = and i32 %163, 255
  %165 = add i32 768, %164
  %166 = getelementptr inbounds i32, i32* %162, i32 %165
  %167 = load i32, i32* %166, align 4
  %168 = add i32 %161, %167
  %169 = load i32, i32* %7, align 4
  %170 = xor i32 %169, %168
  store i32 %170, i32* %7, align 4
  %171 = load i32*, i32** %9, align 4
  %172 = getelementptr inbounds i32, i32* %171, i32 5
  %173 = load i32, i32* %172, align 4
  %174 = load i32, i32* %8, align 4
  %175 = xor i32 %174, %173
  store i32 %175, i32* %8, align 4
  %176 = load i32*, i32** %10, align 4
  %177 = load i32, i32* %7, align 4
  %178 = lshr i32 %177, 24
  %179 = getelementptr inbounds i32, i32* %176, i32 %178
  %180 = load i32, i32* %179, align 4
  %181 = load i32*, i32** %10, align 4
  %182 = load i32, i32* %7, align 4
  %183 = lshr i32 %182, 16
  %184 = and i32 %183, 255
  %185 = add i32 256, %184
  %186 = getelementptr inbounds i32, i32* %181, i32 %185
  %187 = load i32, i32* %186, align 4
  %188 = add i32 %180, %187
  %189 = load i32*, i32** %10, align 4
  %190 = load i32, i32* %7, align 4
  %191 = lshr i32 %190, 8
  %192 = and i32 %191, 255
  %193 = add i32 512, %192
  %194 = getelementptr inbounds i32, i32* %189, i32 %193
  %195 = load i32, i32* %194, align 4
  %196 = xor i32 %188, %195
  %197 = load i32*, i32** %10, align 4
  %198 = load i32, i32* %7, align 4
  %199 = and i32 %198, 255
  %200 = add i32 768, %199
  %201 = getelementptr inbounds i32, i32* %197, i32 %200
  %202 = load i32, i32* %201, align 4
  %203 = add i32 %196, %202
  %204 = load i32, i32* %8, align 4
  %205 = xor i32 %204, %203
  store i32 %205, i32* %8, align 4
  %206 = load i32*, i32** %9, align 4
  %207 = getelementptr inbounds i32, i32* %206, i32 6
  %208 = load i32, i32* %207, align 4
  %209 = load i32, i32* %7, align 4
  %210 = xor i32 %209, %208
  store i32 %210, i32* %7, align 4
  %211 = load i32*, i32** %10, align 4
  %212 = load i32, i32* %8, align 4
  %213 = lshr i32 %212, 24
  %214 = getelementptr inbounds i32, i32* %211, i32 %213
  %215 = load i32, i32* %214, align 4
  %216 = load i32*, i32** %10, align 4
  %217 = load i32, i32* %8, align 4
  %218 = lshr i32 %217, 16
  %219 = and i32 %218, 255
  %220 = add i32 256, %219
  %221 = getelementptr inbounds i32, i32* %216, i32 %220
  %222 = load i32, i32* %221, align 4
  %223 = add i32 %215, %222
  %224 = load i32*, i32** %10, align 4
  %225 = load i32, i32* %8, align 4
  %226 = lshr i32 %225, 8
  %227 = and i32 %226, 255
  %228 = add i32 512, %227
  %229 = getelementptr inbounds i32, i32* %224, i32 %228
  %230 = load i32, i32* %229, align 4
  %231 = xor i32 %223, %230
  %232 = load i32*, i32** %10, align 4
  %233 = load i32, i32* %8, align 4
  %234 = and i32 %233, 255
  %235 = add i32 768, %234
  %236 = getelementptr inbounds i32, i32* %232, i32 %235
  %237 = load i32, i32* %236, align 4
  %238 = add i32 %231, %237
  %239 = load i32, i32* %7, align 4
  %240 = xor i32 %239, %238
  store i32 %240, i32* %7, align 4
  %241 = load i32*, i32** %9, align 4
  %242 = getelementptr inbounds i32, i32* %241, i32 7
  %243 = load i32, i32* %242, align 4
  %244 = load i32, i32* %8, align 4
  %245 = xor i32 %244, %243
  store i32 %245, i32* %8, align 4
  %246 = load i32*, i32** %10, align 4
  %247 = load i32, i32* %7, align 4
  %248 = lshr i32 %247, 24
  %249 = getelementptr inbounds i32, i32* %246, i32 %248
  %250 = load i32, i32* %249, align 4
  %251 = load i32*, i32** %10, align 4
  %252 = load i32, i32* %7, align 4
  %253 = lshr i32 %252, 16
  %254 = and i32 %253, 255
  %255 = add i32 256, %254
  %256 = getelementptr inbounds i32, i32* %251, i32 %255
  %257 = load i32, i32* %256, align 4
  %258 = add i32 %250, %257
  %259 = load i32*, i32** %10, align 4
  %260 = load i32, i32* %7, align 4
  %261 = lshr i32 %260, 8
  %262 = and i32 %261, 255
  %263 = add i32 512, %262
  %264 = getelementptr inbounds i32, i32* %259, i32 %263
  %265 = load i32, i32* %264, align 4
  %266 = xor i32 %258, %265
  %267 = load i32*, i32** %10, align 4
  %268 = load i32, i32* %7, align 4
  %269 = and i32 %268, 255
  %270 = add i32 768, %269
  %271 = getelementptr inbounds i32, i32* %267, i32 %270
  %272 = load i32, i32* %271, align 4
  %273 = add i32 %266, %272
  %274 = load i32, i32* %8, align 4
  %275 = xor i32 %274, %273
  store i32 %275, i32* %8, align 4
  %276 = load i32*, i32** %9, align 4
  %277 = getelementptr inbounds i32, i32* %276, i32 8
  %278 = load i32, i32* %277, align 4
  %279 = load i32, i32* %7, align 4
  %280 = xor i32 %279, %278
  store i32 %280, i32* %7, align 4
  %281 = load i32*, i32** %10, align 4
  %282 = load i32, i32* %8, align 4
  %283 = lshr i32 %282, 24
  %284 = getelementptr inbounds i32, i32* %281, i32 %283
  %285 = load i32, i32* %284, align 4
  %286 = load i32*, i32** %10, align 4
  %287 = load i32, i32* %8, align 4
  %288 = lshr i32 %287, 16
  %289 = and i32 %288, 255
  %290 = add i32 256, %289
  %291 = getelementptr inbounds i32, i32* %286, i32 %290
  %292 = load i32, i32* %291, align 4
  %293 = add i32 %285, %292
  %294 = load i32*, i32** %10, align 4
  %295 = load i32, i32* %8, align 4
  %296 = lshr i32 %295, 8
  %297 = and i32 %296, 255
  %298 = add i32 512, %297
  %299 = getelementptr inbounds i32, i32* %294, i32 %298
  %300 = load i32, i32* %299, align 4
  %301 = xor i32 %293, %300
  %302 = load i32*, i32** %10, align 4
  %303 = load i32, i32* %8, align 4
  %304 = and i32 %303, 255
  %305 = add i32 768, %304
  %306 = getelementptr inbounds i32, i32* %302, i32 %305
  %307 = load i32, i32* %306, align 4
  %308 = add i32 %301, %307
  %309 = load i32, i32* %7, align 4
  %310 = xor i32 %309, %308
  store i32 %310, i32* %7, align 4
  %311 = load i32*, i32** %9, align 4
  %312 = getelementptr inbounds i32, i32* %311, i32 9
  %313 = load i32, i32* %312, align 4
  %314 = load i32, i32* %8, align 4
  %315 = xor i32 %314, %313
  store i32 %315, i32* %8, align 4
  %316 = load i32*, i32** %10, align 4
  %317 = load i32, i32* %7, align 4
  %318 = lshr i32 %317, 24
  %319 = getelementptr inbounds i32, i32* %316, i32 %318
  %320 = load i32, i32* %319, align 4
  %321 = load i32*, i32** %10, align 4
  %322 = load i32, i32* %7, align 4
  %323 = lshr i32 %322, 16
  %324 = and i32 %323, 255
  %325 = add i32 256, %324
  %326 = getelementptr inbounds i32, i32* %321, i32 %325
  %327 = load i32, i32* %326, align 4
  %328 = add i32 %320, %327
  %329 = load i32*, i32** %10, align 4
  %330 = load i32, i32* %7, align 4
  %331 = lshr i32 %330, 8
  %332 = and i32 %331, 255
  %333 = add i32 512, %332
  %334 = getelementptr inbounds i32, i32* %329, i32 %333
  %335 = load i32, i32* %334, align 4
  %336 = xor i32 %328, %335
  %337 = load i32*, i32** %10, align 4
  %338 = load i32, i32* %7, align 4
  %339 = and i32 %338, 255
  %340 = add i32 768, %339
  %341 = getelementptr inbounds i32, i32* %337, i32 %340
  %342 = load i32, i32* %341, align 4
  %343 = add i32 %336, %342
  %344 = load i32, i32* %8, align 4
  %345 = xor i32 %344, %343
  store i32 %345, i32* %8, align 4
  %346 = load i32*, i32** %9, align 4
  %347 = getelementptr inbounds i32, i32* %346, i32 10
  %348 = load i32, i32* %347, align 4
  %349 = load i32, i32* %7, align 4
  %350 = xor i32 %349, %348
  store i32 %350, i32* %7, align 4
  %351 = load i32*, i32** %10, align 4
  %352 = load i32, i32* %8, align 4
  %353 = lshr i32 %352, 24
  %354 = getelementptr inbounds i32, i32* %351, i32 %353
  %355 = load i32, i32* %354, align 4
  %356 = load i32*, i32** %10, align 4
  %357 = load i32, i32* %8, align 4
  %358 = lshr i32 %357, 16
  %359 = and i32 %358, 255
  %360 = add i32 256, %359
  %361 = getelementptr inbounds i32, i32* %356, i32 %360
  %362 = load i32, i32* %361, align 4
  %363 = add i32 %355, %362
  %364 = load i32*, i32** %10, align 4
  %365 = load i32, i32* %8, align 4
  %366 = lshr i32 %365, 8
  %367 = and i32 %366, 255
  %368 = add i32 512, %367
  %369 = getelementptr inbounds i32, i32* %364, i32 %368
  %370 = load i32, i32* %369, align 4
  %371 = xor i32 %363, %370
  %372 = load i32*, i32** %10, align 4
  %373 = load i32, i32* %8, align 4
  %374 = and i32 %373, 255
  %375 = add i32 768, %374
  %376 = getelementptr inbounds i32, i32* %372, i32 %375
  %377 = load i32, i32* %376, align 4
  %378 = add i32 %371, %377
  %379 = load i32, i32* %7, align 4
  %380 = xor i32 %379, %378
  store i32 %380, i32* %7, align 4
  %381 = load i32*, i32** %9, align 4
  %382 = getelementptr inbounds i32, i32* %381, i32 11
  %383 = load i32, i32* %382, align 4
  %384 = load i32, i32* %8, align 4
  %385 = xor i32 %384, %383
  store i32 %385, i32* %8, align 4
  %386 = load i32*, i32** %10, align 4
  %387 = load i32, i32* %7, align 4
  %388 = lshr i32 %387, 24
  %389 = getelementptr inbounds i32, i32* %386, i32 %388
  %390 = load i32, i32* %389, align 4
  %391 = load i32*, i32** %10, align 4
  %392 = load i32, i32* %7, align 4
  %393 = lshr i32 %392, 16
  %394 = and i32 %393, 255
  %395 = add i32 256, %394
  %396 = getelementptr inbounds i32, i32* %391, i32 %395
  %397 = load i32, i32* %396, align 4
  %398 = add i32 %390, %397
  %399 = load i32*, i32** %10, align 4
  %400 = load i32, i32* %7, align 4
  %401 = lshr i32 %400, 8
  %402 = and i32 %401, 255
  %403 = add i32 512, %402
  %404 = getelementptr inbounds i32, i32* %399, i32 %403
  %405 = load i32, i32* %404, align 4
  %406 = xor i32 %398, %405
  %407 = load i32*, i32** %10, align 4
  %408 = load i32, i32* %7, align 4
  %409 = and i32 %408, 255
  %410 = add i32 768, %409
  %411 = getelementptr inbounds i32, i32* %407, i32 %410
  %412 = load i32, i32* %411, align 4
  %413 = add i32 %406, %412
  %414 = load i32, i32* %8, align 4
  %415 = xor i32 %414, %413
  store i32 %415, i32* %8, align 4
  %416 = load i32*, i32** %9, align 4
  %417 = getelementptr inbounds i32, i32* %416, i32 12
  %418 = load i32, i32* %417, align 4
  %419 = load i32, i32* %7, align 4
  %420 = xor i32 %419, %418
  store i32 %420, i32* %7, align 4
  %421 = load i32*, i32** %10, align 4
  %422 = load i32, i32* %8, align 4
  %423 = lshr i32 %422, 24
  %424 = getelementptr inbounds i32, i32* %421, i32 %423
  %425 = load i32, i32* %424, align 4
  %426 = load i32*, i32** %10, align 4
  %427 = load i32, i32* %8, align 4
  %428 = lshr i32 %427, 16
  %429 = and i32 %428, 255
  %430 = add i32 256, %429
  %431 = getelementptr inbounds i32, i32* %426, i32 %430
  %432 = load i32, i32* %431, align 4
  %433 = add i32 %425, %432
  %434 = load i32*, i32** %10, align 4
  %435 = load i32, i32* %8, align 4
  %436 = lshr i32 %435, 8
  %437 = and i32 %436, 255
  %438 = add i32 512, %437
  %439 = getelementptr inbounds i32, i32* %434, i32 %438
  %440 = load i32, i32* %439, align 4
  %441 = xor i32 %433, %440
  %442 = load i32*, i32** %10, align 4
  %443 = load i32, i32* %8, align 4
  %444 = and i32 %443, 255
  %445 = add i32 768, %444
  %446 = getelementptr inbounds i32, i32* %442, i32 %445
  %447 = load i32, i32* %446, align 4
  %448 = add i32 %441, %447
  %449 = load i32, i32* %7, align 4
  %450 = xor i32 %449, %448
  store i32 %450, i32* %7, align 4
  %451 = load i32*, i32** %9, align 4
  %452 = getelementptr inbounds i32, i32* %451, i32 13
  %453 = load i32, i32* %452, align 4
  %454 = load i32, i32* %8, align 4
  %455 = xor i32 %454, %453
  store i32 %455, i32* %8, align 4
  %456 = load i32*, i32** %10, align 4
  %457 = load i32, i32* %7, align 4
  %458 = lshr i32 %457, 24
  %459 = getelementptr inbounds i32, i32* %456, i32 %458
  %460 = load i32, i32* %459, align 4
  %461 = load i32*, i32** %10, align 4
  %462 = load i32, i32* %7, align 4
  %463 = lshr i32 %462, 16
  %464 = and i32 %463, 255
  %465 = add i32 256, %464
  %466 = getelementptr inbounds i32, i32* %461, i32 %465
  %467 = load i32, i32* %466, align 4
  %468 = add i32 %460, %467
  %469 = load i32*, i32** %10, align 4
  %470 = load i32, i32* %7, align 4
  %471 = lshr i32 %470, 8
  %472 = and i32 %471, 255
  %473 = add i32 512, %472
  %474 = getelementptr inbounds i32, i32* %469, i32 %473
  %475 = load i32, i32* %474, align 4
  %476 = xor i32 %468, %475
  %477 = load i32*, i32** %10, align 4
  %478 = load i32, i32* %7, align 4
  %479 = and i32 %478, 255
  %480 = add i32 768, %479
  %481 = getelementptr inbounds i32, i32* %477, i32 %480
  %482 = load i32, i32* %481, align 4
  %483 = add i32 %476, %482
  %484 = load i32, i32* %8, align 4
  %485 = xor i32 %484, %483
  store i32 %485, i32* %8, align 4
  %486 = load i32*, i32** %9, align 4
  %487 = getelementptr inbounds i32, i32* %486, i32 14
  %488 = load i32, i32* %487, align 4
  %489 = load i32, i32* %7, align 4
  %490 = xor i32 %489, %488
  store i32 %490, i32* %7, align 4
  %491 = load i32*, i32** %10, align 4
  %492 = load i32, i32* %8, align 4
  %493 = lshr i32 %492, 24
  %494 = getelementptr inbounds i32, i32* %491, i32 %493
  %495 = load i32, i32* %494, align 4
  %496 = load i32*, i32** %10, align 4
  %497 = load i32, i32* %8, align 4
  %498 = lshr i32 %497, 16
  %499 = and i32 %498, 255
  %500 = add i32 256, %499
  %501 = getelementptr inbounds i32, i32* %496, i32 %500
  %502 = load i32, i32* %501, align 4
  %503 = add i32 %495, %502
  %504 = load i32*, i32** %10, align 4
  %505 = load i32, i32* %8, align 4
  %506 = lshr i32 %505, 8
  %507 = and i32 %506, 255
  %508 = add i32 512, %507
  %509 = getelementptr inbounds i32, i32* %504, i32 %508
  %510 = load i32, i32* %509, align 4
  %511 = xor i32 %503, %510
  %512 = load i32*, i32** %10, align 4
  %513 = load i32, i32* %8, align 4
  %514 = and i32 %513, 255
  %515 = add i32 768, %514
  %516 = getelementptr inbounds i32, i32* %512, i32 %515
  %517 = load i32, i32* %516, align 4
  %518 = add i32 %511, %517
  %519 = load i32, i32* %7, align 4
  %520 = xor i32 %519, %518
  store i32 %520, i32* %7, align 4
  %521 = load i32*, i32** %9, align 4
  %522 = getelementptr inbounds i32, i32* %521, i32 15
  %523 = load i32, i32* %522, align 4
  %524 = load i32, i32* %8, align 4
  %525 = xor i32 %524, %523
  store i32 %525, i32* %8, align 4
  %526 = load i32*, i32** %10, align 4
  %527 = load i32, i32* %7, align 4
  %528 = lshr i32 %527, 24
  %529 = getelementptr inbounds i32, i32* %526, i32 %528
  %530 = load i32, i32* %529, align 4
  %531 = load i32*, i32** %10, align 4
  %532 = load i32, i32* %7, align 4
  %533 = lshr i32 %532, 16
  %534 = and i32 %533, 255
  %535 = add i32 256, %534
  %536 = getelementptr inbounds i32, i32* %531, i32 %535
  %537 = load i32, i32* %536, align 4
  %538 = add i32 %530, %537
  %539 = load i32*, i32** %10, align 4
  %540 = load i32, i32* %7, align 4
  %541 = lshr i32 %540, 8
  %542 = and i32 %541, 255
  %543 = add i32 512, %542
  %544 = getelementptr inbounds i32, i32* %539, i32 %543
  %545 = load i32, i32* %544, align 4
  %546 = xor i32 %538, %545
  %547 = load i32*, i32** %10, align 4
  %548 = load i32, i32* %7, align 4
  %549 = and i32 %548, 255
  %550 = add i32 768, %549
  %551 = getelementptr inbounds i32, i32* %547, i32 %550
  %552 = load i32, i32* %551, align 4
  %553 = add i32 %546, %552
  %554 = load i32, i32* %8, align 4
  %555 = xor i32 %554, %553
  store i32 %555, i32* %8, align 4
  %556 = load i32*, i32** %9, align 4
  %557 = getelementptr inbounds i32, i32* %556, i32 16
  %558 = load i32, i32* %557, align 4
  %559 = load i32, i32* %7, align 4
  %560 = xor i32 %559, %558
  store i32 %560, i32* %7, align 4
  %561 = load i32*, i32** %10, align 4
  %562 = load i32, i32* %8, align 4
  %563 = lshr i32 %562, 24
  %564 = getelementptr inbounds i32, i32* %561, i32 %563
  %565 = load i32, i32* %564, align 4
  %566 = load i32*, i32** %10, align 4
  %567 = load i32, i32* %8, align 4
  %568 = lshr i32 %567, 16
  %569 = and i32 %568, 255
  %570 = add i32 256, %569
  %571 = getelementptr inbounds i32, i32* %566, i32 %570
  %572 = load i32, i32* %571, align 4
  %573 = add i32 %565, %572
  %574 = load i32*, i32** %10, align 4
  %575 = load i32, i32* %8, align 4
  %576 = lshr i32 %575, 8
  %577 = and i32 %576, 255
  %578 = add i32 512, %577
  %579 = getelementptr inbounds i32, i32* %574, i32 %578
  %580 = load i32, i32* %579, align 4
  %581 = xor i32 %573, %580
  %582 = load i32*, i32** %10, align 4
  %583 = load i32, i32* %8, align 4
  %584 = and i32 %583, 255
  %585 = add i32 768, %584
  %586 = getelementptr inbounds i32, i32* %582, i32 %585
  %587 = load i32, i32* %586, align 4
  %588 = add i32 %581, %587
  %589 = load i32, i32* %7, align 4
  %590 = xor i32 %589, %588
  store i32 %590, i32* %7, align 4
  %591 = load i32*, i32** %9, align 4
  %592 = getelementptr inbounds i32, i32* %591, i32 17
  %593 = load i32, i32* %592, align 4
  %594 = load i32, i32* %8, align 4
  %595 = xor i32 %594, %593
  store i32 %595, i32* %8, align 4
  br label %1167

; <label>:596:                                    ; preds = %3
  %597 = load i32*, i32** %9, align 4
  %598 = getelementptr inbounds i32, i32* %597, i32 17
  %599 = load i32, i32* %598, align 4
  %600 = load i32, i32* %7, align 4
  %601 = xor i32 %600, %599
  store i32 %601, i32* %7, align 4
  %602 = load i32*, i32** %9, align 4
  %603 = getelementptr inbounds i32, i32* %602, i32 16
  %604 = load i32, i32* %603, align 4
  %605 = load i32, i32* %8, align 4
  %606 = xor i32 %605, %604
  store i32 %606, i32* %8, align 4
  %607 = load i32*, i32** %10, align 4
  %608 = load i32, i32* %7, align 4
  %609 = lshr i32 %608, 24
  %610 = getelementptr inbounds i32, i32* %607, i32 %609
  %611 = load i32, i32* %610, align 4
  %612 = load i32*, i32** %10, align 4
  %613 = load i32, i32* %7, align 4
  %614 = lshr i32 %613, 16
  %615 = and i32 %614, 255
  %616 = add i32 256, %615
  %617 = getelementptr inbounds i32, i32* %612, i32 %616
  %618 = load i32, i32* %617, align 4
  %619 = add i32 %611, %618
  %620 = load i32*, i32** %10, align 4
  %621 = load i32, i32* %7, align 4
  %622 = lshr i32 %621, 8
  %623 = and i32 %622, 255
  %624 = add i32 512, %623
  %625 = getelementptr inbounds i32, i32* %620, i32 %624
  %626 = load i32, i32* %625, align 4
  %627 = xor i32 %619, %626
  %628 = load i32*, i32** %10, align 4
  %629 = load i32, i32* %7, align 4
  %630 = and i32 %629, 255
  %631 = add i32 768, %630
  %632 = getelementptr inbounds i32, i32* %628, i32 %631
  %633 = load i32, i32* %632, align 4
  %634 = add i32 %627, %633
  %635 = load i32, i32* %8, align 4
  %636 = xor i32 %635, %634
  store i32 %636, i32* %8, align 4
  %637 = load i32*, i32** %9, align 4
  %638 = getelementptr inbounds i32, i32* %637, i32 15
  %639 = load i32, i32* %638, align 4
  %640 = load i32, i32* %7, align 4
  %641 = xor i32 %640, %639
  store i32 %641, i32* %7, align 4
  %642 = load i32*, i32** %10, align 4
  %643 = load i32, i32* %8, align 4
  %644 = lshr i32 %643, 24
  %645 = getelementptr inbounds i32, i32* %642, i32 %644
  %646 = load i32, i32* %645, align 4
  %647 = load i32*, i32** %10, align 4
  %648 = load i32, i32* %8, align 4
  %649 = lshr i32 %648, 16
  %650 = and i32 %649, 255
  %651 = add i32 256, %650
  %652 = getelementptr inbounds i32, i32* %647, i32 %651
  %653 = load i32, i32* %652, align 4
  %654 = add i32 %646, %653
  %655 = load i32*, i32** %10, align 4
  %656 = load i32, i32* %8, align 4
  %657 = lshr i32 %656, 8
  %658 = and i32 %657, 255
  %659 = add i32 512, %658
  %660 = getelementptr inbounds i32, i32* %655, i32 %659
  %661 = load i32, i32* %660, align 4
  %662 = xor i32 %654, %661
  %663 = load i32*, i32** %10, align 4
  %664 = load i32, i32* %8, align 4
  %665 = and i32 %664, 255
  %666 = add i32 768, %665
  %667 = getelementptr inbounds i32, i32* %663, i32 %666
  %668 = load i32, i32* %667, align 4
  %669 = add i32 %662, %668
  %670 = load i32, i32* %7, align 4
  %671 = xor i32 %670, %669
  store i32 %671, i32* %7, align 4
  %672 = load i32*, i32** %9, align 4
  %673 = getelementptr inbounds i32, i32* %672, i32 14
  %674 = load i32, i32* %673, align 4
  %675 = load i32, i32* %8, align 4
  %676 = xor i32 %675, %674
  store i32 %676, i32* %8, align 4
  %677 = load i32*, i32** %10, align 4
  %678 = load i32, i32* %7, align 4
  %679 = lshr i32 %678, 24
  %680 = getelementptr inbounds i32, i32* %677, i32 %679
  %681 = load i32, i32* %680, align 4
  %682 = load i32*, i32** %10, align 4
  %683 = load i32, i32* %7, align 4
  %684 = lshr i32 %683, 16
  %685 = and i32 %684, 255
  %686 = add i32 256, %685
  %687 = getelementptr inbounds i32, i32* %682, i32 %686
  %688 = load i32, i32* %687, align 4
  %689 = add i32 %681, %688
  %690 = load i32*, i32** %10, align 4
  %691 = load i32, i32* %7, align 4
  %692 = lshr i32 %691, 8
  %693 = and i32 %692, 255
  %694 = add i32 512, %693
  %695 = getelementptr inbounds i32, i32* %690, i32 %694
  %696 = load i32, i32* %695, align 4
  %697 = xor i32 %689, %696
  %698 = load i32*, i32** %10, align 4
  %699 = load i32, i32* %7, align 4
  %700 = and i32 %699, 255
  %701 = add i32 768, %700
  %702 = getelementptr inbounds i32, i32* %698, i32 %701
  %703 = load i32, i32* %702, align 4
  %704 = add i32 %697, %703
  %705 = load i32, i32* %8, align 4
  %706 = xor i32 %705, %704
  store i32 %706, i32* %8, align 4
  %707 = load i32*, i32** %9, align 4
  %708 = getelementptr inbounds i32, i32* %707, i32 13
  %709 = load i32, i32* %708, align 4
  %710 = load i32, i32* %7, align 4
  %711 = xor i32 %710, %709
  store i32 %711, i32* %7, align 4
  %712 = load i32*, i32** %10, align 4
  %713 = load i32, i32* %8, align 4
  %714 = lshr i32 %713, 24
  %715 = getelementptr inbounds i32, i32* %712, i32 %714
  %716 = load i32, i32* %715, align 4
  %717 = load i32*, i32** %10, align 4
  %718 = load i32, i32* %8, align 4
  %719 = lshr i32 %718, 16
  %720 = and i32 %719, 255
  %721 = add i32 256, %720
  %722 = getelementptr inbounds i32, i32* %717, i32 %721
  %723 = load i32, i32* %722, align 4
  %724 = add i32 %716, %723
  %725 = load i32*, i32** %10, align 4
  %726 = load i32, i32* %8, align 4
  %727 = lshr i32 %726, 8
  %728 = and i32 %727, 255
  %729 = add i32 512, %728
  %730 = getelementptr inbounds i32, i32* %725, i32 %729
  %731 = load i32, i32* %730, align 4
  %732 = xor i32 %724, %731
  %733 = load i32*, i32** %10, align 4
  %734 = load i32, i32* %8, align 4
  %735 = and i32 %734, 255
  %736 = add i32 768, %735
  %737 = getelementptr inbounds i32, i32* %733, i32 %736
  %738 = load i32, i32* %737, align 4
  %739 = add i32 %732, %738
  %740 = load i32, i32* %7, align 4
  %741 = xor i32 %740, %739
  store i32 %741, i32* %7, align 4
  %742 = load i32*, i32** %9, align 4
  %743 = getelementptr inbounds i32, i32* %742, i32 12
  %744 = load i32, i32* %743, align 4
  %745 = load i32, i32* %8, align 4
  %746 = xor i32 %745, %744
  store i32 %746, i32* %8, align 4
  %747 = load i32*, i32** %10, align 4
  %748 = load i32, i32* %7, align 4
  %749 = lshr i32 %748, 24
  %750 = getelementptr inbounds i32, i32* %747, i32 %749
  %751 = load i32, i32* %750, align 4
  %752 = load i32*, i32** %10, align 4
  %753 = load i32, i32* %7, align 4
  %754 = lshr i32 %753, 16
  %755 = and i32 %754, 255
  %756 = add i32 256, %755
  %757 = getelementptr inbounds i32, i32* %752, i32 %756
  %758 = load i32, i32* %757, align 4
  %759 = add i32 %751, %758
  %760 = load i32*, i32** %10, align 4
  %761 = load i32, i32* %7, align 4
  %762 = lshr i32 %761, 8
  %763 = and i32 %762, 255
  %764 = add i32 512, %763
  %765 = getelementptr inbounds i32, i32* %760, i32 %764
  %766 = load i32, i32* %765, align 4
  %767 = xor i32 %759, %766
  %768 = load i32*, i32** %10, align 4
  %769 = load i32, i32* %7, align 4
  %770 = and i32 %769, 255
  %771 = add i32 768, %770
  %772 = getelementptr inbounds i32, i32* %768, i32 %771
  %773 = load i32, i32* %772, align 4
  %774 = add i32 %767, %773
  %775 = load i32, i32* %8, align 4
  %776 = xor i32 %775, %774
  store i32 %776, i32* %8, align 4
  %777 = load i32*, i32** %9, align 4
  %778 = getelementptr inbounds i32, i32* %777, i32 11
  %779 = load i32, i32* %778, align 4
  %780 = load i32, i32* %7, align 4
  %781 = xor i32 %780, %779
  store i32 %781, i32* %7, align 4
  %782 = load i32*, i32** %10, align 4
  %783 = load i32, i32* %8, align 4
  %784 = lshr i32 %783, 24
  %785 = getelementptr inbounds i32, i32* %782, i32 %784
  %786 = load i32, i32* %785, align 4
  %787 = load i32*, i32** %10, align 4
  %788 = load i32, i32* %8, align 4
  %789 = lshr i32 %788, 16
  %790 = and i32 %789, 255
  %791 = add i32 256, %790
  %792 = getelementptr inbounds i32, i32* %787, i32 %791
  %793 = load i32, i32* %792, align 4
  %794 = add i32 %786, %793
  %795 = load i32*, i32** %10, align 4
  %796 = load i32, i32* %8, align 4
  %797 = lshr i32 %796, 8
  %798 = and i32 %797, 255
  %799 = add i32 512, %798
  %800 = getelementptr inbounds i32, i32* %795, i32 %799
  %801 = load i32, i32* %800, align 4
  %802 = xor i32 %794, %801
  %803 = load i32*, i32** %10, align 4
  %804 = load i32, i32* %8, align 4
  %805 = and i32 %804, 255
  %806 = add i32 768, %805
  %807 = getelementptr inbounds i32, i32* %803, i32 %806
  %808 = load i32, i32* %807, align 4
  %809 = add i32 %802, %808
  %810 = load i32, i32* %7, align 4
  %811 = xor i32 %810, %809
  store i32 %811, i32* %7, align 4
  %812 = load i32*, i32** %9, align 4
  %813 = getelementptr inbounds i32, i32* %812, i32 10
  %814 = load i32, i32* %813, align 4
  %815 = load i32, i32* %8, align 4
  %816 = xor i32 %815, %814
  store i32 %816, i32* %8, align 4
  %817 = load i32*, i32** %10, align 4
  %818 = load i32, i32* %7, align 4
  %819 = lshr i32 %818, 24
  %820 = getelementptr inbounds i32, i32* %817, i32 %819
  %821 = load i32, i32* %820, align 4
  %822 = load i32*, i32** %10, align 4
  %823 = load i32, i32* %7, align 4
  %824 = lshr i32 %823, 16
  %825 = and i32 %824, 255
  %826 = add i32 256, %825
  %827 = getelementptr inbounds i32, i32* %822, i32 %826
  %828 = load i32, i32* %827, align 4
  %829 = add i32 %821, %828
  %830 = load i32*, i32** %10, align 4
  %831 = load i32, i32* %7, align 4
  %832 = lshr i32 %831, 8
  %833 = and i32 %832, 255
  %834 = add i32 512, %833
  %835 = getelementptr inbounds i32, i32* %830, i32 %834
  %836 = load i32, i32* %835, align 4
  %837 = xor i32 %829, %836
  %838 = load i32*, i32** %10, align 4
  %839 = load i32, i32* %7, align 4
  %840 = and i32 %839, 255
  %841 = add i32 768, %840
  %842 = getelementptr inbounds i32, i32* %838, i32 %841
  %843 = load i32, i32* %842, align 4
  %844 = add i32 %837, %843
  %845 = load i32, i32* %8, align 4
  %846 = xor i32 %845, %844
  store i32 %846, i32* %8, align 4
  %847 = load i32*, i32** %9, align 4
  %848 = getelementptr inbounds i32, i32* %847, i32 9
  %849 = load i32, i32* %848, align 4
  %850 = load i32, i32* %7, align 4
  %851 = xor i32 %850, %849
  store i32 %851, i32* %7, align 4
  %852 = load i32*, i32** %10, align 4
  %853 = load i32, i32* %8, align 4
  %854 = lshr i32 %853, 24
  %855 = getelementptr inbounds i32, i32* %852, i32 %854
  %856 = load i32, i32* %855, align 4
  %857 = load i32*, i32** %10, align 4
  %858 = load i32, i32* %8, align 4
  %859 = lshr i32 %858, 16
  %860 = and i32 %859, 255
  %861 = add i32 256, %860
  %862 = getelementptr inbounds i32, i32* %857, i32 %861
  %863 = load i32, i32* %862, align 4
  %864 = add i32 %856, %863
  %865 = load i32*, i32** %10, align 4
  %866 = load i32, i32* %8, align 4
  %867 = lshr i32 %866, 8
  %868 = and i32 %867, 255
  %869 = add i32 512, %868
  %870 = getelementptr inbounds i32, i32* %865, i32 %869
  %871 = load i32, i32* %870, align 4
  %872 = xor i32 %864, %871
  %873 = load i32*, i32** %10, align 4
  %874 = load i32, i32* %8, align 4
  %875 = and i32 %874, 255
  %876 = add i32 768, %875
  %877 = getelementptr inbounds i32, i32* %873, i32 %876
  %878 = load i32, i32* %877, align 4
  %879 = add i32 %872, %878
  %880 = load i32, i32* %7, align 4
  %881 = xor i32 %880, %879
  store i32 %881, i32* %7, align 4
  %882 = load i32*, i32** %9, align 4
  %883 = getelementptr inbounds i32, i32* %882, i32 8
  %884 = load i32, i32* %883, align 4
  %885 = load i32, i32* %8, align 4
  %886 = xor i32 %885, %884
  store i32 %886, i32* %8, align 4
  %887 = load i32*, i32** %10, align 4
  %888 = load i32, i32* %7, align 4
  %889 = lshr i32 %888, 24
  %890 = getelementptr inbounds i32, i32* %887, i32 %889
  %891 = load i32, i32* %890, align 4
  %892 = load i32*, i32** %10, align 4
  %893 = load i32, i32* %7, align 4
  %894 = lshr i32 %893, 16
  %895 = and i32 %894, 255
  %896 = add i32 256, %895
  %897 = getelementptr inbounds i32, i32* %892, i32 %896
  %898 = load i32, i32* %897, align 4
  %899 = add i32 %891, %898
  %900 = load i32*, i32** %10, align 4
  %901 = load i32, i32* %7, align 4
  %902 = lshr i32 %901, 8
  %903 = and i32 %902, 255
  %904 = add i32 512, %903
  %905 = getelementptr inbounds i32, i32* %900, i32 %904
  %906 = load i32, i32* %905, align 4
  %907 = xor i32 %899, %906
  %908 = load i32*, i32** %10, align 4
  %909 = load i32, i32* %7, align 4
  %910 = and i32 %909, 255
  %911 = add i32 768, %910
  %912 = getelementptr inbounds i32, i32* %908, i32 %911
  %913 = load i32, i32* %912, align 4
  %914 = add i32 %907, %913
  %915 = load i32, i32* %8, align 4
  %916 = xor i32 %915, %914
  store i32 %916, i32* %8, align 4
  %917 = load i32*, i32** %9, align 4
  %918 = getelementptr inbounds i32, i32* %917, i32 7
  %919 = load i32, i32* %918, align 4
  %920 = load i32, i32* %7, align 4
  %921 = xor i32 %920, %919
  store i32 %921, i32* %7, align 4
  %922 = load i32*, i32** %10, align 4
  %923 = load i32, i32* %8, align 4
  %924 = lshr i32 %923, 24
  %925 = getelementptr inbounds i32, i32* %922, i32 %924
  %926 = load i32, i32* %925, align 4
  %927 = load i32*, i32** %10, align 4
  %928 = load i32, i32* %8, align 4
  %929 = lshr i32 %928, 16
  %930 = and i32 %929, 255
  %931 = add i32 256, %930
  %932 = getelementptr inbounds i32, i32* %927, i32 %931
  %933 = load i32, i32* %932, align 4
  %934 = add i32 %926, %933
  %935 = load i32*, i32** %10, align 4
  %936 = load i32, i32* %8, align 4
  %937 = lshr i32 %936, 8
  %938 = and i32 %937, 255
  %939 = add i32 512, %938
  %940 = getelementptr inbounds i32, i32* %935, i32 %939
  %941 = load i32, i32* %940, align 4
  %942 = xor i32 %934, %941
  %943 = load i32*, i32** %10, align 4
  %944 = load i32, i32* %8, align 4
  %945 = and i32 %944, 255
  %946 = add i32 768, %945
  %947 = getelementptr inbounds i32, i32* %943, i32 %946
  %948 = load i32, i32* %947, align 4
  %949 = add i32 %942, %948
  %950 = load i32, i32* %7, align 4
  %951 = xor i32 %950, %949
  store i32 %951, i32* %7, align 4
  %952 = load i32*, i32** %9, align 4
  %953 = getelementptr inbounds i32, i32* %952, i32 6
  %954 = load i32, i32* %953, align 4
  %955 = load i32, i32* %8, align 4
  %956 = xor i32 %955, %954
  store i32 %956, i32* %8, align 4
  %957 = load i32*, i32** %10, align 4
  %958 = load i32, i32* %7, align 4
  %959 = lshr i32 %958, 24
  %960 = getelementptr inbounds i32, i32* %957, i32 %959
  %961 = load i32, i32* %960, align 4
  %962 = load i32*, i32** %10, align 4
  %963 = load i32, i32* %7, align 4
  %964 = lshr i32 %963, 16
  %965 = and i32 %964, 255
  %966 = add i32 256, %965
  %967 = getelementptr inbounds i32, i32* %962, i32 %966
  %968 = load i32, i32* %967, align 4
  %969 = add i32 %961, %968
  %970 = load i32*, i32** %10, align 4
  %971 = load i32, i32* %7, align 4
  %972 = lshr i32 %971, 8
  %973 = and i32 %972, 255
  %974 = add i32 512, %973
  %975 = getelementptr inbounds i32, i32* %970, i32 %974
  %976 = load i32, i32* %975, align 4
  %977 = xor i32 %969, %976
  %978 = load i32*, i32** %10, align 4
  %979 = load i32, i32* %7, align 4
  %980 = and i32 %979, 255
  %981 = add i32 768, %980
  %982 = getelementptr inbounds i32, i32* %978, i32 %981
  %983 = load i32, i32* %982, align 4
  %984 = add i32 %977, %983
  %985 = load i32, i32* %8, align 4
  %986 = xor i32 %985, %984
  store i32 %986, i32* %8, align 4
  %987 = load i32*, i32** %9, align 4
  %988 = getelementptr inbounds i32, i32* %987, i32 5
  %989 = load i32, i32* %988, align 4
  %990 = load i32, i32* %7, align 4
  %991 = xor i32 %990, %989
  store i32 %991, i32* %7, align 4
  %992 = load i32*, i32** %10, align 4
  %993 = load i32, i32* %8, align 4
  %994 = lshr i32 %993, 24
  %995 = getelementptr inbounds i32, i32* %992, i32 %994
  %996 = load i32, i32* %995, align 4
  %997 = load i32*, i32** %10, align 4
  %998 = load i32, i32* %8, align 4
  %999 = lshr i32 %998, 16
  %1000 = and i32 %999, 255
  %1001 = add i32 256, %1000
  %1002 = getelementptr inbounds i32, i32* %997, i32 %1001
  %1003 = load i32, i32* %1002, align 4
  %1004 = add i32 %996, %1003
  %1005 = load i32*, i32** %10, align 4
  %1006 = load i32, i32* %8, align 4
  %1007 = lshr i32 %1006, 8
  %1008 = and i32 %1007, 255
  %1009 = add i32 512, %1008
  %1010 = getelementptr inbounds i32, i32* %1005, i32 %1009
  %1011 = load i32, i32* %1010, align 4
  %1012 = xor i32 %1004, %1011
  %1013 = load i32*, i32** %10, align 4
  %1014 = load i32, i32* %8, align 4
  %1015 = and i32 %1014, 255
  %1016 = add i32 768, %1015
  %1017 = getelementptr inbounds i32, i32* %1013, i32 %1016
  %1018 = load i32, i32* %1017, align 4
  %1019 = add i32 %1012, %1018
  %1020 = load i32, i32* %7, align 4
  %1021 = xor i32 %1020, %1019
  store i32 %1021, i32* %7, align 4
  %1022 = load i32*, i32** %9, align 4
  %1023 = getelementptr inbounds i32, i32* %1022, i32 4
  %1024 = load i32, i32* %1023, align 4
  %1025 = load i32, i32* %8, align 4
  %1026 = xor i32 %1025, %1024
  store i32 %1026, i32* %8, align 4
  %1027 = load i32*, i32** %10, align 4
  %1028 = load i32, i32* %7, align 4
  %1029 = lshr i32 %1028, 24
  %1030 = getelementptr inbounds i32, i32* %1027, i32 %1029
  %1031 = load i32, i32* %1030, align 4
  %1032 = load i32*, i32** %10, align 4
  %1033 = load i32, i32* %7, align 4
  %1034 = lshr i32 %1033, 16
  %1035 = and i32 %1034, 255
  %1036 = add i32 256, %1035
  %1037 = getelementptr inbounds i32, i32* %1032, i32 %1036
  %1038 = load i32, i32* %1037, align 4
  %1039 = add i32 %1031, %1038
  %1040 = load i32*, i32** %10, align 4
  %1041 = load i32, i32* %7, align 4
  %1042 = lshr i32 %1041, 8
  %1043 = and i32 %1042, 255
  %1044 = add i32 512, %1043
  %1045 = getelementptr inbounds i32, i32* %1040, i32 %1044
  %1046 = load i32, i32* %1045, align 4
  %1047 = xor i32 %1039, %1046
  %1048 = load i32*, i32** %10, align 4
  %1049 = load i32, i32* %7, align 4
  %1050 = and i32 %1049, 255
  %1051 = add i32 768, %1050
  %1052 = getelementptr inbounds i32, i32* %1048, i32 %1051
  %1053 = load i32, i32* %1052, align 4
  %1054 = add i32 %1047, %1053
  %1055 = load i32, i32* %8, align 4
  %1056 = xor i32 %1055, %1054
  store i32 %1056, i32* %8, align 4
  %1057 = load i32*, i32** %9, align 4
  %1058 = getelementptr inbounds i32, i32* %1057, i32 3
  %1059 = load i32, i32* %1058, align 4
  %1060 = load i32, i32* %7, align 4
  %1061 = xor i32 %1060, %1059
  store i32 %1061, i32* %7, align 4
  %1062 = load i32*, i32** %10, align 4
  %1063 = load i32, i32* %8, align 4
  %1064 = lshr i32 %1063, 24
  %1065 = getelementptr inbounds i32, i32* %1062, i32 %1064
  %1066 = load i32, i32* %1065, align 4
  %1067 = load i32*, i32** %10, align 4
  %1068 = load i32, i32* %8, align 4
  %1069 = lshr i32 %1068, 16
  %1070 = and i32 %1069, 255
  %1071 = add i32 256, %1070
  %1072 = getelementptr inbounds i32, i32* %1067, i32 %1071
  %1073 = load i32, i32* %1072, align 4
  %1074 = add i32 %1066, %1073
  %1075 = load i32*, i32** %10, align 4
  %1076 = load i32, i32* %8, align 4
  %1077 = lshr i32 %1076, 8
  %1078 = and i32 %1077, 255
  %1079 = add i32 512, %1078
  %1080 = getelementptr inbounds i32, i32* %1075, i32 %1079
  %1081 = load i32, i32* %1080, align 4
  %1082 = xor i32 %1074, %1081
  %1083 = load i32*, i32** %10, align 4
  %1084 = load i32, i32* %8, align 4
  %1085 = and i32 %1084, 255
  %1086 = add i32 768, %1085
  %1087 = getelementptr inbounds i32, i32* %1083, i32 %1086
  %1088 = load i32, i32* %1087, align 4
  %1089 = add i32 %1082, %1088
  %1090 = load i32, i32* %7, align 4
  %1091 = xor i32 %1090, %1089
  store i32 %1091, i32* %7, align 4
  %1092 = load i32*, i32** %9, align 4
  %1093 = getelementptr inbounds i32, i32* %1092, i32 2
  %1094 = load i32, i32* %1093, align 4
  %1095 = load i32, i32* %8, align 4
  %1096 = xor i32 %1095, %1094
  store i32 %1096, i32* %8, align 4
  %1097 = load i32*, i32** %10, align 4
  %1098 = load i32, i32* %7, align 4
  %1099 = lshr i32 %1098, 24
  %1100 = getelementptr inbounds i32, i32* %1097, i32 %1099
  %1101 = load i32, i32* %1100, align 4
  %1102 = load i32*, i32** %10, align 4
  %1103 = load i32, i32* %7, align 4
  %1104 = lshr i32 %1103, 16
  %1105 = and i32 %1104, 255
  %1106 = add i32 256, %1105
  %1107 = getelementptr inbounds i32, i32* %1102, i32 %1106
  %1108 = load i32, i32* %1107, align 4
  %1109 = add i32 %1101, %1108
  %1110 = load i32*, i32** %10, align 4
  %1111 = load i32, i32* %7, align 4
  %1112 = lshr i32 %1111, 8
  %1113 = and i32 %1112, 255
  %1114 = add i32 512, %1113
  %1115 = getelementptr inbounds i32, i32* %1110, i32 %1114
  %1116 = load i32, i32* %1115, align 4
  %1117 = xor i32 %1109, %1116
  %1118 = load i32*, i32** %10, align 4
  %1119 = load i32, i32* %7, align 4
  %1120 = and i32 %1119, 255
  %1121 = add i32 768, %1120
  %1122 = getelementptr inbounds i32, i32* %1118, i32 %1121
  %1123 = load i32, i32* %1122, align 4
  %1124 = add i32 %1117, %1123
  %1125 = load i32, i32* %8, align 4
  %1126 = xor i32 %1125, %1124
  store i32 %1126, i32* %8, align 4
  %1127 = load i32*, i32** %9, align 4
  %1128 = getelementptr inbounds i32, i32* %1127, i32 1
  %1129 = load i32, i32* %1128, align 4
  %1130 = load i32, i32* %7, align 4
  %1131 = xor i32 %1130, %1129
  store i32 %1131, i32* %7, align 4
  %1132 = load i32*, i32** %10, align 4
  %1133 = load i32, i32* %8, align 4
  %1134 = lshr i32 %1133, 24
  %1135 = getelementptr inbounds i32, i32* %1132, i32 %1134
  %1136 = load i32, i32* %1135, align 4
  %1137 = load i32*, i32** %10, align 4
  %1138 = load i32, i32* %8, align 4
  %1139 = lshr i32 %1138, 16
  %1140 = and i32 %1139, 255
  %1141 = add i32 256, %1140
  %1142 = getelementptr inbounds i32, i32* %1137, i32 %1141
  %1143 = load i32, i32* %1142, align 4
  %1144 = add i32 %1136, %1143
  %1145 = load i32*, i32** %10, align 4
  %1146 = load i32, i32* %8, align 4
  %1147 = lshr i32 %1146, 8
  %1148 = and i32 %1147, 255
  %1149 = add i32 512, %1148
  %1150 = getelementptr inbounds i32, i32* %1145, i32 %1149
  %1151 = load i32, i32* %1150, align 4
  %1152 = xor i32 %1144, %1151
  %1153 = load i32*, i32** %10, align 4
  %1154 = load i32, i32* %8, align 4
  %1155 = and i32 %1154, 255
  %1156 = add i32 768, %1155
  %1157 = getelementptr inbounds i32, i32* %1153, i32 %1156
  %1158 = load i32, i32* %1157, align 4
  %1159 = add i32 %1152, %1158
  %1160 = load i32, i32* %7, align 4
  %1161 = xor i32 %1160, %1159
  store i32 %1161, i32* %7, align 4
  %1162 = load i32*, i32** %9, align 4
  %1163 = getelementptr inbounds i32, i32* %1162, i32 0
  %1164 = load i32, i32* %1163, align 4
  %1165 = load i32, i32* %8, align 4
  %1166 = xor i32 %1165, %1164
  store i32 %1166, i32* %8, align 4
  br label %1167

; <label>:1167:                                   ; preds = %596, %25
  %1168 = load i32, i32* %7, align 4
  %1169 = load i32*, i32** %4, align 4
  %1170 = getelementptr inbounds i32, i32* %1169, i32 1
  store i32 %1168, i32* %1170, align 4
  %1171 = load i32, i32* %8, align 4
  %1172 = load i32*, i32** %4, align 4
  %1173 = getelementptr inbounds i32, i32* %1172, i32 0
  store i32 %1171, i32* %1173, align 4
  ret void
}

; Function Attrs: nounwind
define arm_aapcscc void @BF_ofb64_encrypt(i8*, i8*, i32, %struct.bf_key_st*, i8*, i32*) #0 {
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.bf_key_st*, align 4
  %11 = alloca i8*, align 4
  %12 = alloca i32*, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca [8 x i8], align 1
  %19 = alloca i8*, align 4
  %20 = alloca [2 x i32], align 4
  %21 = alloca i8*, align 4
  %22 = alloca i32, align 4
  store i8* %0, i8** %7, align 4
  store i8* %1, i8** %8, align 4
  store i32 %2, i32* %9, align 4
  store %struct.bf_key_st* %3, %struct.bf_key_st** %10, align 4
  store i8* %4, i8** %11, align 4
  store i32* %5, i32** %12, align 4
  %23 = load i32*, i32** %12, align 4
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %16, align 4
  %25 = load i32, i32* %9, align 4
  store i32 %25, i32* %17, align 4
  store i32 0, i32* %22, align 4
  %26 = load i8*, i8** %11, align 4
  store i8* %26, i8** %21, align 4
  %27 = load i8*, i8** %21, align 4
  %28 = getelementptr inbounds i8, i8* %27, i32 1
  store i8* %28, i8** %21, align 4
  %29 = load i8, i8* %27, align 1
  %30 = zext i8 %29 to i32
  %31 = shl i32 %30, 24
  store i32 %31, i32* %13, align 4
  %32 = load i8*, i8** %21, align 4
  %33 = getelementptr inbounds i8, i8* %32, i32 1
  store i8* %33, i8** %21, align 4
  %34 = load i8, i8* %32, align 1
  %35 = zext i8 %34 to i32
  %36 = shl i32 %35, 16
  %37 = load i32, i32* %13, align 4
  %38 = or i32 %37, %36
  store i32 %38, i32* %13, align 4
  %39 = load i8*, i8** %21, align 4
  %40 = getelementptr inbounds i8, i8* %39, i32 1
  store i8* %40, i8** %21, align 4
  %41 = load i8, i8* %39, align 1
  %42 = zext i8 %41 to i32
  %43 = shl i32 %42, 8
  %44 = load i32, i32* %13, align 4
  %45 = or i32 %44, %43
  store i32 %45, i32* %13, align 4
  %46 = load i8*, i8** %21, align 4
  %47 = getelementptr inbounds i8, i8* %46, i32 1
  store i8* %47, i8** %21, align 4
  %48 = load i8, i8* %46, align 1
  %49 = zext i8 %48 to i32
  %50 = load i32, i32* %13, align 4
  %51 = or i32 %50, %49
  store i32 %51, i32* %13, align 4
  %52 = load i8*, i8** %21, align 4
  %53 = getelementptr inbounds i8, i8* %52, i32 1
  store i8* %53, i8** %21, align 4
  %54 = load i8, i8* %52, align 1
  %55 = zext i8 %54 to i32
  %56 = shl i32 %55, 24
  store i32 %56, i32* %14, align 4
  %57 = load i8*, i8** %21, align 4
  %58 = getelementptr inbounds i8, i8* %57, i32 1
  store i8* %58, i8** %21, align 4
  %59 = load i8, i8* %57, align 1
  %60 = zext i8 %59 to i32
  %61 = shl i32 %60, 16
  %62 = load i32, i32* %14, align 4
  %63 = or i32 %62, %61
  store i32 %63, i32* %14, align 4
  %64 = load i8*, i8** %21, align 4
  %65 = getelementptr inbounds i8, i8* %64, i32 1
  store i8* %65, i8** %21, align 4
  %66 = load i8, i8* %64, align 1
  %67 = zext i8 %66 to i32
  %68 = shl i32 %67, 8
  %69 = load i32, i32* %14, align 4
  %70 = or i32 %69, %68
  store i32 %70, i32* %14, align 4
  %71 = load i8*, i8** %21, align 4
  %72 = getelementptr inbounds i8, i8* %71, i32 1
  store i8* %72, i8** %21, align 4
  %73 = load i8, i8* %71, align 1
  %74 = zext i8 %73 to i32
  %75 = load i32, i32* %14, align 4
  %76 = or i32 %75, %74
  store i32 %76, i32* %14, align 4
  %77 = load i32, i32* %13, align 4
  %78 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  store i32 %77, i32* %78, align 4
  %79 = load i32, i32* %14, align 4
  %80 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 1
  store i32 %79, i32* %80, align 4
  %81 = getelementptr inbounds [8 x i8], [8 x i8]* %18, i32 0, i32 0
  store i8* %81, i8** %19, align 4
  %82 = load i32, i32* %13, align 4
  %83 = lshr i32 %82, 24
  %84 = and i32 %83, 255
  %85 = trunc i32 %84 to i8
  %86 = load i8*, i8** %19, align 4
  %87 = getelementptr inbounds i8, i8* %86, i32 1
  store i8* %87, i8** %19, align 4
  store i8 %85, i8* %86, align 1
  %88 = load i32, i32* %13, align 4
  %89 = lshr i32 %88, 16
  %90 = and i32 %89, 255
  %91 = trunc i32 %90 to i8
  %92 = load i8*, i8** %19, align 4
  %93 = getelementptr inbounds i8, i8* %92, i32 1
  store i8* %93, i8** %19, align 4
  store i8 %91, i8* %92, align 1
  %94 = load i32, i32* %13, align 4
  %95 = lshr i32 %94, 8
  %96 = and i32 %95, 255
  %97 = trunc i32 %96 to i8
  %98 = load i8*, i8** %19, align 4
  %99 = getelementptr inbounds i8, i8* %98, i32 1
  store i8* %99, i8** %19, align 4
  store i8 %97, i8* %98, align 1
  %100 = load i32, i32* %13, align 4
  %101 = and i32 %100, 255
  %102 = trunc i32 %101 to i8
  %103 = load i8*, i8** %19, align 4
  %104 = getelementptr inbounds i8, i8* %103, i32 1
  store i8* %104, i8** %19, align 4
  store i8 %102, i8* %103, align 1
  %105 = load i32, i32* %14, align 4
  %106 = lshr i32 %105, 24
  %107 = and i32 %106, 255
  %108 = trunc i32 %107 to i8
  %109 = load i8*, i8** %19, align 4
  %110 = getelementptr inbounds i8, i8* %109, i32 1
  store i8* %110, i8** %19, align 4
  store i8 %108, i8* %109, align 1
  %111 = load i32, i32* %14, align 4
  %112 = lshr i32 %111, 16
  %113 = and i32 %112, 255
  %114 = trunc i32 %113 to i8
  %115 = load i8*, i8** %19, align 4
  %116 = getelementptr inbounds i8, i8* %115, i32 1
  store i8* %116, i8** %19, align 4
  store i8 %114, i8* %115, align 1
  %117 = load i32, i32* %14, align 4
  %118 = lshr i32 %117, 8
  %119 = and i32 %118, 255
  %120 = trunc i32 %119 to i8
  %121 = load i8*, i8** %19, align 4
  %122 = getelementptr inbounds i8, i8* %121, i32 1
  store i8* %122, i8** %19, align 4
  store i8 %120, i8* %121, align 1
  %123 = load i32, i32* %14, align 4
  %124 = and i32 %123, 255
  %125 = trunc i32 %124 to i8
  %126 = load i8*, i8** %19, align 4
  %127 = getelementptr inbounds i8, i8* %126, i32 1
  store i8* %127, i8** %19, align 4
  store i8 %125, i8* %126, align 1
  br label %128

; <label>:128:                                    ; preds = %191, %6
  %129 = load i32, i32* %17, align 4
  %130 = add nsw i32 %129, -1
  store i32 %130, i32* %17, align 4
  %131 = icmp ne i32 %129, 0
  br i1 %131, label %132, label %207

; <label>:132:                                    ; preds = %128
  %133 = load i32, i32* %16, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %191

; <label>:135:                                    ; preds = %132
  %136 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  %137 = load %struct.bf_key_st*, %struct.bf_key_st** %10, align 4
  call arm_aapcscc void @BF_encrypt(i32* %136, %struct.bf_key_st* %137, i32 1)
  %138 = getelementptr inbounds [8 x i8], [8 x i8]* %18, i32 0, i32 0
  store i8* %138, i8** %19, align 4
  %139 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  %140 = load i32, i32* %139, align 4
  store i32 %140, i32* %15, align 4
  %141 = load i32, i32* %15, align 4
  %142 = lshr i32 %141, 24
  %143 = and i32 %142, 255
  %144 = trunc i32 %143 to i8
  %145 = load i8*, i8** %19, align 4
  %146 = getelementptr inbounds i8, i8* %145, i32 1
  store i8* %146, i8** %19, align 4
  store i8 %144, i8* %145, align 1
  %147 = load i32, i32* %15, align 4
  %148 = lshr i32 %147, 16
  %149 = and i32 %148, 255
  %150 = trunc i32 %149 to i8
  %151 = load i8*, i8** %19, align 4
  %152 = getelementptr inbounds i8, i8* %151, i32 1
  store i8* %152, i8** %19, align 4
  store i8 %150, i8* %151, align 1
  %153 = load i32, i32* %15, align 4
  %154 = lshr i32 %153, 8
  %155 = and i32 %154, 255
  %156 = trunc i32 %155 to i8
  %157 = load i8*, i8** %19, align 4
  %158 = getelementptr inbounds i8, i8* %157, i32 1
  store i8* %158, i8** %19, align 4
  store i8 %156, i8* %157, align 1
  %159 = load i32, i32* %15, align 4
  %160 = and i32 %159, 255
  %161 = trunc i32 %160 to i8
  %162 = load i8*, i8** %19, align 4
  %163 = getelementptr inbounds i8, i8* %162, i32 1
  store i8* %163, i8** %19, align 4
  store i8 %161, i8* %162, align 1
  %164 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 1
  %165 = load i32, i32* %164, align 4
  store i32 %165, i32* %15, align 4
  %166 = load i32, i32* %15, align 4
  %167 = lshr i32 %166, 24
  %168 = and i32 %167, 255
  %169 = trunc i32 %168 to i8
  %170 = load i8*, i8** %19, align 4
  %171 = getelementptr inbounds i8, i8* %170, i32 1
  store i8* %171, i8** %19, align 4
  store i8 %169, i8* %170, align 1
  %172 = load i32, i32* %15, align 4
  %173 = lshr i32 %172, 16
  %174 = and i32 %173, 255
  %175 = trunc i32 %174 to i8
  %176 = load i8*, i8** %19, align 4
  %177 = getelementptr inbounds i8, i8* %176, i32 1
  store i8* %177, i8** %19, align 4
  store i8 %175, i8* %176, align 1
  %178 = load i32, i32* %15, align 4
  %179 = lshr i32 %178, 8
  %180 = and i32 %179, 255
  %181 = trunc i32 %180 to i8
  %182 = load i8*, i8** %19, align 4
  %183 = getelementptr inbounds i8, i8* %182, i32 1
  store i8* %183, i8** %19, align 4
  store i8 %181, i8* %182, align 1
  %184 = load i32, i32* %15, align 4
  %185 = and i32 %184, 255
  %186 = trunc i32 %185 to i8
  %187 = load i8*, i8** %19, align 4
  %188 = getelementptr inbounds i8, i8* %187, i32 1
  store i8* %188, i8** %19, align 4
  store i8 %186, i8* %187, align 1
  %189 = load i32, i32* %22, align 4
  %190 = add nsw i32 %189, 1
  store i32 %190, i32* %22, align 4
  br label %191

; <label>:191:                                    ; preds = %135, %132
  %192 = load i8*, i8** %7, align 4
  %193 = getelementptr inbounds i8, i8* %192, i32 1
  store i8* %193, i8** %7, align 4
  %194 = load i8, i8* %192, align 1
  %195 = zext i8 %194 to i32
  %196 = load i32, i32* %16, align 4
  %197 = getelementptr inbounds [8 x i8], [8 x i8]* %18, i32 0, i32 %196
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i32
  %200 = xor i32 %195, %199
  %201 = trunc i32 %200 to i8
  %202 = load i8*, i8** %8, align 4
  %203 = getelementptr inbounds i8, i8* %202, i32 1
  store i8* %203, i8** %8, align 4
  store i8 %201, i8* %202, align 1
  %204 = load i32, i32* %16, align 4
  %205 = add nsw i32 %204, 1
  %206 = and i32 %205, 7
  store i32 %206, i32* %16, align 4
  br label %128

; <label>:207:                                    ; preds = %128
  %208 = load i32, i32* %22, align 4
  %209 = icmp ne i32 %208, 0
  br i1 %209, label %210, label %262

; <label>:210:                                    ; preds = %207
  %211 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  %212 = load i32, i32* %211, align 4
  store i32 %212, i32* %13, align 4
  %213 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 1
  %214 = load i32, i32* %213, align 4
  store i32 %214, i32* %14, align 4
  %215 = load i8*, i8** %11, align 4
  store i8* %215, i8** %21, align 4
  %216 = load i32, i32* %13, align 4
  %217 = lshr i32 %216, 24
  %218 = and i32 %217, 255
  %219 = trunc i32 %218 to i8
  %220 = load i8*, i8** %21, align 4
  %221 = getelementptr inbounds i8, i8* %220, i32 1
  store i8* %221, i8** %21, align 4
  store i8 %219, i8* %220, align 1
  %222 = load i32, i32* %13, align 4
  %223 = lshr i32 %222, 16
  %224 = and i32 %223, 255
  %225 = trunc i32 %224 to i8
  %226 = load i8*, i8** %21, align 4
  %227 = getelementptr inbounds i8, i8* %226, i32 1
  store i8* %227, i8** %21, align 4
  store i8 %225, i8* %226, align 1
  %228 = load i32, i32* %13, align 4
  %229 = lshr i32 %228, 8
  %230 = and i32 %229, 255
  %231 = trunc i32 %230 to i8
  %232 = load i8*, i8** %21, align 4
  %233 = getelementptr inbounds i8, i8* %232, i32 1
  store i8* %233, i8** %21, align 4
  store i8 %231, i8* %232, align 1
  %234 = load i32, i32* %13, align 4
  %235 = and i32 %234, 255
  %236 = trunc i32 %235 to i8
  %237 = load i8*, i8** %21, align 4
  %238 = getelementptr inbounds i8, i8* %237, i32 1
  store i8* %238, i8** %21, align 4
  store i8 %236, i8* %237, align 1
  %239 = load i32, i32* %14, align 4
  %240 = lshr i32 %239, 24
  %241 = and i32 %240, 255
  %242 = trunc i32 %241 to i8
  %243 = load i8*, i8** %21, align 4
  %244 = getelementptr inbounds i8, i8* %243, i32 1
  store i8* %244, i8** %21, align 4
  store i8 %242, i8* %243, align 1
  %245 = load i32, i32* %14, align 4
  %246 = lshr i32 %245, 16
  %247 = and i32 %246, 255
  %248 = trunc i32 %247 to i8
  %249 = load i8*, i8** %21, align 4
  %250 = getelementptr inbounds i8, i8* %249, i32 1
  store i8* %250, i8** %21, align 4
  store i8 %248, i8* %249, align 1
  %251 = load i32, i32* %14, align 4
  %252 = lshr i32 %251, 8
  %253 = and i32 %252, 255
  %254 = trunc i32 %253 to i8
  %255 = load i8*, i8** %21, align 4
  %256 = getelementptr inbounds i8, i8* %255, i32 1
  store i8* %256, i8** %21, align 4
  store i8 %254, i8* %255, align 1
  %257 = load i32, i32* %14, align 4
  %258 = and i32 %257, 255
  %259 = trunc i32 %258 to i8
  %260 = load i8*, i8** %21, align 4
  %261 = getelementptr inbounds i8, i8* %260, i32 1
  store i8* %261, i8** %21, align 4
  store i8 %259, i8* %260, align 1
  br label %262

; <label>:262:                                    ; preds = %210, %207
  %263 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 1
  store i32 0, i32* %263, align 4
  %264 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i32 0, i32 0
  store i32 0, i32* %264, align 4
  store i32 0, i32* %14, align 4
  store i32 0, i32* %13, align 4
  store i32 0, i32* %15, align 4
  %265 = load i32, i32* %16, align 4
  %266 = load i32*, i32** %12, align 4
  store i32 %265, i32* %266, align 4
  ret void
}

; Function Attrs: nounwind
define arm_aapcscc void @BF_set_key(%struct.bf_key_st*, i32, i8*) #0 {
  %4 = alloca %struct.bf_key_st*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 4
  %9 = alloca i32, align 4
  %10 = alloca [2 x i32], align 4
  %11 = alloca i8*, align 4
  %12 = alloca i8*, align 4
  store %struct.bf_key_st* %0, %struct.bf_key_st** %4, align 4
  store i32 %1, i32* %5, align 4
  store i8* %2, i8** %6, align 4
  %13 = load %struct.bf_key_st*, %struct.bf_key_st** %4, align 4
  %14 = bitcast %struct.bf_key_st* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %14, i8* bitcast (%struct.bf_key_st* @bf_init to i8*), i32 4168, i32 1, i1 false)
  %15 = load %struct.bf_key_st*, %struct.bf_key_st** %4, align 4
  %16 = getelementptr inbounds %struct.bf_key_st, %struct.bf_key_st* %15, i32 0, i32 0
  %17 = getelementptr inbounds [18 x i32], [18 x i32]* %16, i32 0, i32 0
  store i32* %17, i32** %8, align 4
  %18 = load i32, i32* %5, align 4
  %19 = icmp sgt i32 %18, 72
  br i1 %19, label %20, label %21

; <label>:20:                                     ; preds = %3
  store i32 72, i32* %5, align 4
  br label %21

; <label>:21:                                     ; preds = %20, %3
  %22 = load i8*, i8** %6, align 4
  store i8* %22, i8** %11, align 4
  %23 = load i8*, i8** %6, align 4
  %24 = load i32, i32* %5, align 4
  %25 = getelementptr inbounds i8, i8* %23, i32 %24
  store i8* %25, i8** %12, align 4
  store i32 0, i32* %7, align 4
  br label %26

; <label>:26:                                     ; preds = %88, %21
  %27 = load i32, i32* %7, align 4
  %28 = icmp slt i32 %27, 18
  br i1 %28, label %29, label %91

; <label>:29:                                     ; preds = %26
  %30 = load i8*, i8** %11, align 4
  %31 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %31, i8** %11, align 4
  %32 = load i8, i8* %30, align 1
  %33 = zext i8 %32 to i32
  store i32 %33, i32* %9, align 4
  %34 = load i8*, i8** %11, align 4
  %35 = load i8*, i8** %12, align 4
  %36 = icmp uge i8* %34, %35
  br i1 %36, label %37, label %39

; <label>:37:                                     ; preds = %29
  %38 = load i8*, i8** %6, align 4
  store i8* %38, i8** %11, align 4
  br label %39

; <label>:39:                                     ; preds = %37, %29
  %40 = load i32, i32* %9, align 4
  %41 = shl i32 %40, 8
  store i32 %41, i32* %9, align 4
  %42 = load i8*, i8** %11, align 4
  %43 = getelementptr inbounds i8, i8* %42, i32 1
  store i8* %43, i8** %11, align 4
  %44 = load i8, i8* %42, align 1
  %45 = zext i8 %44 to i32
  %46 = load i32, i32* %9, align 4
  %47 = or i32 %46, %45
  store i32 %47, i32* %9, align 4
  %48 = load i8*, i8** %11, align 4
  %49 = load i8*, i8** %12, align 4
  %50 = icmp uge i8* %48, %49
  br i1 %50, label %51, label %53

; <label>:51:                                     ; preds = %39
  %52 = load i8*, i8** %6, align 4
  store i8* %52, i8** %11, align 4
  br label %53

; <label>:53:                                     ; preds = %51, %39
  %54 = load i32, i32* %9, align 4
  %55 = shl i32 %54, 8
  store i32 %55, i32* %9, align 4
  %56 = load i8*, i8** %11, align 4
  %57 = getelementptr inbounds i8, i8* %56, i32 1
  store i8* %57, i8** %11, align 4
  %58 = load i8, i8* %56, align 1
  %59 = zext i8 %58 to i32
  %60 = load i32, i32* %9, align 4
  %61 = or i32 %60, %59
  store i32 %61, i32* %9, align 4
  %62 = load i8*, i8** %11, align 4
  %63 = load i8*, i8** %12, align 4
  %64 = icmp uge i8* %62, %63
  br i1 %64, label %65, label %67

; <label>:65:                                     ; preds = %53
  %66 = load i8*, i8** %6, align 4
  store i8* %66, i8** %11, align 4
  br label %67

; <label>:67:                                     ; preds = %65, %53
  %68 = load i32, i32* %9, align 4
  %69 = shl i32 %68, 8
  store i32 %69, i32* %9, align 4
  %70 = load i8*, i8** %11, align 4
  %71 = getelementptr inbounds i8, i8* %70, i32 1
  store i8* %71, i8** %11, align 4
  %72 = load i8, i8* %70, align 1
  %73 = zext i8 %72 to i32
  %74 = load i32, i32* %9, align 4
  %75 = or i32 %74, %73
  store i32 %75, i32* %9, align 4
  %76 = load i8*, i8** %11, align 4
  %77 = load i8*, i8** %12, align 4
  %78 = icmp uge i8* %76, %77
  br i1 %78, label %79, label %81

; <label>:79:                                     ; preds = %67
  %80 = load i8*, i8** %6, align 4
  store i8* %80, i8** %11, align 4
  br label %81

; <label>:81:                                     ; preds = %79, %67
  %82 = load i32, i32* %9, align 4
  %83 = load i32*, i32** %8, align 4
  %84 = load i32, i32* %7, align 4
  %85 = getelementptr inbounds i32, i32* %83, i32 %84
  %86 = load i32, i32* %85, align 4
  %87 = xor i32 %86, %82
  store i32 %87, i32* %85, align 4
  br label %88

; <label>:88:                                     ; preds = %81
  %89 = load i32, i32* %7, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %7, align 4
  br label %26

; <label>:91:                                     ; preds = %26
  %92 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i32 0, i32 0
  store i32 0, i32* %92, align 4
  %93 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i32 0, i32 1
  store i32 0, i32* %93, align 4
  store i32 0, i32* %7, align 4
  br label %94

; <label>:94:                                     ; preds = %111, %91
  %95 = load i32, i32* %7, align 4
  %96 = icmp slt i32 %95, 18
  br i1 %96, label %97, label %114

; <label>:97:                                     ; preds = %94
  %98 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i32 0, i32 0
  %99 = load %struct.bf_key_st*, %struct.bf_key_st** %4, align 4
  call arm_aapcscc void @BF_encrypt(i32* %98, %struct.bf_key_st* %99, i32 1)
  %100 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i32 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = load i32*, i32** %8, align 4
  %103 = load i32, i32* %7, align 4
  %104 = getelementptr inbounds i32, i32* %102, i32 %103
  store i32 %101, i32* %104, align 4
  %105 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i32 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = load i32*, i32** %8, align 4
  %108 = load i32, i32* %7, align 4
  %109 = add nsw i32 %108, 1
  %110 = getelementptr inbounds i32, i32* %107, i32 %109
  store i32 %106, i32* %110, align 4
  br label %111

; <label>:111:                                    ; preds = %97
  %112 = load i32, i32* %7, align 4
  %113 = add nsw i32 %112, 2
  store i32 %113, i32* %7, align 4
  br label %94

; <label>:114:                                    ; preds = %94
  %115 = load %struct.bf_key_st*, %struct.bf_key_st** %4, align 4
  %116 = getelementptr inbounds %struct.bf_key_st, %struct.bf_key_st* %115, i32 0, i32 1
  %117 = getelementptr inbounds [1024 x i32], [1024 x i32]* %116, i32 0, i32 0
  store i32* %117, i32** %8, align 4
  store i32 0, i32* %7, align 4
  br label %118

; <label>:118:                                    ; preds = %135, %114
  %119 = load i32, i32* %7, align 4
  %120 = icmp slt i32 %119, 1024
  br i1 %120, label %121, label %138

; <label>:121:                                    ; preds = %118
  %122 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i32 0, i32 0
  %123 = load %struct.bf_key_st*, %struct.bf_key_st** %4, align 4
  call arm_aapcscc void @BF_encrypt(i32* %122, %struct.bf_key_st* %123, i32 1)
  %124 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = load i32*, i32** %8, align 4
  %127 = load i32, i32* %7, align 4
  %128 = getelementptr inbounds i32, i32* %126, i32 %127
  store i32 %125, i32* %128, align 4
  %129 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i32 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = load i32*, i32** %8, align 4
  %132 = load i32, i32* %7, align 4
  %133 = add nsw i32 %132, 1
  %134 = getelementptr inbounds i32, i32* %131, i32 %133
  store i32 %130, i32* %134, align 4
  br label %135

; <label>:135:                                    ; preds = %121
  %136 = load i32, i32* %7, align 4
  %137 = add nsw i32 %136, 2
  store i32 %137, i32* %7, align 4
  br label %118

; <label>:138:                                    ; preds = %118
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* nocapture writeonly, i8* nocapture readonly, i32, i32, i1) #1

; Function Attrs: nounwind
define arm_aapcscc i32 @print_test_data() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i32 0, i32 0))
  %4 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3.5, i32 0, i32 0))
  store i32 0, i32* %1, align 4
  br label %5

; <label>:5:                                      ; preds = %57, %0
  %6 = load i32, i32* %1, align 4
  %7 = icmp slt i32 %6, 34
  br i1 %7, label %8, label %60

; <label>:8:                                      ; preds = %5
  store i32 0, i32* %2, align 4
  br label %9

; <label>:9:                                      ; preds = %20, %8
  %10 = load i32, i32* %2, align 4
  %11 = icmp slt i32 %10, 8
  br i1 %11, label %12, label %23

; <label>:12:                                     ; preds = %9
  %13 = load i32, i32* %1, align 4
  %14 = getelementptr inbounds [34 x [8 x i8]], [34 x [8 x i8]]* @ecb_data, i32 0, i32 %13
  %15 = load i32, i32* %2, align 4
  %16 = getelementptr inbounds [8 x i8], [8 x i8]* %14, i32 0, i32 %15
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i32 %18)
  br label %20

; <label>:20:                                     ; preds = %12
  %21 = load i32, i32* %2, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %2, align 4
  br label %9

; <label>:23:                                     ; preds = %9
  %24 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0))
  store i32 0, i32* %2, align 4
  br label %25

; <label>:25:                                     ; preds = %36, %23
  %26 = load i32, i32* %2, align 4
  %27 = icmp slt i32 %26, 8
  br i1 %27, label %28, label %39

; <label>:28:                                     ; preds = %25
  %29 = load i32, i32* %1, align 4
  %30 = getelementptr inbounds [34 x [8 x i8]], [34 x [8 x i8]]* @plain_data, i32 0, i32 %29
  %31 = load i32, i32* %2, align 4
  %32 = getelementptr inbounds [8 x i8], [8 x i8]* %30, i32 0, i32 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i32 %34)
  br label %36

; <label>:36:                                     ; preds = %28
  %37 = load i32, i32* %2, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %2, align 4
  br label %25

; <label>:39:                                     ; preds = %25
  %40 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0))
  store i32 0, i32* %2, align 4
  br label %41

; <label>:41:                                     ; preds = %52, %39
  %42 = load i32, i32* %2, align 4
  %43 = icmp slt i32 %42, 8
  br i1 %43, label %44, label %55

; <label>:44:                                     ; preds = %41
  %45 = load i32, i32* %1, align 4
  %46 = getelementptr inbounds [34 x [8 x i8]], [34 x [8 x i8]]* @cipher_data, i32 0, i32 %45
  %47 = load i32, i32* %2, align 4
  %48 = getelementptr inbounds [8 x i8], [8 x i8]* %46, i32 0, i32 %47
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i32 %50)
  br label %52

; <label>:52:                                     ; preds = %44
  %53 = load i32, i32* %2, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %2, align 4
  br label %41

; <label>:55:                                     ; preds = %41
  %56 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
  br label %57

; <label>:57:                                     ; preds = %55
  %58 = load i32, i32* %1, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %1, align 4
  br label %5

; <label>:60:                                     ; preds = %5
  %61 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i32 0, i32 0))
  %62 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i32 0, i32 0))
  store i32 0, i32* %2, align 4
  br label %63

; <label>:63:                                     ; preds = %72, %60
  %64 = load i32, i32* %2, align 4
  %65 = icmp slt i32 %64, 8
  br i1 %65, label %66, label %75

; <label>:66:                                     ; preds = %63
  %67 = load i32, i32* %2, align 4
  %68 = getelementptr inbounds [8 x i8], [8 x i8]* @key_data, i32 0, i32 %67
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i32 %70)
  br label %72

; <label>:72:                                     ; preds = %66
  %73 = load i32, i32* %2, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %2, align 4
  br label %63

; <label>:75:                                     ; preds = %63
  %76 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
  store i32 0, i32* %1, align 4
  br label %77

; <label>:77:                                     ; preds = %116, %75
  %78 = load i32, i32* %1, align 4
  %79 = icmp slt i32 %78, 24
  br i1 %79, label %80, label %119

; <label>:80:                                     ; preds = %77
  %81 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i32 0, i32 0))
  store i32 0, i32* %2, align 4
  br label %82

; <label>:82:                                     ; preds = %93, %80
  %83 = load i32, i32* %2, align 4
  %84 = icmp slt i32 %83, 8
  br i1 %84, label %85, label %96

; <label>:85:                                     ; preds = %82
  %86 = load i32, i32* %1, align 4
  %87 = getelementptr inbounds [25 x [8 x i8]], [25 x [8 x i8]]* @key_out, i32 0, i32 %86
  %88 = load i32, i32* %2, align 4
  %89 = getelementptr inbounds [8 x i8], [8 x i8]* %87, i32 0, i32 %88
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i32 %91)
  br label %93

; <label>:93:                                     ; preds = %85
  %94 = load i32, i32* %2, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %2, align 4
  br label %82

; <label>:96:                                     ; preds = %82
  %97 = load i32, i32* %1, align 4
  %98 = add nsw i32 %97, 1
  %99 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i32 0, i32 0), i32 %98)
  store i32 0, i32* %2, align 4
  br label %100

; <label>:100:                                    ; preds = %111, %96
  %101 = load i32, i32* %2, align 4
  %102 = load i32, i32* %1, align 4
  %103 = add nsw i32 %102, 1
  %104 = icmp slt i32 %101, %103
  br i1 %104, label %105, label %114

; <label>:105:                                    ; preds = %100
  %106 = load i32, i32* %2, align 4
  %107 = getelementptr inbounds [25 x i8], [25 x i8]* @key_test, i32 0, i32 %106
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i32 %109)
  br label %111

; <label>:111:                                    ; preds = %105
  %112 = load i32, i32* %2, align 4
  %113 = add nsw i32 %112, 1
  store i32 %113, i32* %2, align 4
  br label %100

; <label>:114:                                    ; preds = %100
  %115 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
  br label %116

; <label>:116:                                    ; preds = %114
  %117 = load i32, i32* %1, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %1, align 4
  br label %77

; <label>:119:                                    ; preds = %77
  %120 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i32 0, i32 0))
  %121 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i32 0, i32 0))
  store i32 0, i32* %2, align 4
  br label %122

; <label>:122:                                    ; preds = %131, %119
  %123 = load i32, i32* %2, align 4
  %124 = icmp slt i32 %123, 16
  br i1 %124, label %125, label %134

; <label>:125:                                    ; preds = %122
  %126 = load i32, i32* %2, align 4
  %127 = getelementptr inbounds [16 x i8], [16 x i8]* @cbc_key, i32 0, i32 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i32 %129)
  br label %131

; <label>:131:                                    ; preds = %125
  %132 = load i32, i32* %2, align 4
  %133 = add nsw i32 %132, 1
  store i32 %133, i32* %2, align 4
  br label %122

; <label>:134:                                    ; preds = %122
  %135 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i32 0, i32 0))
  store i32 0, i32* %2, align 4
  br label %136

; <label>:136:                                    ; preds = %145, %134
  %137 = load i32, i32* %2, align 4
  %138 = icmp slt i32 %137, 8
  br i1 %138, label %139, label %148

; <label>:139:                                    ; preds = %136
  %140 = load i32, i32* %2, align 4
  %141 = getelementptr inbounds [8 x i8], [8 x i8]* @cbc_iv, i32 0, i32 %140
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i32 %143)
  br label %145

; <label>:145:                                    ; preds = %139
  %146 = load i32, i32* %2, align 4
  %147 = add nsw i32 %146, 1
  store i32 %147, i32* %2, align 4
  br label %136

; <label>:148:                                    ; preds = %136
  %149 = call arm_aapcscc i32 @strlen(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @cbc_data, i32 0, i32 0))
  %150 = add i32 %149, 1
  %151 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i32 0, i32 0), i32 %150, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @cbc_data, i32 0, i32 0))
  %152 = call arm_aapcscc i32 @strlen(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @cbc_data, i32 0, i32 0))
  %153 = add i32 %152, 1
  %154 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i32 0, i32 0), i32 %153)
  store i32 0, i32* %2, align 4
  br label %155

; <label>:155:                                    ; preds = %166, %148
  %156 = load i32, i32* %2, align 4
  %157 = call arm_aapcscc i32 @strlen(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @cbc_data, i32 0, i32 0))
  %158 = add i32 %157, 1
  %159 = icmp ult i32 %156, %158
  br i1 %159, label %160, label %169

; <label>:160:                                    ; preds = %155
  %161 = load i32, i32* %2, align 4
  %162 = getelementptr inbounds [40 x i8], [40 x i8]* @cbc_data, i32 0, i32 %161
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i32 %164)
  br label %166

; <label>:166:                                    ; preds = %160
  %167 = load i32, i32* %2, align 4
  %168 = add nsw i32 %167, 1
  store i32 %168, i32* %2, align 4
  br label %155

; <label>:169:                                    ; preds = %155
  %170 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
  %171 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i32 0, i32 0))
  %172 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i32 0, i32 0), i32 32)
  store i32 0, i32* %2, align 4
  br label %173

; <label>:173:                                    ; preds = %182, %169
  %174 = load i32, i32* %2, align 4
  %175 = icmp slt i32 %174, 32
  br i1 %175, label %176, label %185

; <label>:176:                                    ; preds = %173
  %177 = load i32, i32* %2, align 4
  %178 = getelementptr inbounds [32 x i8], [32 x i8]* @cbc_ok, i32 0, i32 %177
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i32
  %181 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i32 %180)
  br label %182

; <label>:182:                                    ; preds = %176
  %183 = load i32, i32* %2, align 4
  %184 = add nsw i32 %183, 1
  store i32 %184, i32* %2, align 4
  br label %173

; <label>:185:                                    ; preds = %173
  %186 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
  %187 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i32 0, i32 0))
  %188 = call arm_aapcscc i32 @strlen(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @cbc_data, i32 0, i32 0))
  %189 = add i32 %188, 1
  %190 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i32 0, i32 0), i32 %189)
  store i32 0, i32* %2, align 4
  br label %191

; <label>:191:                                    ; preds = %202, %185
  %192 = load i32, i32* %2, align 4
  %193 = call arm_aapcscc i32 @strlen(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @cbc_data, i32 0, i32 0))
  %194 = add i32 %193, 1
  %195 = icmp ult i32 %192, %194
  br i1 %195, label %196, label %205

; <label>:196:                                    ; preds = %191
  %197 = load i32, i32* %2, align 4
  %198 = getelementptr inbounds [29 x i8], [29 x i8]* @cfb64_ok, i32 0, i32 %197
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i32 %200)
  br label %202

; <label>:202:                                    ; preds = %196
  %203 = load i32, i32* %2, align 4
  %204 = add nsw i32 %203, 1
  store i32 %204, i32* %2, align 4
  br label %191

; <label>:205:                                    ; preds = %191
  %206 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
  %207 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i32 0, i32 0))
  %208 = call arm_aapcscc i32 @strlen(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @cbc_data, i32 0, i32 0))
  %209 = add i32 %208, 1
  %210 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i32 0, i32 0), i32 %209)
  store i32 0, i32* %2, align 4
  br label %211

; <label>:211:                                    ; preds = %222, %205
  %212 = load i32, i32* %2, align 4
  %213 = call arm_aapcscc i32 @strlen(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @cbc_data, i32 0, i32 0))
  %214 = add i32 %213, 1
  %215 = icmp ult i32 %212, %214
  br i1 %215, label %216, label %225

; <label>:216:                                    ; preds = %211
  %217 = load i32, i32* %2, align 4
  %218 = getelementptr inbounds [29 x i8], [29 x i8]* @ofb64_ok, i32 0, i32 %217
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i32
  %221 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i32 %220)
  br label %222

; <label>:222:                                    ; preds = %216
  %223 = load i32, i32* %2, align 4
  %224 = add nsw i32 %223, 1
  store i32 %224, i32* %2, align 4
  br label %211

; <label>:225:                                    ; preds = %211
  %226 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
  ret i32 0
}

declare arm_aapcscc i32 @printf(i8*, ...) #2

declare arm_aapcscc i32 @strlen(i8*) #2

; Function Attrs: nounwind
define arm_aapcscc i32 @main(i32, i8**) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 4
  %6 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 4
  %7 = load i32, i32* %4, align 4
  %8 = icmp sgt i32 %7, 1
  br i1 %8, label %9, label %11

; <label>:9:                                      ; preds = %2
  %10 = call arm_aapcscc i32 @print_test_data()
  store i32 %10, i32* %6, align 4
  br label %13

; <label>:11:                                     ; preds = %2
  %12 = call arm_aapcscc i32 @test()
  store i32 %12, i32* %6, align 4
  br label %13

; <label>:13:                                     ; preds = %11, %9
  %14 = load i32, i32* %6, align 4
  call arm_aapcscc void @exit(i32 %14) #4
  unreachable
                                                  ; No predecessors!
  %16 = load i32, i32* %3, align 4
  ret i32 %16
}

; Function Attrs: nounwind
define arm_aapcscc i32 @test() #0 {
  %1 = alloca [40 x i8], align 1
  %2 = alloca [40 x i8], align 1
  %3 = alloca [8 x i8], align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.bf_key_st, align 4
  %8 = alloca [2 x i32], align 4
  %9 = alloca [8 x i8], align 1
  %10 = alloca i32, align 4
  store i32 0, i32* %6, align 4
  %11 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i32 0, i32 0))
  store i32 0, i32* %5, align 4
  br label %12

; <label>:12:                                     ; preds = %120, %0
  %13 = load i32, i32* %5, align 4
  %14 = icmp slt i32 %13, 2
  br i1 %14, label %15, label %123

; <label>:15:                                     ; preds = %12
  %16 = load i32, i32* %5, align 4
  %17 = getelementptr inbounds [2 x i8*], [2 x i8*]* @bf_key, i32 0, i32 %16
  %18 = load i8*, i8** %17, align 4
  %19 = call arm_aapcscc i32 @strlen(i8* %18)
  %20 = load i32, i32* %5, align 4
  %21 = getelementptr inbounds [2 x i8*], [2 x i8*]* @bf_key, i32 0, i32 %20
  %22 = load i8*, i8** %21, align 4
  call arm_aapcscc void @BF_set_key(%struct.bf_key_st* %7, i32 %19, i8* %22)
  %23 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i32 0, i32 0))
  %24 = load i32, i32* %5, align 4
  %25 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* @bf_plain, i32 0, i32 %24
  %26 = getelementptr inbounds [2 x i32], [2 x i32]* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds [2 x i32], [2 x i32]* %8, i32 0, i32 0
  store i32 %27, i32* %28, align 4
  %29 = load i32, i32* %5, align 4
  %30 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* @bf_plain, i32 0, i32 %29
  %31 = getelementptr inbounds [2 x i32], [2 x i32]* %30, i32 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds [2 x i32], [2 x i32]* %8, i32 0, i32 1
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds [2 x i32], [2 x i32]* %8, i32 0, i32 0
  call arm_aapcscc void @BF_encrypt(i32* %34, %struct.bf_key_st* %7, i32 1)
  %35 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22, i32 0, i32 0))
  %36 = load i32, i32* %5, align 4
  %37 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* @bf_cipher, i32 0, i32 %36
  %38 = getelementptr inbounds [2 x i32], [2 x i32]* %37, i32 0, i32 0
  %39 = bitcast i32* %38 to i8*
  %40 = getelementptr inbounds [2 x i32], [2 x i32]* %8, i32 0, i32 0
  %41 = bitcast i32* %40 to i8*
  %42 = call arm_aapcscc i32 @memcmp(i8* %39, i8* %41, i32 8)
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %76

; <label>:44:                                     ; preds = %15
  %45 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.23, i32 0, i32 0))
  %46 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0))
  store i32 0, i32* %4, align 4
  br label %47

; <label>:47:                                     ; preds = %55, %44
  %48 = load i32, i32* %4, align 4
  %49 = icmp slt i32 %48, 2
  br i1 %49, label %50, label %58

; <label>:50:                                     ; preds = %47
  %51 = load i32, i32* %4, align 4
  %52 = getelementptr inbounds [2 x i32], [2 x i32]* %8, i32 0, i32 %51
  %53 = load i32, i32* %52, align 4
  %54 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 %53)
  br label %55

; <label>:55:                                     ; preds = %50
  %56 = load i32, i32* %4, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %4, align 4
  br label %47

; <label>:58:                                     ; preds = %47
  %59 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
  %60 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i32 0, i32 0))
  store i32 0, i32* %4, align 4
  br label %61

; <label>:61:                                     ; preds = %71, %58
  %62 = load i32, i32* %4, align 4
  %63 = icmp slt i32 %62, 2
  br i1 %63, label %64, label %74

; <label>:64:                                     ; preds = %61
  %65 = load i32, i32* %5, align 4
  %66 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* @bf_cipher, i32 0, i32 %65
  %67 = load i32, i32* %4, align 4
  %68 = getelementptr inbounds [2 x i32], [2 x i32]* %66, i32 0, i32 %67
  %69 = load i32, i32* %68, align 4
  %70 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 %69)
  br label %71

; <label>:71:                                     ; preds = %64
  %72 = load i32, i32* %4, align 4
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %4, align 4
  br label %61

; <label>:74:                                     ; preds = %61
  store i32 1, i32* %6, align 4
  %75 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
  br label %76

; <label>:76:                                     ; preds = %74, %15
  %77 = getelementptr inbounds [2 x i32], [2 x i32]* %8, i32 0, i32 0
  call arm_aapcscc void @BF_encrypt(i32* %77, %struct.bf_key_st* %7, i32 0)
  %78 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i32 0, i32 0))
  %79 = load i32, i32* %5, align 4
  %80 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* @bf_plain, i32 0, i32 %79
  %81 = getelementptr inbounds [2 x i32], [2 x i32]* %80, i32 0, i32 0
  %82 = bitcast i32* %81 to i8*
  %83 = getelementptr inbounds [2 x i32], [2 x i32]* %8, i32 0, i32 0
  %84 = bitcast i32* %83 to i8*
  %85 = call arm_aapcscc i32 @memcmp(i8* %82, i8* %84, i32 8)
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %87, label %119

; <label>:87:                                     ; preds = %76
  %88 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0))
  %89 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0))
  store i32 0, i32* %4, align 4
  br label %90

; <label>:90:                                     ; preds = %98, %87
  %91 = load i32, i32* %4, align 4
  %92 = icmp slt i32 %91, 2
  br i1 %92, label %93, label %101

; <label>:93:                                     ; preds = %90
  %94 = load i32, i32* %4, align 4
  %95 = getelementptr inbounds [2 x i32], [2 x i32]* %8, i32 0, i32 %94
  %96 = load i32, i32* %95, align 4
  %97 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 %96)
  br label %98

; <label>:98:                                     ; preds = %93
  %99 = load i32, i32* %4, align 4
  %100 = add nsw i32 %99, 1
  store i32 %100, i32* %4, align 4
  br label %90

; <label>:101:                                    ; preds = %90
  %102 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
  %103 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i32 0, i32 0))
  store i32 0, i32* %4, align 4
  br label %104

; <label>:104:                                    ; preds = %114, %101
  %105 = load i32, i32* %4, align 4
  %106 = icmp slt i32 %105, 2
  br i1 %106, label %107, label %117

; <label>:107:                                    ; preds = %104
  %108 = load i32, i32* %5, align 4
  %109 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* @bf_plain, i32 0, i32 %108
  %110 = load i32, i32* %4, align 4
  %111 = getelementptr inbounds [2 x i32], [2 x i32]* %109, i32 0, i32 %110
  %112 = load i32, i32* %111, align 4
  %113 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 %112)
  br label %114

; <label>:114:                                    ; preds = %107
  %115 = load i32, i32* %4, align 4
  %116 = add nsw i32 %115, 1
  store i32 %116, i32* %4, align 4
  br label %104

; <label>:117:                                    ; preds = %104
  %118 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
  store i32 1, i32* %6, align 4
  br label %119

; <label>:119:                                    ; preds = %117, %76
  br label %120

; <label>:120:                                    ; preds = %119
  %121 = load i32, i32* %5, align 4
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %5, align 4
  br label %12

; <label>:123:                                    ; preds = %12
  %124 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29, i32 0, i32 0))
  store i32 0, i32* %5, align 4
  br label %125

; <label>:125:                                    ; preds = %220, %123
  %126 = load i32, i32* %5, align 4
  %127 = icmp slt i32 %126, 34
  br i1 %127, label %128, label %223

; <label>:128:                                    ; preds = %125
  %129 = load i32, i32* %5, align 4
  %130 = getelementptr inbounds [34 x [8 x i8]], [34 x [8 x i8]]* @ecb_data, i32 0, i32 %129
  %131 = getelementptr inbounds [8 x i8], [8 x i8]* %130, i32 0, i32 0
  call arm_aapcscc void @BF_set_key(%struct.bf_key_st* %7, i32 8, i8* %131)
  %132 = load i32, i32* %5, align 4
  %133 = getelementptr inbounds [34 x [8 x i8]], [34 x [8 x i8]]* @plain_data, i32 0, i32 %132
  %134 = getelementptr inbounds [8 x i8], [8 x i8]* %133, i32 0, i32 0
  %135 = getelementptr inbounds [8 x i8], [8 x i8]* %9, i32 0, i32 0
  call arm_aapcscc void @BF_ecb_encrypt(i8* %134, i8* %135, %struct.bf_key_st* %7, i32 1)
  %136 = load i32, i32* %5, align 4
  %137 = getelementptr inbounds [34 x [8 x i8]], [34 x [8 x i8]]* @cipher_data, i32 0, i32 %136
  %138 = getelementptr inbounds [8 x i8], [8 x i8]* %137, i32 0, i32 0
  %139 = getelementptr inbounds [8 x i8], [8 x i8]* %9, i32 0, i32 0
  %140 = call arm_aapcscc i32 @memcmp(i8* %138, i8* %139, i32 8)
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %142, label %176

; <label>:142:                                    ; preds = %128
  %143 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.30, i32 0, i32 0))
  %144 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0))
  store i32 0, i32* %4, align 4
  br label %145

; <label>:145:                                    ; preds = %154, %142
  %146 = load i32, i32* %4, align 4
  %147 = icmp slt i32 %146, 8
  br i1 %147, label %148, label %157

; <label>:148:                                    ; preds = %145
  %149 = load i32, i32* %4, align 4
  %150 = getelementptr inbounds [8 x i8], [8 x i8]* %9, i32 0, i32 %149
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i32
  %153 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 0), i32 %152)
  br label %154

; <label>:154:                                    ; preds = %148
  %155 = load i32, i32* %4, align 4
  %156 = add nsw i32 %155, 1
  store i32 %156, i32* %4, align 4
  br label %145

; <label>:157:                                    ; preds = %145
  %158 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
  %159 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i32 0, i32 0))
  store i32 0, i32* %4, align 4
  br label %160

; <label>:160:                                    ; preds = %171, %157
  %161 = load i32, i32* %4, align 4
  %162 = icmp slt i32 %161, 8
  br i1 %162, label %163, label %174

; <label>:163:                                    ; preds = %160
  %164 = load i32, i32* %5, align 4
  %165 = getelementptr inbounds [34 x [8 x i8]], [34 x [8 x i8]]* @cipher_data, i32 0, i32 %164
  %166 = load i32, i32* %4, align 4
  %167 = getelementptr inbounds [8 x i8], [8 x i8]* %165, i32 0, i32 %166
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i32
  %170 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 0), i32 %169)
  br label %171

; <label>:171:                                    ; preds = %163
  %172 = load i32, i32* %4, align 4
  %173 = add nsw i32 %172, 1
  store i32 %173, i32* %4, align 4
  br label %160

; <label>:174:                                    ; preds = %160
  store i32 1, i32* %6, align 4
  %175 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
  br label %176

; <label>:176:                                    ; preds = %174, %128
  %177 = getelementptr inbounds [8 x i8], [8 x i8]* %9, i32 0, i32 0
  %178 = getelementptr inbounds [8 x i8], [8 x i8]* %9, i32 0, i32 0
  call arm_aapcscc void @BF_ecb_encrypt(i8* %177, i8* %178, %struct.bf_key_st* %7, i32 0)
  %179 = load i32, i32* %5, align 4
  %180 = getelementptr inbounds [34 x [8 x i8]], [34 x [8 x i8]]* @plain_data, i32 0, i32 %179
  %181 = getelementptr inbounds [8 x i8], [8 x i8]* %180, i32 0, i32 0
  %182 = getelementptr inbounds [8 x i8], [8 x i8]* %9, i32 0, i32 0
  %183 = call arm_aapcscc i32 @memcmp(i8* %181, i8* %182, i32 8)
  %184 = icmp ne i32 %183, 0
  br i1 %184, label %185, label %219

; <label>:185:                                    ; preds = %176
  %186 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.32, i32 0, i32 0))
  %187 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0))
  store i32 0, i32* %4, align 4
  br label %188

; <label>:188:                                    ; preds = %197, %185
  %189 = load i32, i32* %4, align 4
  %190 = icmp slt i32 %189, 8
  br i1 %190, label %191, label %200

; <label>:191:                                    ; preds = %188
  %192 = load i32, i32* %4, align 4
  %193 = getelementptr inbounds [8 x i8], [8 x i8]* %9, i32 0, i32 %192
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 0), i32 %195)
  br label %197

; <label>:197:                                    ; preds = %191
  %198 = load i32, i32* %4, align 4
  %199 = add nsw i32 %198, 1
  store i32 %199, i32* %4, align 4
  br label %188

; <label>:200:                                    ; preds = %188
  %201 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
  %202 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i32 0, i32 0))
  store i32 0, i32* %4, align 4
  br label %203

; <label>:203:                                    ; preds = %214, %200
  %204 = load i32, i32* %4, align 4
  %205 = icmp slt i32 %204, 8
  br i1 %205, label %206, label %217

; <label>:206:                                    ; preds = %203
  %207 = load i32, i32* %5, align 4
  %208 = getelementptr inbounds [34 x [8 x i8]], [34 x [8 x i8]]* @plain_data, i32 0, i32 %207
  %209 = load i32, i32* %4, align 4
  %210 = getelementptr inbounds [8 x i8], [8 x i8]* %208, i32 0, i32 %209
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i32
  %213 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 0), i32 %212)
  br label %214

; <label>:214:                                    ; preds = %206
  %215 = load i32, i32* %4, align 4
  %216 = add nsw i32 %215, 1
  store i32 %216, i32* %4, align 4
  br label %203

; <label>:217:                                    ; preds = %203
  %218 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
  store i32 1, i32* %6, align 4
  br label %219

; <label>:219:                                    ; preds = %217, %176
  br label %220

; <label>:220:                                    ; preds = %219
  %221 = load i32, i32* %5, align 4
  %222 = add nsw i32 %221, 1
  store i32 %222, i32* %5, align 4
  br label %125

; <label>:223:                                    ; preds = %125
  %224 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.33, i32 0, i32 0))
  store i32 1, i32* %5, align 4
  br label %225

; <label>:225:                                    ; preds = %241, %223
  %226 = load i32, i32* %5, align 4
  %227 = icmp slt i32 %226, 25
  br i1 %227, label %228, label %244

; <label>:228:                                    ; preds = %225
  %229 = load i32, i32* %5, align 4
  call arm_aapcscc void @BF_set_key(%struct.bf_key_st* %7, i32 %229, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @key_test, i32 0, i32 0))
  %230 = getelementptr inbounds [8 x i8], [8 x i8]* %9, i32 0, i32 0
  call arm_aapcscc void @BF_ecb_encrypt(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @key_data, i32 0, i32 0), i8* %230, %struct.bf_key_st* %7, i32 1)
  %231 = getelementptr inbounds [8 x i8], [8 x i8]* %9, i32 0, i32 0
  %232 = load i32, i32* %5, align 4
  %233 = sub nsw i32 %232, 1
  %234 = getelementptr inbounds [25 x [8 x i8]], [25 x [8 x i8]]* @key_out, i32 0, i32 %233
  %235 = getelementptr inbounds [8 x i8], [8 x i8]* %234, i32 0, i32 0
  %236 = call arm_aapcscc i32 @memcmp(i8* %231, i8* %235, i32 8)
  %237 = icmp ne i32 %236, 0
  br i1 %237, label %238, label %240

; <label>:238:                                    ; preds = %228
  %239 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i32 0, i32 0))
  store i32 1, i32* %6, align 4
  br label %240

; <label>:240:                                    ; preds = %238, %228
  br label %241

; <label>:241:                                    ; preds = %240
  %242 = load i32, i32* %5, align 4
  %243 = add nsw i32 %242, 1
  store i32 %243, i32* %5, align 4
  br label %225

; <label>:244:                                    ; preds = %225
  %245 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i32 0, i32 0))
  %246 = call arm_aapcscc i32 @strlen(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @cbc_data, i32 0, i32 0))
  %247 = add i32 %246, 1
  store i32 %247, i32* %10, align 4
  call arm_aapcscc void @BF_set_key(%struct.bf_key_st* %7, i32 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @cbc_key, i32 0, i32 0))
  %248 = getelementptr inbounds [40 x i8], [40 x i8]* %1, i32 0, i32 0
  call void @llvm.memset.p0i8.i32(i8* %248, i8 0, i32 40, i32 1, i1 false)
  %249 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i32 0, i32 0
  call void @llvm.memset.p0i8.i32(i8* %249, i8 0, i32 40, i32 1, i1 false)
  %250 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %250, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cbc_iv, i32 0, i32 0), i32 8, i32 1, i1 false)
  %251 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i32 0, i32 0
  %252 = load i32, i32* %10, align 4
  %253 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 0
  call arm_aapcscc void @BF_cbc_encrypt(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @cbc_data, i32 0, i32 0), i8* %251, i32 %252, %struct.bf_key_st* %7, i8* %253, i32 1)
  %254 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i32 0, i32 0
  %255 = call arm_aapcscc i32 @memcmp(i8* %254, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @cbc_ok, i32 0, i32 0), i32 32)
  %256 = icmp ne i32 %255, 0
  br i1 %256, label %257, label %272

; <label>:257:                                    ; preds = %244
  store i32 1, i32* %6, align 4
  %258 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.36, i32 0, i32 0))
  store i32 0, i32* %4, align 4
  br label %259

; <label>:259:                                    ; preds = %268, %257
  %260 = load i32, i32* %4, align 4
  %261 = icmp slt i32 %260, 32
  br i1 %261, label %262, label %271

; <label>:262:                                    ; preds = %259
  %263 = load i32, i32* %4, align 4
  %264 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i32 0, i32 %263
  %265 = load i8, i8* %264, align 1
  %266 = zext i8 %265 to i32
  %267 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i32 0, i32 0), i32 %266)
  br label %268

; <label>:268:                                    ; preds = %262
  %269 = load i32, i32* %4, align 4
  %270 = add nsw i32 %269, 1
  store i32 %270, i32* %4, align 4
  br label %259

; <label>:271:                                    ; preds = %259
  br label %272

; <label>:272:                                    ; preds = %271, %244
  %273 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %273, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cbc_iv, i32 0, i32 0), i32 8, i32 1, i1 false)
  %274 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i32 0, i32 0
  %275 = getelementptr inbounds [40 x i8], [40 x i8]* %1, i32 0, i32 0
  %276 = load i32, i32* %10, align 4
  %277 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 0
  call arm_aapcscc void @BF_cbc_encrypt(i8* %274, i8* %275, i32 %276, %struct.bf_key_st* %7, i8* %277, i32 0)
  %278 = getelementptr inbounds [40 x i8], [40 x i8]* %1, i32 0, i32 0
  %279 = call arm_aapcscc i32 @strlen(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @cbc_data, i32 0, i32 0))
  %280 = add i32 %279, 1
  %281 = call arm_aapcscc i32 @memcmp(i8* %278, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @cbc_data, i32 0, i32 0), i32 %280)
  %282 = icmp ne i32 %281, 0
  br i1 %282, label %283, label %285

; <label>:283:                                    ; preds = %272
  %284 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.38, i32 0, i32 0))
  store i32 1, i32* %6, align 4
  br label %285

; <label>:285:                                    ; preds = %283, %272
  %286 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.39, i32 0, i32 0))
  call arm_aapcscc void @BF_set_key(%struct.bf_key_st* %7, i32 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @cbc_key, i32 0, i32 0))
  %287 = getelementptr inbounds [40 x i8], [40 x i8]* %1, i32 0, i32 0
  call void @llvm.memset.p0i8.i32(i8* %287, i8 0, i32 40, i32 1, i1 false)
  %288 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i32 0, i32 0
  call void @llvm.memset.p0i8.i32(i8* %288, i8 0, i32 40, i32 1, i1 false)
  %289 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %289, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cbc_iv, i32 0, i32 0), i32 8, i32 1, i1 false)
  store i32 0, i32* %5, align 4
  %290 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i32 0, i32 0
  %291 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 0
  call arm_aapcscc void @BF_cfb64_encrypt(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @cbc_data, i32 0, i32 0), i8* %290, i32 13, %struct.bf_key_st* %7, i8* %291, i32* %5, i32 1)
  %292 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i32 0, i32 13
  %293 = load i32, i32* %10, align 4
  %294 = sub i32 %293, 13
  %295 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 0
  call arm_aapcscc void @BF_cfb64_encrypt(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @cbc_data, i32 0, i32 13), i8* %292, i32 %294, %struct.bf_key_st* %7, i8* %295, i32* %5, i32 1)
  %296 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i32 0, i32 0
  %297 = load i32, i32* %10, align 4
  %298 = call arm_aapcscc i32 @memcmp(i8* %296, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @cfb64_ok, i32 0, i32 0), i32 %297)
  %299 = icmp ne i32 %298, 0
  br i1 %299, label %300, label %316

; <label>:300:                                    ; preds = %285
  store i32 1, i32* %6, align 4
  %301 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.40, i32 0, i32 0))
  store i32 0, i32* %4, align 4
  br label %302

; <label>:302:                                    ; preds = %312, %300
  %303 = load i32, i32* %4, align 4
  %304 = load i32, i32* %10, align 4
  %305 = icmp slt i32 %303, %304
  br i1 %305, label %306, label %315

; <label>:306:                                    ; preds = %302
  %307 = load i32, i32* %4, align 4
  %308 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i32 0, i32 %307
  %309 = load i8, i8* %308, align 1
  %310 = zext i8 %309 to i32
  %311 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i32 0, i32 0), i32 %310)
  br label %312

; <label>:312:                                    ; preds = %306
  %313 = load i32, i32* %4, align 4
  %314 = add nsw i32 %313, 1
  store i32 %314, i32* %4, align 4
  br label %302

; <label>:315:                                    ; preds = %302
  br label %316

; <label>:316:                                    ; preds = %315, %285
  store i32 0, i32* %5, align 4
  %317 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %317, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cbc_iv, i32 0, i32 0), i32 8, i32 1, i1 false)
  %318 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i32 0, i32 0
  %319 = getelementptr inbounds [40 x i8], [40 x i8]* %1, i32 0, i32 0
  %320 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 0
  call arm_aapcscc void @BF_cfb64_encrypt(i8* %318, i8* %319, i32 17, %struct.bf_key_st* %7, i8* %320, i32* %5, i32 0)
  %321 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i32 0, i32 17
  %322 = getelementptr inbounds [40 x i8], [40 x i8]* %1, i32 0, i32 17
  %323 = load i32, i32* %10, align 4
  %324 = sub i32 %323, 17
  %325 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 0
  call arm_aapcscc void @BF_cfb64_encrypt(i8* %321, i8* %322, i32 %324, %struct.bf_key_st* %7, i8* %325, i32* %5, i32 0)
  %326 = getelementptr inbounds [40 x i8], [40 x i8]* %1, i32 0, i32 0
  %327 = load i32, i32* %10, align 4
  %328 = call arm_aapcscc i32 @memcmp(i8* %326, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @cbc_data, i32 0, i32 0), i32 %327)
  %329 = icmp ne i32 %328, 0
  br i1 %329, label %330, label %332

; <label>:330:                                    ; preds = %316
  %331 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.41, i32 0, i32 0))
  store i32 1, i32* %6, align 4
  br label %332

; <label>:332:                                    ; preds = %330, %316
  %333 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.42, i32 0, i32 0))
  call arm_aapcscc void @BF_set_key(%struct.bf_key_st* %7, i32 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @cbc_key, i32 0, i32 0))
  %334 = getelementptr inbounds [40 x i8], [40 x i8]* %1, i32 0, i32 0
  call void @llvm.memset.p0i8.i32(i8* %334, i8 0, i32 40, i32 1, i1 false)
  %335 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i32 0, i32 0
  call void @llvm.memset.p0i8.i32(i8* %335, i8 0, i32 40, i32 1, i1 false)
  %336 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %336, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cbc_iv, i32 0, i32 0), i32 8, i32 1, i1 false)
  store i32 0, i32* %5, align 4
  %337 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i32 0, i32 0
  %338 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 0
  call arm_aapcscc void @BF_ofb64_encrypt(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @cbc_data, i32 0, i32 0), i8* %337, i32 13, %struct.bf_key_st* %7, i8* %338, i32* %5)
  %339 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i32 0, i32 13
  %340 = load i32, i32* %10, align 4
  %341 = sub i32 %340, 13
  %342 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 0
  call arm_aapcscc void @BF_ofb64_encrypt(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @cbc_data, i32 0, i32 13), i8* %339, i32 %341, %struct.bf_key_st* %7, i8* %342, i32* %5)
  %343 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i32 0, i32 0
  %344 = load i32, i32* %10, align 4
  %345 = call arm_aapcscc i32 @memcmp(i8* %343, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @ofb64_ok, i32 0, i32 0), i32 %344)
  %346 = icmp ne i32 %345, 0
  br i1 %346, label %347, label %363

; <label>:347:                                    ; preds = %332
  store i32 1, i32* %6, align 4
  %348 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.43, i32 0, i32 0))
  store i32 0, i32* %4, align 4
  br label %349

; <label>:349:                                    ; preds = %359, %347
  %350 = load i32, i32* %4, align 4
  %351 = load i32, i32* %10, align 4
  %352 = icmp slt i32 %350, %351
  br i1 %352, label %353, label %362

; <label>:353:                                    ; preds = %349
  %354 = load i32, i32* %4, align 4
  %355 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i32 0, i32 %354
  %356 = load i8, i8* %355, align 1
  %357 = zext i8 %356 to i32
  %358 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i32 0, i32 0), i32 %357)
  br label %359

; <label>:359:                                    ; preds = %353
  %360 = load i32, i32* %4, align 4
  %361 = add nsw i32 %360, 1
  store i32 %361, i32* %4, align 4
  br label %349

; <label>:362:                                    ; preds = %349
  br label %363

; <label>:363:                                    ; preds = %362, %332
  store i32 0, i32* %5, align 4
  %364 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %364, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cbc_iv, i32 0, i32 0), i32 8, i32 1, i1 false)
  %365 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i32 0, i32 0
  %366 = getelementptr inbounds [40 x i8], [40 x i8]* %1, i32 0, i32 0
  %367 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 0
  call arm_aapcscc void @BF_ofb64_encrypt(i8* %365, i8* %366, i32 17, %struct.bf_key_st* %7, i8* %367, i32* %5)
  %368 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i32 0, i32 17
  %369 = getelementptr inbounds [40 x i8], [40 x i8]* %1, i32 0, i32 17
  %370 = load i32, i32* %10, align 4
  %371 = sub i32 %370, 17
  %372 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 0
  call arm_aapcscc void @BF_ofb64_encrypt(i8* %368, i8* %369, i32 %371, %struct.bf_key_st* %7, i8* %372, i32* %5)
  %373 = getelementptr inbounds [40 x i8], [40 x i8]* %1, i32 0, i32 0
  %374 = load i32, i32* %10, align 4
  %375 = call arm_aapcscc i32 @memcmp(i8* %373, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @cbc_data, i32 0, i32 0), i32 %374)
  %376 = icmp ne i32 %375, 0
  br i1 %376, label %377, label %379

; <label>:377:                                    ; preds = %363
  %378 = call arm_aapcscc i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.44, i32 0, i32 0))
  store i32 1, i32* %6, align 4
  br label %379

; <label>:379:                                    ; preds = %377, %363
  %380 = load i32, i32* %6, align 4
  ret i32 %380
}

; Function Attrs: noreturn
declare arm_aapcscc void @exit(i32) #3

declare arm_aapcscc i32 @memcmp(i8*, i8*, i32) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i32, i1) #1

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="cortex-a8" "target-features"="+dsp,+neon,+vfp3,-crypto,-d16,-fp-armv8,-fp-only-sp,-fp16,-vfp4" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="cortex-a8" "target-features"="+dsp,+neon,+vfp3,-crypto,-d16,-fp-armv8,-fp-only-sp,-fp16,-vfp4" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="cortex-a8" "target-features"="+dsp,+neon,+vfp3,-crypto,-d16,-fp-armv8,-fp-only-sp,-fp16,-vfp4" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1, !2}

!0 = !{!"clang version 4.0.0 (trunk)"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 1, !"min_enum_size", i32 4}
